[
  {
    "key": "csdl-91-03",
    "type": "inproceedings",
    "title": "The EGRET Project: Exploring Open, Evolutionary, and Emergent Collaborative Systems",
    "year": 1991,
    "month": "September",
    "abstract": "The EGRET Project at the University of Hawaii is pursuing a research\r\nprogram designed to investigate evolution in collaborative systems.\r\nEvolution is of central concern due to the exploratory nature of many\r\nCSCW application areas, including software development, document\r\npreparation, issue generation and discussion, and so forth.  In\r\nexploratory domains, the ill-defined or changing nature of both the\r\nproblem and an acceptable solution to it impose special demands.  For\r\nexample, the criteria for an acceptable solution, or the solution\r\ngeneration method may be an an emergent property of the exploratory\r\nprocess.  This paper discusses our research paradigm and initial progress.",
    "booktitle": "Proceedings of the 1991 ECSCW Developer's Workshop",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET",
      "Pubs-Workshop"
    ],
    "sortKey": 199109
  },
  {
    "key": "csdl-92-01",
    "type": "inproceedings",
    "title": "Supporting Exploratory CSCW with the EGRET Framework",
    "year": 1992,
    "month": "November",
    "abstract": "Exploratory collaboration occurs in domains where the structure and process\r\nof group work evolves as an intrinsic part of the collaborative activity.\r\nTraditional database and hypertext structural models do not provide\r\nexplicit support for collaborative exploration.  The EGRET framework\r\ndefines both a data and a process model along with supporting analysis\r\ntechniques that provide novel support for exploratory collaboration.  To do\r\nso, the EGRET framework breaks with traditional notions of the relationship\r\nbetween schema and instance structure.  In EGRET, schema structure is\r\nviewed as a representation of the current state of consensus among\r\ncollaborators, from which instance structure is allowed to depart in a\r\ncontrolled fashion.  This paper discusses the issues of exploratory\r\ncollaboration, the EGRET approach to its support, and the current status of\r\nthis research.",
    "booktitle": "Proceedings of the 1992 Conference on Computer Supported Cooperative Work",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET",
      "Pubs-Conference"
    ],
    "sortKey": 199211
  },
  {
    "key": "csdl-92-02",
    "type": "techreport",
    "title": "Co2ReView: A Collaborative Code Inspection and Review Environment",
    "year": 1992,
    "month": "April",
    "abstract": "This is an early paper articulating ideas that were later\r\n  elaborated and refined in research on CSRS.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-92-02",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199204
  },
  {
    "key": "csdl-92-03",
    "type": "inproceedings",
    "title": "Supporting Scientific Learning and Research Review Using COREVIEW",
    "year": 1992,
    "month": "July",
    "abstract": "Scientific learning and research are becoming increasingly\r\n  computerized. More and more such activities are mediated through\r\n  electronic artifacts. This paper presents an artifact-based system\r\n  called COREVIEW, to be used in the domain of research seminars. The\r\n  emphasis of our approach is on the centrality of textualized artifacts\r\n  in seminar activities, the relationship between different types of\r\n  artifacts, and the dynamic interactions among them over time. Our\r\n  system provides explicit representation of research artifacts and their\r\n  structures, and support for the process of collaborative artifact\r\n  generation, integration, manipulation and utilization.",
    "booktitle": "Proceedings of the 1992 AAAI Workshop on Communicating Scientific and Technical Knowledge",
    "authors": [
      "Dadong Wan",
      "Philip M. Johnson"
    ],
    "keywords": [
      "CLARE",
      "Pubs-Workshop"
    ],
    "sortKey": 199207
  },
  {
    "key": "csdl-92-04",
    "type": "inproceedings",
    "title": "Collaborative Software Review for Capturing Design Rationale",
    "year": 1992,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/1992/92-04/92-04.ps",
    "abstract": "This paper discusses connections between\r\ncollaborative software review and design rationale.  Not\r\nsurprisingly, collaborative software review activities provide an\r\nexcellent source of design rationale information, since analysis of\r\nartifacts under review often involves design justifications and\r\nalternatives.  Also, software reviews form an interesting point\r\nat which to take a discrete \\`\\`snapshot'' in the historical record of\r\ndesign, since they tend to take place only when the software is in a\r\nrelatively consistent and coherent state.  Finally, an exploratory\r\nfocus upon collaborative software review leads to a interesting variation on concurrent orientations\r\ntoward design and implementation.",
    "booktitle": "Proceedings of the AAAI 1992 Workshop on Design Rationale",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Workshop"
    ],
    "sortKey": 199207
  },
  {
    "key": "csdl-92-05",
    "type": "techreport",
    "title": "Supporting Collaborative Learning Through Research Reviews",
    "year": 1992,
    "month": "May",
    "abstract": "Research literature is not merely a formal vehicle for disseminating the\r\nresults of scientific research; it is also an important learning resource\r\nfor advanced learners (e.g., graduate students) and beginning researchers.\r\nThe purpose of this research is to investigate the structural and\r\nprocess-level characteristics of research review as a collaborative\r\nactivity, and to develop computational mechanisms to facilitate such a\r\nprocess. This paper briefly summarizes our ongoing efforts of developing a\r\nsoftware environment, called COREVIEW, for supporting collaborative\r\nresearch review.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-92-05",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE"
    ],
    "sortKey": 199205
  },
  {
    "key": "csdl-92-06",
    "type": "techreport",
    "title": "COREVIEW: A Tool for Supporting Collaborative Learning in Seminars",
    "year": 1992,
    "month": "September",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-92-06",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE"
    ],
    "sortKey": 199209
  },
  {
    "key": "csdl-92-07",
    "type": "inproceedings",
    "title": "Improving Software Quality through Computer Supported Collaborative Review",
    "year": 1993,
    "month": "September",
    "abstract": "Formal technical review (FTR) is a cornerstone of software quality\r\nassurance.  However, the labor intensive and manual nature of review, along\r\nwith basic unresolved questions about its process and products, means that\r\nreview is typically under-utilized or inefficiently applied within the\r\nsoftware development process. This paper introduces CSRS, a\r\ncomputer-supported cooperative work environment for software review that\r\nimproves the efficiency of review activities and supports empirical\r\ninvestigation of the appropriate parameters for review. The paper presents\r\na typical scenario of CSRS in review, its data and process model,\r\napplication to process maturation, relationship to other research, current\r\nstatus, and future directions.",
    "booktitle": "Proceedings of the Third European Conference on Computer Supported Cooperative Work",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Conference"
    ],
    "sortKey": 199309
  },
  {
    "key": "csdl-92-08",
    "type": "inproceedings",
    "title": "An Architectural Perspective on EGRET",
    "year": 1992,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1992/92-08/92-08.ps",
    "abstract": "This paper provides an introduction to the internal\r\narchitecture of EGRET, including the client-server model,\r\nthe inverted hypertext-relational database process model,\r\nthe design of locally cached, event-updated global\r\ntables, and various forms of interoperability provided\r\nin the system.",
    "booktitle": "Proceedings of the 1992 CSCW Workshop on Tools and Technologies",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET",
      "Pubs-Workshop"
    ],
    "sortKey": 199211
  },
  {
    "key": "csdl-92-09",
    "type": "article",
    "title": "Architectural Concerns in EGRET",
    "year": 1993,
    "month": "April",
    "journal": "SIGOIS Bulletin",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199304
  },
  {
    "key": "csdl-92-10",
    "type": "techreport",
    "title": "Reverse Engineering Collaboration Structures in Usenet",
    "year": 1992,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1992/92-10/92-10.text",
    "abstract": "This plain-text file, which was posted to USENET, contains an\r\n\"alpha-level\" proposal concerning a \"reverse-engineering\"\r\napproach to improving the collaborative nature of\r\nUSENET.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-92-10",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "URN"
    ],
    "sortKey": 199212
  },
  {
    "key": "csdl-92-11",
    "type": "techreport",
    "title": "CSRS Design Specification",
    "year": 1993,
    "month": "December",
    "abstract": "Obsolete: See the CSRS system release for current design documentation.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-92-11",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199312
  },
  {
    "key": "csdl-93-01",
    "type": "techreport",
    "title": "CLARE: A Computer-Supported Collaborative Learning Environment Based on the Thematic Structure of Research and Learning Artifacts",
    "year": 1993,
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-01/thesis-p.pdf",
    "abstract": "This research concerns the representation issue in collaborative learning\r\nenvironments. Our basic claim is that knowledge representation is not only\r\nfundamental to machine learning, as shown by AI researchers, but also\r\nessential to human learning, in particular, human metalearning.  Few\r\nexisting learning support systems, however, provide representations which\r\nhelp the learner make sense of and organize the subject content of\r\nlearning, integrate a wide range of classroom activities, (e.g., reading,\r\nreviewing, writing, discussion), and compare and contrast various\r\nviewpoints from individual learners.  It is our primary purpose to\r\nconstruct an example instance of such a representation, and to show that\r\nuseful computational manipulations can be performed on it, and that the\r\ncombination of the representation and related computational services can\r\nactually lead to the improved learner's performance on selected\r\ncollaborative learning tasks.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-01",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE",
      "Thesis-Proposal"
    ],
    "sortKey": 199301
  },
  {
    "key": "csdl-93-02",
    "type": "techreport",
    "title": "EGRET Requirements Specification",
    "year": 1993,
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-02/93-02.ps",
    "abstract": "This document presents an general overview of the software engineering\r\nprinciples underlying the Egret system and its applications. It is an\r\nintroduction and a companion to the more detailed Design Specification\r\ndocument for Egret which is generated by the DSB system.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-02",
    "authors": [
      "Philip M. Johnson",
      "Dadong Wan",
      "Danu Tjahjono",
      "Kiran Kavoori Ram",
      "Robert S. Brewer"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199304
  },
  {
    "key": "csdl-93-03",
    "type": "techreport",
    "title": "CLARE: a New Approach to Computer-Supported Collaborative Learning",
    "year": 1993,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-03/93-03.ps.gz",
    "abstract": "This paper concerns collaborative learning as an active knowledge\r\nconstruction processes. It asserts an essential role of knowledge\r\nrepresentation in achieving a high-level collaborative support. Our central\r\nclaim is that the presence of an expressive and usable representation,\r\ncombined with necessary computational support, can significantly enhance\r\nthe learners' performance in understanding the subject content of learning\r\nartifacts, integrating various classroom activities, and relating different\r\nviewpoints held by other learners. First, we propose a representational\r\nframework, called RESRA, which characterizes the thematic structure of\r\nlearning and research artifacts. We then develop a computer-based tool,\r\ncalled CLARE, that facilitates the use of RESRA for various collaborative\r\nlearning tasks, such as evaluating existing work (e.g., papers, programs,\r\ndesign) or constructing new work. We also design a set of experiments which\r\nwill allow us to empirically assess the effectiveness of CLARE and our\r\nresearch claims.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-03",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE"
    ],
    "sortKey": 199305
  },
  {
    "key": "csdl-93-04",
    "type": "techreport",
    "title": "CSRS: a New Approach to Software Review",
    "year": 1993,
    "month": "May",
    "abstract": "This research concerns problems in collaborative software review.\r\nThis paper introduces a review system called CSRS (Collaborative Software\r\nReview System) that allows one to\r\nexperiment with  various aspects of review process, to compare\r\ndifferent review methods,  and at the same\r\ntime to use it as practical tools for supporting review activities.\r\nThe system also allows the user's organization to analyze and\r\nto improve their review process based upon metrics data collected by\r\nthe system automatically.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-04",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199305
  },
  {
    "key": "csdl-93-05",
    "type": "techreport",
    "title": "DSB: The Next Generation Tool for Software Engineers",
    "year": 1993,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-05/Dsb-TR.pdf",
    "abstract": "During the development of software projects, there\r\n   always exists the problem of design specification\r\n   maintenance.  As the project team surges ahead\r\n   with the development process, there is a strong\r\n   need to maintain an up-to-date documentation of\r\n   the current system.  This requires an additional\r\n   effort on each team member to maintain a\r\n   consistent report of the modifications and\r\n   additions they make on the system.\r\n\r\nThis Designbase project attempts to reduce the overhead involved in\r\nthe maintenance of ever changing design specifications, by generating\r\nautomatically, a design documentation from the source code and the\r\noverview files that are maintained along with the system.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-05",
    "authors": [
      "Kiran Kavoori Ram"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199305
  },
  {
    "key": "csdl-93-06",
    "type": "techreport",
    "title": "URN: A New Way To Think About Usenet",
    "year": 1993,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-06/TR1.7.pdf",
    "abstract": "This document presents an overview of the URN project. It is intended\r\nto show the motivation behind the project as well as describing the\r\ncurrent status of the research.\r\n\r\nThe URN project is an Egret application that implements a new paradigm for\r\nutilizing the massive, ever-changing data stream that is Usenet.  The\r\nacronym URN stands for Ultimate Read News, but it can also be thought of\r\nmore symbolically as a repository for knowledge. The goal of URN is to\r\nmake the information available through Usenet more useful by using different\r\nperspectives on Usenet and new ways to extract useful data from Usenet.\r\nThis paper describes problems with USENET, the way URN is intended to\r\n  address\r\nthese problems, and the current status and future directions of the\r\n  project.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-06",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "URN"
    ],
    "sortKey": 199305
  },
  {
    "key": "csdl-93-07",
    "type": "inproceedings",
    "title": "Experiences with CSRS: An Instrumented Software Review\r\n  Environment",
    "year": 1993,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-07/93-07.pdf",
    "abstract": "Formal technical review (FTR) is a cornerstone of software quality\r\nassurance.  However, the labor-intensive and manual nature of review, along\r\nwith basic unresolved questions about its process and products, means that\r\nreview is typically under-utilized or inefficiently applied within the\r\nsoftware development process. This paper discusses our initial experiments\r\nusing CSRS, an instrumented, computer-supported cooperative work\r\nenvironment for software review that reduces the manual, labor-intensive\r\nnature of review activities and supports quantitative study of the process\r\nand products of review. Our results indicate that CSRS increases both the\r\nbreadth and depth of information captured per person-hour of review time,\r\nand that its design captures interesting measures of review process,\r\nproducts, and effort.",
    "booktitle": "Proceedings of the Pacific Northwest Software Quality Conference",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono",
      "Dadong Wan",
      "Robert S. Brewer"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Conference"
    ],
    "sortKey": 199310
  },
  {
    "key": "csdl-93-09",
    "type": "article",
    "title": "Experiences with EGRET: An Exploratory Group Work Environment",
    "year": 1994,
    "month": "January",
    "abstract": "Exploratory collaboration occurs in domains where the structure and process\r\nof group work evolves as an intrinsic part of the collaborative activity.\r\nTraditional database and hypertext structural models do not provide\r\nexplicit support for collaborative exploration.  EGRET is an implemented\r\nenvironment for the development of domain-specific collaborative systems\r\nthat defines a novel data and a process model along with services for\r\nexploratory collaboration.  To accomplish this, EGRET departs from\r\ntraditional notions of the relationship between schema and instance\r\nstructure.  In EGRET, schema structure is viewed as a representation of the\r\ncurrent state of consensus among collaborators, from which instance\r\nstructure is allowed to depart in a controlled fashion.  To provide such\r\nexploratory services in a responsive interactive environment, EGRET\r\nimplements specialized architectural mechanisms. This paper presents the\r\nconcepts and implications of exploratory collaboration, followed by the\r\ndesign and implementation of EGRET.  The paper concludes with our results\r\nto date, which demonstrate that EGRET succeeds in providing useful services\r\nfor exploratory collaboration, through interesting technical and cultural\r\nissues remain to be addressed before exploratory collaboration can become\r\ncommonplace in CSCW systems.",
    "journal": "Collaborative Computing",
    "volume": "1",
    "number": "1",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET",
      "Pubs-Journal"
    ],
    "sortKey": 199401
  },
  {
    "key": "csdl-93-11",
    "type": "techreport",
    "title": "CSRS User Guide",
    "year": 1993,
    "month": "July",
    "abstract": "This document provides an illustrated user guide to CSRS\r\n  Version 2.x",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-11",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199307
  },
  {
    "key": "csdl-93-12",
    "type": "techreport",
    "title": "Improving Software Quality through Formal Technical Review: A Research Agenda",
    "year": 1993,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-12/ftr-agenda93.ps",
    "abstract": "Formal technical review (FTR) encompasses a range of structured,\r\ncollaborative methods employing technical personnel to improve the quality\r\nof a software development artifact.  Research shows that FTR, when\r\nappropriately practiced, provides significant benefits. However, research\r\nalso shows that FTR introduces substantial new overhead, and that its\r\ncost-effectiveness is easily compromised by a variety of group process\r\nobstacles.  In addition, current FTR practice is difficult and costly to\r\ninvestigate effectively, and thus many important questions about its nature\r\nand comparative effectiveness remain unanswered.\r\n\r\nThis document presents a research agenda intended to address problems in\r\nboth the practice and research of FTR through CSRS (Collaborative\r\nSoftware Review System), an instrumented, computer-supported cooperative\r\nwork environment. CSRS provides automated support for many time consuming\r\naspects of FTR, avoids many group process problems inherent in traditional,\r\nmanual review, and captures unique, high quality empirical data about the\r\nprocess and products of FTR.\r\n\r\nThe research agenda includes:\r\n(1) Controlled experimental laboratory studies on automated FTR support.\r\n(2) Technology transfer of CSRS to selected industrial sites.\r\n(3) Development of a domain-specific version of CSRS for C++ software.\r\n(4) Creation of a CSRS consortium for collaborative FTR research between\r\n  industry and academia.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-12",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199310
  },
  {
    "key": "csdl-93-13",
    "type": "techreport",
    "title": "Collaborative Classification and Evaluation of Usenet",
    "year": 1994,
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-13/93-13.pdf",
    "abstract": "Usenet is an example of the potential and problems of the nascent National\r\n  Information Infrastructure. While Usenet makes an enormous amount of useful\r\n  information available to its users, the daily data overwhelms any user who\r\n  tries to read more than a fraction of it. This paper presents a\r\n  collaboration-oriented approach to information classification and\r\n  evaluation for very large, dynamic database structures such as Usenet. Our\r\n  approach is implemented in a system called URN, a multi-user,\r\n  collaborative, hypertextual Usenet reader.  We show that this collaborative\r\n  method, coupled with an adaptive interface, radically improves the overall\r\n  relevance level of information presented to a user.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-13",
    "authors": [
      "Robert S. Brewer",
      "Philip M. Johnson"
    ],
    "keywords": [
      "URN"
    ],
    "sortKey": 199401
  },
  {
    "key": "csdl-93-14",
    "type": "phdthesis",
    "title": "CLARE: A Computer-Supported Collaborative Learning Environment Based on the Thematic Structure of Scientific Text",
    "year": 1994,
    "month": "May",
    "abstract": "This dissertation presents a computer-based collaborative learning\r\nenvironment, called CLARE, that is based on the theory of learning as\r\ncollaborative knowledge building. It addresses the question, \"what can a\r\ncomputer do for a group of learners beyond helping them share information?\"\r\n\r\nCLARE differs from virtual classrooms and hypermedia systems in three ways.\r\nFirst, CLARE is grounded on the theory of meaningful learning, which\r\nfocuses the role of meta-knowledge in human learning.  Instead of merely\r\nallowing learners to share information, CLARE provides an explicit\r\nmeta-cognitive framework, called RESRA, to help learners interpret\r\ninformation and build knowledge. Second, CLARE defines a new group process,\r\ncalled SECAI, that guides learners to systematically analyze, relate, and\r\ndiscuss scientific text through a set of structured steps: summarization,\r\nevaluation, comparison, argumentation, and integration.  Third, CLARE\r\nprovides a fine-grained, non-obtrusive instrumentation mechanism that\r\nkeeps track of the usage process of its users. Such data forms an important\r\nsource of feedback for enhancing the system and a basis for rigorously\r\nstudying collaboration learning behaviors of CLARE users.\r\n\r\nCLARE was evaluated through sixteen usage sessions involving six groups of\r\nstudents from two classes.  The experiments consist of a total of about 300\r\nhours of usage and over 80,000 timestamps.  The survey shows that about 70%\r\nof learners think that CLARE provides a novel way of understanding\r\nscientific text, and about 80% of learners think that CLARE provides a\r\nnovel way of understanding their peers' perspectives.  The analysis of the\r\nCLARE database and the process data also reveals that learners differ\r\ngreatly in theirinterpretations of RESRA, strategies for comprehending the\r\nonline text, and understanding of the selected artifact. It also found\r\nthat, despite the large amount of time spent on summarization, up to 66% of\r\nthese learners often fail to correctly represent important features of\r\nscientific text and the relationships between those features.  Implications\r\nof these findings at the design, empirical, and pedagogical levels are\r\ndiscussed.",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE",
      "Thesis-PhD"
    ],
    "sortKey": 199405
  },
  {
    "key": "csdl-93-15",
    "type": "techreport",
    "title": "CLARE User's Guide",
    "year": 1993,
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-15/user-guide.ps.gz",
    "abstract": "This document provides an illustrated user's guide to the\r\n  CLARE system.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-15",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE"
    ],
    "sortKey": 199309
  },
  {
    "key": "csdl-93-16",
    "type": "techreport",
    "title": "Documentation for the XView Graphical Browser",
    "year": 1993,
    "month": "May",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-16",
    "authors": [
      "Johnny Li"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199305
  },
  {
    "key": "csdl-93-17",
    "type": "inproceedings",
    "title": "An Instrumented Approach to Improving Software Quality through Formal Technical Review",
    "year": 1994,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-17/93-17.pdf",
    "abstract": "Formal technical review (FTR) is an essential\r\n   component of all software quality assessment, assurance, and\r\n   improvement techniques.  However, current FTR practice leads to\r\n   significant expense, clerical overhead, group process obstacles, and\r\n   research methodology problems.\r\n\r\n   CSRS is an instrumented, computer-supported cooperative work\r\n   environment for formal technical review.  CSRS addresses problems in\r\n   the practice of FTR by providing computer support for both the\r\n   process and products of FTR.  CSRS also addresses problems in\r\n   research on FTR through instrumentation supporting fine-grained, high\r\n   quality data collection and analysis.  This paper describes CSRS, a\r\n   computer-mediated review method called FTArm, and selected findings\r\n   from their use to explore issues in formal technical review.",
    "booktitle": "Proceedings of the 16th International Conference on Software Engineering",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Conference"
    ],
    "sortKey": 199405
  },
  {
    "key": "csdl-93-18",
    "type": "techreport",
    "title": "Hyperbase Server Interface: Versions 2.0 and 2.1",
    "year": 1993,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-18/TR-93-18.pdf",
    "abstract": "This document provides obsolete reference material on\r\n  HBS. See Egret system documentation or ICS Technical\r\n  Report 94-14 for current HBS 3.x interface\r\n  specifications.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-18",
    "authors": [
      "Rosemary Andrada",
      "Carleton A. Moore"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199310
  },
  {
    "key": "csdl-93-19",
    "type": "techreport",
    "title": "Studying Formal Technical Review Methods using CSRS",
    "year": 1993,
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-19/paper.ps",
    "abstract": "The importance of formal technical review and its benefits have been\r\nwell documented, and yet there is a proliferation of methods in\r\npractice with varying degrees of success.\r\n\r\nThis paper discusses a new approach to assess and study various\r\naspects associated with the effectiveness of current review methods.\r\nOur basic approach is to use a computer assisted review system (CSRS)\r\nequipped with mechanisms to model different review methods and\r\nat the same time capture fine-grained measurements\r\nabout the product and the process of the review.\r\nThrough suitable experimental design, these data can be used to\r\ncompare the different methods to each other.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-19",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199309
  },
  {
    "key": "csdl-93-20",
    "type": "techreport",
    "title": "Gtables: From EGRET 2.x.x to EGRET 3.0.x",
    "year": 1993,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-20/93-20.ps",
    "abstract": "This document describes the current design of the server subsystem class\r\ns*gtable, which provides an efficient and high-level mechanism for the\r\nimplementation and maintenance of global tables.  The purpose of this\r\ndocumentation is to serve as a basis for the redesign and reimplementation\r\nof gtables in Egret-3.0.x.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-20",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono",
      "Dadong Wan",
      "Robert S. Brewer"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199311
  },
  {
    "key": "csdl-93-21",
    "type": "inproceedings",
    "title": "Computer-Supported Collaborative Learning Using CLARE: the\r\n  Approach and Experimental Findings",
    "year": 1994,
    "month": "oct",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-21/93-21.pdf",
    "abstract": "Current collaborative learning systems focus on maximizing shared\r\n  information. However, \\`\\`meaningful learning'' is not simply information\r\n  sharing but, more importantly, knowledge construction.  CLARE is a\r\n  computer-supported learning environment that facilitates meaningful\r\n  learning through collaborative knowledge construction. CLARE provides a\r\n  semi-formal representation language called RESRA and an explicit\r\n  process model called SECAI. Experimental evaluation through 300 hours\r\n  of classroom usage indicates that CLARE does support meaningful\r\n  learning, and that a major bottleneck to computer-mediated knowledge\r\n  construction is summarization.  Lessons learned through the design and\r\n  evaluation of CLARE provide new insights into both collaborative\r\n  learning systems and collaborative learning theories.",
    "booktitle": "Proceedings of the 1994 ACM Conference on Computer Supported Cooperative Work",
    "address": "Chapel Hill, North Carolina",
    "authors": [
      "Dadong Wan",
      "Philip M. Johnson"
    ],
    "keywords": [
      "CLARE",
      "Pubs-Conference"
    ],
    "sortKey": 199410
  },
  {
    "key": "csdl-93-22",
    "type": "article",
    "title": "Design for Instrumentation: High Quality Measurement of Formal Technical Review",
    "year": 1996,
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-21/94-21.pdf",
    "abstract": "All current software quality assurance methods incorporate some form of\r\n  formal technical review (FTR), because structured analysis of software\r\n  artifacts by a team of skilled technical personnel has demonstrated\r\n  ability to improve quality.  However, FTR methods come in a wide\r\n  variety of forms with varying effectiveness, incur significant\r\n  overhead on technical staff, and have little computer support.\r\n  Measurements of these FTR methods are coarse-grained, frequently low\r\n  quality, and expensive to obtain.\r\n\r\n  This paper describes CSRS, a highly instrumented, computer-supported\r\n  system for formal technical review, and shows how it is designed to\r\n  collect high quality, fine-grained measures of FTR process and products\r\n  automatically.  The paper also discusses some results from over one year\r\n  of experimentation with CSRS; describes how CSRS improves current\r\n  process improvement approaches to FTR; and overviews several novel\r\n  research projects on FTR that are made possible by this system. ",
    "journal": "Software Quality Journal",
    "volume": 5,
    "number": 3,
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Journal"
    ],
    "sortKey": 199603
  },
  {
    "key": "csdl-93-24",
    "type": "techreport",
    "title": "CLARE 1.4.7 Design Document",
    "year": 1993,
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/1993/93-24/cla-1.4.7.ps.gz",
    "abstract": "This document provides an overview of the design of CLARE\r\n  Version 1.4.7",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-93-24",
    "authors": [
      "Dadong Wan"
    ],
    "keywords": [
      "CLARE"
    ],
    "sortKey": 199309
  },
  {
    "key": "csdl-94-02",
    "type": "techreport",
    "title": "Toward Collaborative Knowledge Management within Large,\r\n  Dynamically Structured Information Systems",
    "year": 1994,
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-02/jmis.pdf",
    "abstract": "Usenet is an example of the potential and problems of the nascent\r\nNational Information Infrastructure. While Usenet makes an enormous\r\namount of useful information available to its users, the daily data\r\noverwhelms any user who tries to read more than a fraction of it. This\r\npaper presents a collaboration-oriented approach to knowledge\r\nmanagement and evaluation for very large, dynamic database structures\r\nsuch as Usenet. Our approach is implemented in a system called URN, a\r\nmulti-user, collaborative, hypertextual Usenet reader.  Empirical\r\nevaluation of this system demonstrates that this collaborative method,\r\ncoupled with an adaptive interface, improves the overall relevance\r\nlevel of information presented to a user.  Finally, the design of this\r\nsystem provides important insights into general collaborative knowledge\r\nmanagement mechanisms for very large, dynamically structured database\r\nsystems such as Usenet and the upcoming Information Superhighway.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-02",
    "authors": [
      "Robert S. Brewer",
      "Philip M. Johnson"
    ],
    "keywords": [
      "URN"
    ],
    "sortKey": 199401
  },
  {
    "key": "csdl-94-03",
    "type": "inproceedings",
    "title": "Supporting Technology Transfer of Formal Technical Review\r\n   through a Computer Supported Collaborative Review System",
    "year": 1994,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-03/94-03.pdf",
    "abstract": "Formal technical review (FTR) is an essential component of all\r\n   modern software quality assessment, assurance, and improvement techniques,\r\n   and is acknowledged to be the most cost-effective form of quality\r\n   improvement when practiced effectively.  However, traditional FTR\r\n   methods such as inspection are very difficult to adopt\r\n   in organizations: they introduce substantial new up-front\r\n   costs, training, overhead, and group process obstacles.  Sustained\r\n   commitment from high-level management along with substantial\r\n   resources is often necessary for successful technology transfer of\r\n   FTR.\r\n\r\n   Since 1991, we have been designing and evaluating a series of\r\n   versions of a system called CSRS: an instrumented, computer-supported\r\n   cooperative work environment for formal technical review.  The\r\n   current version of CSRS includes an FTR method definition language,\r\n   which allows organizations to design their own FTR method, and to\r\n   evolve it over time. This paper describes how our approach to\r\n   computer supported FTR can address some of the issues in technology\r\n   transfer of FTR.",
    "booktitle": "Proceedings of the Fourth International Conference on Software Quality",
    "address": "Reston, VA.",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Conference"
    ],
    "sortKey": 199410
  },
  {
    "key": "csdl-94-04",
    "type": "article",
    "title": "Experiences with CLARE: a Computer-Supported Collaborative\r\n  Learning Environment",
    "year": 1994,
    "month": "December",
    "abstract": "Current collaborative learning systems focus on maximizing shared\r\n  information. However, \\`\\`meaningful learning'' is not simply information\r\n  sharing but also knowledge construction.  CLARE is a computer-supported\r\n  learning environment that facilitates meaningful learning through\r\n  collaborative knowledge construction. It provides a semi-formal\r\n  representation language called RESRA and an explicit process model\r\n  called SECAI. Experimental evaluation through 300 hours of classroom\r\n  usage indicates that CLARE does support meaningful learning. It also\r\n  shows that a major bottleneck to computer-mediated knowledge\r\n  construction is summarization.  Lessons learned through the design and\r\n  evaluation of CLARE provide new insights into both collaborative\r\n  learning systems and collaborative learning theories.",
    "journal": "International Journal of Human-Computer Systems",
    "volume": 41,
    "authors": [
      "Dadong Wan",
      "Philip M. Johnson"
    ],
    "keywords": [
      "CLARE",
      "Pubs-Journal"
    ],
    "sortKey": 199412
  },
  {
    "key": "csdl-94-06",
    "type": "techreport",
    "title": "The Annotated Egret",
    "year": "1994",
    "month": "June",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-06",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "AEN"
    ],
    "sortKey": 199406
  },
  {
    "key": "csdl-94-07",
    "type": "techreport",
    "title": " Evaluating the Cost-Effectiveness of Formal Technical\r\n   Review Factors",
    "year": 1994,
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-07/revised-proposal.ps",
    "abstract": "The importance and benefits of formal technical review (FTR) as a\r\nmethod to improve software quality have\r\nbeen well documented, and yet there is a proliferation of the methods in\r\npractice with varying degrees of success. Worse, the same methods are\r\noften practiced inconsistently and the contribution of various review\r\nfactors on review outcomes is also not currently understood.\r\n\r\nThis research proposes a new approach to assess and study the\r\ncost-effectiveness of various review factors. Our basic approach is to\r\nfirst develop a framework that allows one to classify the similarities\r\nand differences of existing FTR methods from the perspective of their\r\nreview processes.\r\nSpecifically, the framework looks into important review factors that\r\ncharacterize a review process, such as the objective of a particular\r\nphase within the review process, the interaction mode among review\r\nparticipants and the technique being used during the phase.\r\n\r\nSecond, we will\r\ndevelop a computer assisted review system, namely, CSRS version 3.0,\r\nthat can be used as an experimental testbed for empirically evaluating\r\ndifferent FTR factors that may impact the methods.\r\nFinally, we will design a control experiment to answer an important\r\ninitial question concerning the cost-effectiveness of three different\r\nexamination techniques commonly used in existing FTR methods: free\r\nreview technique, selective test cases technique and stepwise\r\nverification technique.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-07",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS",
      "Thesis-Proposal"
    ],
    "sortKey": 199406
  },
  {
    "key": "csdl-94-08",
    "type": "inproceedings",
    "title": "From Principle-centered to Organization-centered Design: A Case Study of Evolution in a Computer-Supported Formal Technical Review Environment",
    "year": 1996,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-08/scharding.ps",
    "abstract": "  Design of new computer-based environments to replace or augment\r\n  traditional, manual work procedures is typically problematic due to\r\n  its experimental and embedded nature: the requirements for the\r\n  computer-based version of the task may not be well defined, and the\r\n  outcome of introducing computer-based support may well change the\r\n  nature of the task altogether.\r\n\r\n  This paper illustrates these issues through a discussion of the\r\n  evolution in the design of CSRS, an instrumented, computer-supported\r\n  cooperative work environment for formal technical review.  CSRS was\r\n  originally designed in response to well-recognized shortcomings in\r\n  traditional, non-computer-based formal technical review methods.  The\r\n  initial design was thus founded upon a principle-centered basis,\r\n  where the system was oriented toward solving known problems in the\r\n  domain of formal technical review.  Over time, the design has evolved\r\n  toward a more organization-centered basis, in which the system is\r\n  oriented toward support for adoption and use within organizations, even\r\n  if that support conflicts with the \\`\\`principles'' of formal technical\r\n  review.  We conjecture that such an evolution may be inevitable in\r\n  experimental and embedded design domains. ",
    "booktitle": "Interdisciplinary Approaches to System Analysis and Design",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199607
  },
  {
    "key": "csdl-94-09",
    "type": "techreport",
    "title": "Redefining the Web: Creating a Computer Network Community",
    "year": 1994,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-09/www.ps",
    "abstract": "Organizations are formed to accomplish a goal or mission, where\r\n  individual members do their part and make a combined effort leading\r\n  toward this goal.  As the organization grows in size, the level of\r\n  community inevitably deteriorates.\r\n\r\n  This research will investigate the strengths and weaknesses of a\r\n  computer-based approach to improving the sense of community within one\r\n  organization, the Department of Computer Science at the University of\r\n  Hawaii.  We will assess the current level of community by administering\r\n  a questionnaire to members of the department.  Next, we will introduce\r\n  a World Wide Web information system for and about the department in an\r\n  effort to impact the level of community that exists.  We will then\r\n  administer another questionnaire to assess the level of community\r\n  within the department after a period of use with the information\r\n  system.  We will analyze the results of both questionnaires and usage\r\n  statistics logged by the system.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-09",
    "authors": [
      "Rosemary Andrada"
    ],
    "keywords": [
      "Thesis-Proposal"
    ],
    "sortKey": 199412
  },
  {
    "key": "csdl-94-13",
    "type": "techreport",
    "title": "ECS Design Reference",
    "year": 1994,
    "month": "January",
    "abstract": "See the current ECS System release for the current version of\r\n  this documentation.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-13",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199401
  },
  {
    "key": "csdl-94-14",
    "type": "techreport",
    "title": "HBS Interface Specification",
    "year": 1995,
    "month": "February",
    "abstract": "This document specifies the interface protocol observed between the HBS\r\nserver system and the ECS client system, together known as Egret. HBS is a\r\nmultiuser, database server for (non-video) hypermedia applications.  It\r\nmanages storage, locking, retrieval, and inter-client communications.\r\nThis document is intended to describe the interface between\r\nHBS and ECS in enough detail so that alternative database servers can be\r\nbuilt to service requests from an ECS clients. It is also intended to serve as a source\r\nof reference material for maintainers of the HBS and ECS systems.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-14",
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Rosemary Andrada"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199502
  },
  {
    "key": "csdl-94-15",
    "type": "inproceedings",
    "title": "Collaboration in the Small vs. Collaboration in the Large",
    "year": 1994,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-15/citl.ps",
    "abstract": "This paper defines two endpoints in a spectrum of\r\n  collaboration organized by scale (from dozens to millions\r\n  of users), and discusses architectural implications of\r\n    scale in the design of collaborative systems.",
    "booktitle": "Proceedings of the 1994 CSCW Workshop on Software\r\n  Architectures for Cooperative Systems",
    "address": "Chapel Hill, N.C.",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET",
      "Pubs-Workshop"
    ],
    "sortKey": 199410
  },
  {
    "key": "csdl-94-16",
    "type": "techreport",
    "title": "Supporting authoring and learning in a collaborative hypertext\r\n   system: The Annotated Egret Navigator",
    "year": 1994,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1994/94-16/objective.ps",
    "abstract": "This research is concerned with how people collaboratively author and\r\nlearn.  More specifically, it is concerned with how to design and implement\r\na hypertext system to support collaborative authoring and learning.\r\nWe are investigating these issues through the design, implementation, and\r\nevaluation of AEN, a hypertext collaborative authoring and learning tool.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-94-16",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "AEN",
      "Thesis-Proposal"
    ],
    "sortKey": 199412
  },
  {
    "key": "csdl-94-20",
    "type": "inproceedings",
    "title": "Investigating Strong Collaboration with the Annotated\r\n  Egret Navigator",
    "year": "1995",
    "month": "April",
    "abstract": "The Annotated Egret Navigator (AEN) is a system designed to support\r\n  strong collaboration among a group as they cooperatively build,\r\n  review, revise, and improve a structured hypertext document.  AEN was\r\n  used as the central instructional and research system for a graduate\r\n  seminar on collaborative systems at the University of Hawaii during\r\n  Fall, 1994.  AEN was used for over 285 hours during the second half of\r\n  the semester alone, and users generated over 800 nodes and 800 links.\r\n  Lessons learned about strong collaboration include: (1) Users as well\r\n  as artifacts should be visible; (2) Provide direct and indirect\r\n  authoring mechanisms; (3) Provide context-sensitive change information;\r\n  (4) Provide access to intermediate work products; (5) Maintain database\r\n  integrity; (6) The WWW is not effective for strong collaboration; and\r\n  (7) An agent-based architecture may be necessary for systems supporting\r\n  strong collaboration.",
    "booktitle": "Proceedings of the Fourth IEEE Workshop on Enabling\r\n  Technologies: Infrastructure for Collaborative\r\n  Enterprises (WET-ICE '95)",
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore"
    ],
    "keywords": [
      "AEN",
      "Pubs-Workshop"
    ],
    "sortKey": 199504
  },
  {
    "key": "csdl-95-03",
    "type": "techreport",
    "title": "HBS Design Document",
    "year": "1995",
    "month": "February",
    "abstract": "HBS is an 11 KLOC Hypertext Multiuser Database Server written in\r\n  C++. HBS is designed to work with ECS clients, as part of the Egret\r\n  client-server system.  HBS is broken down into four blocks, File\r\n  Operations, Basic Hypertext Operations, Events and Locks, and\r\n  Client/Server Operations.  There is also a built in debugging mechanism\r\n  and memory leak detection system.  This document describes the internal\r\n  design of HBS.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-03",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199502
  },
  {
    "key": "csdl-95-04",
    "type": "mastersthesis",
    "title": "Supporting authoring and learning in a strongly\r\n  collaborative hypertext system: The Annotated Egret Navigator",
    "year": "1995",
    "month": "July",
    "abstract": "With the increased use of hypertext, the issues behind collaborative\r\nauthoring of hypertext are becoming more important.  This thesis presents\r\nthe Annotated Egret Navigator (AEN), a system designed to support\r\nstrong collaboration among a group as they cooperatively build, review,\r\nrevise, improve and learn from a structured hypertext document.  AEN\r\naddresses how strong collaboration can be supported through computer\r\nmediation.  It is designed to support collaborative creation of hypertext\r\nand to instrument the actions of its users in order to understand how such\r\ncreation occurs.",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "AEN",
      "Thesis-MS"
    ],
    "sortKey": 199507
  },
  {
    "key": "csdl-95-06",
    "type": "techreport",
    "title": "Building Software Review Systems Using CSRS",
    "year": "1995",
    "month": "January",
    "abstract": "The importance of Software Review or Formal Technical Review (FTR) and\r\nits benefits have been well documented. However, there are many\r\nvariations of the method in practice, especially those related to the\r\ngroup process.  This paper discusses a new approach to how\r\norganizations can build their own review systems that are most\r\nsuitable to them.  Our basic approach is to use CSRS modeling\r\nlanguages to characterize the review method descriptively.  The\r\nlanguage descriptions are then compiled to generate the corresponding\r\nreview systems.  CSRS modeling languages are developed based on FTR\r\nframework which models both variations in the group process\r\nand review strategies exhibited by current FTR methods.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-06",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199501
  },
  {
    "key": "csdl-95-07",
    "type": "techreport",
    "title": "Comparing the cost effectiveness of Group Synchronous Review\r\n    Method and Individual Asynchronous Review Method using\r\n  CSRS: Results of Pilot Study",
    "year": "1995",
    "month": "January",
    "abstract": "This document describes a pilot experiment that compares the cost\r\n  effectiveness of a group-based review method (EGSM) to that of an\r\n  individual-based review method (EIAM) using CSRS. In this pilot study, no\r\n  significant differences in review effectiveness and review cost were\r\n  found. This document provides complete details on the procedures and\r\n  outcomes from this pilot study, as well as the lessons learned which will\r\n  be applied to an upcoming experimental study.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-07",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199501
  },
  {
    "key": "csdl-95-08",
    "type": "phdthesis",
    "title": "Exploring the effectiveness of formal technical review\r\n  factors with CSRS, a collaborative software review system",
    "year": "1996",
    "month": "August",
    "abstract": "\r\nFormal Technical Review (FTR) plays an important role in modern software\r\ndevelopment. It can improve the quality of software products and the\r\nquality and productivity of their development processes.  However, the\r\neffectiveness of current FTR practice is hampered by uncertainty and\r\nambiguity.  This research investigated two issues. First, what differences\r\nexist among current FTR methods? Second, what are potential review factors\r\nthat impact upon the effectiveness of these methods?\r\n\r\nThe approach taken by this research was to first develop a FTR framework,\r\nbased on a review of literature in the field.  The framework allows one to\r\ndetermine the similarities and differences between the review process of\r\nFTR methods, as well as to identify potential review factors.\r\nSpecifically, it describes a review method in terms of seven components of\r\na review process: phase, objective, degree of collaboration, synchronicity,\r\nrole, technique, entry/exit criteria.  By looking at the values of\r\nindividual components, one can compare and contrast different FTR\r\nmethods. Furthermore, by investigating these values empirically, one can\r\nmethodically improve the practice of FTR.\r\n\r\nSecond, a computer based review system, called CSRS, was developed to\r\nimplement the framework. The system provides a set of declarative modeling\r\nlanguages, which allow one to create a wide variety of FTR methods, or to\r\ndesign experiments to compare the performance of two or more review\r\nmethods, or to evaluate a set of review factors within a method.\r\n\r\nFinally, this research involved an empirical study using CSRS to\r\ninvestigate the effectiveness of a group process versus an individual\r\nprocess in finding program faults.  Two review methods/systems were\r\nimplemented using CSRS: EGSM (used by real groups) and EIAM (used by\r\nnominal groups).  The experiment involved 24 groups of students (3 students\r\nper group), each reviewing two sets of source code, once using EGSM and\r\nonce using EIAM.  The experiment found that there were no significant\r\ndifferences in detection effectiveness between the two methods, that\r\nsynergy was observed in EGSM but did not contribute significantly to the\r\ntotal faults found, and that EGSM incurred higher cost than EIAM, but was\r\nsignificantly more effective in filtering out false positives. ",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS",
      "Thesis-PhD"
    ],
    "sortKey": 199608
  },
  {
    "key": "csdl-95-10",
    "type": "techreport",
    "title": "The Egret Primer: A tutorial guide to coordination and control \\\\\\\\\r\n   in interactive client-server-agent applications",
    "year": "1995",
    "month": "June",
    "abstract": "This book\r\n  introduces you to Egret,  a distributed, hypertext, client-server-agent\r\nframework that has been used since 1990 to develop collaborative applications\r\nfor learning, authoring, software review, news reading, and other areas.\r\nThe book is structured as a programmatic\r\nguided tour of Egret, which  teaches you to build collaborative systems of slowly\r\nincreasing complexity, sophistication, and power.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-10",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199506
  },
  {
    "key": "csdl-95-11",
    "type": "mastersthesis",
    "title": "Building Community through the World Wide Web",
    "year": "1995",
    "month": "July",
    "abstract": "This thesis presents a case study designed to assess the strengths and\r\nweaknesses of a computer-based approach to improving the sense of community\r\nwithin one organization, the Department of Information and Computer Sciences at\r\nthe University of Hawaii.  The case study used a pretest-posttest design.\r\nFirst, several measures of the sense of community within the department were\r\nobtained via a questionnaire.  Second, a World Wide Web information system was\r\nintroduced in an effort to affect the level of community within the department.\r\nThird, a similar questionnaire was administered after a period of four months.\r\nAnalysis of the survey responses and system logs showed that the information\r\nsystem designed to promote community in this organization had instead polarized\r\nit.  However, these systems can also serve as a diagnostic tool for discovering\r\nwhat factors may help promote or inhibit community building.",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Rosemary Andrada"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 199507
  },
  {
    "key": "csdl-95-12",
    "type": "techreport",
    "title": "WET ICE Tools Working Group Report",
    "year": "1995",
    "month": "May",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-12",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Pubs-Workshop"
    ],
    "sortKey": 199505
  },
  {
    "key": "csdl-95-13",
    "type": "techreport",
    "title": "Results of CSRS Experiments",
    "year": "1995",
    "month": "May",
    "abstract": "This document provides the data collected from two\r\n  experiments on software review conducted using\r\n    CSRS during the Spring of 1995.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-13",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199505
  },
  {
    "key": "csdl-95-14",
    "type": "techreport",
    "title": "The CA/M Architecture for Project HI-TIME",
    "year": "1995",
    "month": "November",
    "abstract": "This document reports on the work done as part of the Project\r\n\\`\\`Collaboration Mechanisms for Project HI-TIME: Hawaii Telecommunications\r\nInfrastructure Modernization and Expansion: A Model for Statewide\r\nStrategic Planning'', Subcontract 131030-002.\r\n\r\nIn the project, in response to the requirements for Project HI-TIME, a\r\ncollaborative architecture called \\`\\`CA/M'' has been designed and\r\nimplemented and used to build a collaborative system for Project\r\nHI-TIME.\r\n\r\nThis report documents the current state of the project, providing an\r\noverview of Project HI-TIME requirements, the CA/M architecture designed\r\nin response to the these requirements, and the status of research on\r\nthis project.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-14",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "HI-TIME"
    ],
    "sortKey": 199511
  },
  {
    "key": "csdl-95-16",
    "type": "techreport",
    "title": "A Quick Guided Tour of Shemacs",
    "year": "1995",
    "month": "October",
    "abstract": "This is a quick guided tour through the main features of\r\n  Shemacs, a concurrent editor built using the Egret\r\n    collaborative framework.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-16",
    "authors": [
      "Julio Polo"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199510
  },
  {
    "key": "csdl-95-18",
    "type": "techreport",
    "title": "FTArm User's Guide (Version 1.2.0)",
    "year": "1995",
    "month": "October",
    "abstract": "This manual provides a description of FTArm system for\r\nreview participants and the administrator. FTArm is a computer-mediated\r\nprocess for software review based upon Egret, a framework for\r\ncollaborative systems. This document includes descriptions of\r\nhow to execute the review process, what review\r\nartifacts are involved, and the associated user commands to\r\nmanipulate the artifacts and the process.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-18",
    "authors": [
      "Danu Tjahjono",
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199510
  },
  {
    "key": "csdl-95-19",
    "type": "techreport",
    "title": "FTArm Demonstration Guide (Version 1.2.0)",
    "year": "1995",
    "month": "October",
    "abstract": "This document provides a step-by-step demonstration of\r\nthe simple use of the CSRS system using the FTArm review method.\r\nFTArm is a computer-mediated\r\nprocess for software review based upon Egret, a framework for\r\ncollaborative systems.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-19",
    "authors": [
      "Danu Tjahjono",
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199510
  },
  {
    "key": "csdl-95-20",
    "type": "techreport",
    "title": "The Effect of a Virtual World Wide Web Community on its Physical Counterpart",
    "year": "1995",
    "month": "December",
    "abstract": "This paper overviews a study that assessed the strengths and weaknesses of a\r\ncomputer-based approach to improving the sense of community within one\r\norganization, the Department of Information and Computer Sciences at the\r\nUniversity of Hawaii.  The case study used a pretest-posttest design.  First,\r\nseveral measures of the sense of community within the department were obtained\r\nvia a questionnaire.  Second, a World Wide Web information system was\r\nintroduced in an effort to affect the level of community within the department.\r\nThird, a similar questionnaire was administered after a period of four months.\r\nAnalysis of the survey responses and system logs showed that the information\r\nsystem designed to promote community had instead polarized some of its members.\r\nIn addition, the system served as a valuable diagnostic tool for discovering\r\nwhat factors may help promote or inhibit community building.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-20",
    "authors": [
      "Rosemary Andrada"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199512
  },
  {
    "key": "csdl-95-21",
    "type": "techreport",
    "title": "An Evaluation of Flashmail: a computer-mediated communication tool",
    "year": "1996",
    "month": "May",
    "abstract": "\r\n  This paper presents the results from an analysis of a new\r\n  computer-mediated communication tool called Flashmail.  I investigated\r\n  how people used Flashmail as well as Flashmail's relationship to\r\n  conventional electronic mail.  Participants in the experiment loaded\r\n  extensions that gathered data regarding the characteristics of all\r\n  messages sent through E-mail and Flashmail.  This data was used\r\n  to analyze the conditions under which each system was used.  I found that\r\n  Flashmail seems to be preferred whenever the message is short, needs to\r\n  be communicated in a short period of time, and when both the recipient\r\n  and the sender are logged into the system and active at the time of\r\n  sending.  In contrast, I found that E-mail was preferred for messages\r\n  that were large (over 400 characters) and non-urgent, or when the\r\n  receiver was either not logged into Flashmail or had been idle for longer\r\n  than 7 minutes.  These results indicate that Flashmail is generally used\r\n  as a rapid, synchronous messaging method.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-21",
    "authors": [
      "Jennifer M. Geis"
    ],
    "keywords": [
      "Flashmail"
    ],
    "sortKey": 199605
  },
  {
    "key": "csdl-95-22",
    "type": "techreport",
    "title": "Strong Collaboration in AEN",
    "year": "1995",
    "month": "December",
    "abstract": "This paper overviews the Annotated Egret Navigator (AEN), a system designed\r\nto support strong collaboration among a group as they cooperatively\r\nbuild, review, revise, improve and learn from a structured hypertext\r\ndocument.  AEN addresses how strong collaboration can be supported through\r\ncomputer mediation.  It is designed to support collaborative creation of\r\nhypertext and to instrument the actions of its users in order to understand\r\nhow such creation occurs.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-95-22",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "AEN"
    ],
    "sortKey": 199512
  },
  {
    "key": "csdl-95-24",
    "type": "article",
    "title": "Reengineering Inspection: The Future of Formal\r\n  Technical Review",
    "year": "1998",
    "month": "February",
    "abstract": "  Formal technical review is acknowledged as a preeminant software\r\n  quality improvement method. The \\`\\`inspection'' review method, first\r\n  introduced by Michael Fagan twenty years ago, has led to dramatic\r\n  improvements in software quality. It has also led to a myopia within\r\n  the review community, which tends to view inspection-based methods as\r\n  not just effective, but as the optimal approach to formal\r\n  technical review.  This article challenges this view by presenting a\r\n  taxonomy of software review that shows inspection to be just one among\r\n  many valid approaches. The article then builds upon this framework to propose\r\n  seven guidelines for the radical redesign and improvement of formal\r\n  technical review during the next twenty years.",
    "journal": "Communications of the ACM",
    "volume": 41,
    "number": 2,
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "CSRS",
      "Pubs-Journal"
    ],
    "sortKey": 199802
  },
  {
    "key": "csdl-96-01",
    "type": "techreport",
    "title": "CSRS Design Reference 3.5.0",
    "year": 1996,
    "month": "February",
    "abstract": "This document contains a reference manual for Version 3.5.0\r\n  of the CSRS\r\n  collaborative software review environment",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-01",
    "authors": [
      "Danu Tjahjono"
    ],
    "keywords": [
      "CSRS"
    ],
    "sortKey": 199602
  },
  {
    "key": "csdl-96-04",
    "type": "techreport",
    "title": "Requiem for the Project HI-TIME Collaborative Process",
    "year": "1996",
    "month": "March",
    "abstract": "\r\nIn early 1995, the State of Hawaii began work on an ambitious revision to\r\nits telecommunications policy planning process.  A multidisciplinary team\r\nwas commissioned to develop a proposal for an iterative, interactive,\r\ncomputer-mediated collaborative planning process whereby the State's\r\ntelecommunications infrastructure plan could be developed and periodically\r\nupgraded to reflect technology and policy shifts in local communities. The\r\nproposal included a sophisticated, CSCW software system called HI-TIME\r\nwhich would both enact the planning process as well as provide access and\r\nvisibility into the planning process for the general public.  In early\r\n1996, the ambitious collaborative planning process, including the\r\nimplemented, deployed HI-TIME system, was abandoned in favor of a more\r\ntraditional approach. This paper explores the rise and fall of Project\r\nHI-TIME and the lessons it holds for developers of CSCW systems.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-04",
    "authors": [
      "David Brauer",
      "Philip M. Johnson",
      "Carleton A. Moore"
    ],
    "keywords": [
      "HI-TIME"
    ],
    "sortKey": 199603
  },
  {
    "key": "csdl-96-05",
    "type": "techreport",
    "title": "State as an Organizing Principle for CSCW Architectures",
    "year": "1996",
    "month": "March",
    "abstract": "  A useful way to gain insight into collaborative architectures is by\r\nanalyzing how they collect, represent, store, analyze, and distribute state\r\ninformation.  This paper presents state as an organizing principle for\r\ncollaborative architectures. It uses a framework with eight dimensions to\r\nanalyze four systems: WWW, GroupKit, Lotus Notes, and Egret. The analysis\r\nilluminates similarities and differences between these architectures, and\r\nyields two conjectures: that no single collaborative architecture can fully\r\nsupport both collaboration-in-the-small and collaboration-in-the-large, and\r\nthat flexible and efficient support for state management requires\r\narchitectural support for agents as first-class users.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-05",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "EGRET"
    ],
    "sortKey": 199603
  },
  {
    "key": "csdl-96-06",
    "type": "inproceedings",
    "title": "Assessing software review meetings: A controlled experimental study using CSRS",
    "year": "1997",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1996/96-06/96-06.pdf",
    "abstract": "Software review is a fundamental component of the software quality\r\nassurance process, yet significant controversies exist concerning\r\nefficiency and effectiveness of various review methods. A central question\r\nsurrounds the use of meetings: traditional review practice views them as\r\nessential, while more recent findings question their utility.\r\n\r\nWe conducted a controlled experimental study to assess several measures of\r\ncost and effectiveness for a meeting and non-meeting-based review method.\r\nThe experiment used CSRS, a computer mediated collaborative software review\r\nenvironment, and 24 three person groups.  Some of the data we collected\r\nincluded: the numbers of defects discovered, the effort required, the\r\npresence of synergy in the meeting-based groups, the occurrence of false\r\npositives in the non-meeting-based groups, and qualitative questionnaire\r\nresponses.\r\n\r\nThis paper presents the motivation for this experiment, its design and\r\nimplementation, our empirical findings, conclusions, and future directions.  ",
    "booktitle": "Proceedings of the 1997 International Conference on Software\r\n  Engineering",
    "address": "Boston, MA.",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono"
    ],
    "keywords": [
      "FTR",
      "CSRS",
      "Pubs-Conference"
    ],
    "sortKey": 199705
  },
  {
    "key": "csdl-96-13",
    "type": "techreport",
    "title": "BRIE: A Benchmark Inspection Experiment",
    "year": "1996",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/1996/96-13/96-13.html",
    "abstract": "The BenchmaRk Inspection Experiment (BRIE) is an attempt to\r\ndesign and package a simple experimental design that satisfies\r\nthe goals of a benchmark experiment.\r\nThe BRIE acronym has a second expansion: Basic RevIew Education.  BRIE is\r\ndesigned to have a second, complementary goal: a high quality training\r\npackage for a simple formal technical review method.  Thus, BRIE is a\r\ncurriculum module intended to be useful\r\nin either an industry or academic\r\nsetting to introduce students to both software review and\r\nempirical software engineering research practice.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-13",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "FTR"
    ],
    "sortKey": 199609
  },
  {
    "key": "csdl-96-14",
    "type": "article",
    "title": "Does Every Inspection Really Need A Meeting?",
    "year": "1998",
    "month": "January",
    "abstract": "\r\n  Software review is a fundamental component of the software quality\r\n  assurance process, yet significant controversies surround the most\r\n  efficient and effective review method. A central question surrounds the\r\n  use of meetings; traditional review practice views them as essential,\r\n  while more recent findings question their utility.  To provide insight\r\n  into this question, we conducted a controlled experiment to\r\n  assess several measures of cost and effectiveness for a meeting and\r\n  non-meeting-based review method.  The experiment used CSRS, a computer\r\n  mediated collaborative software review environment, and 24 three person\r\n  groups.  We found that the meeting-based review method studied was\r\n  significantly more costly than the non-meeting-based method, but that\r\n  meeting-based review did not find significantly more defects than the\r\n  non-meeting-based method. However, the meeting-based review method was\r\n  significantly better at reducing the level of false positives, and\r\n  subjects subjectively preferred meeting-based review over\r\n  non-meeting-based review.  This paper presents the motivation for this\r\n  experiment, its design and implementation, our empirical findings,\r\n  pointers to Internet repositories for replication or additional analysis\r\n  of this experiment, conclusions, and future directions. ",
    "journal": "Journal of Empirical Software Engineering",
    "volume": "4",
    "number": "1",
    "authors": [
      "Philip M. Johnson",
      "Danu Tjahjono"
    ],
    "keywords": [
      "FTR",
      "CSRS",
      "Pubs-Journal"
    ],
    "sortKey": 199801
  },
  {
    "key": "csdl-96-16",
    "type": "techreport",
    "title": "Measurement Dysfunction in Formal Technical Review",
    "year": "1996",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1996/96-16/96-16.html",
    "abstract": "This paper explores some of the issues that arise in effective\r\nuse of measures to monitor and improve formal technical review\r\npractice in industrial settings. It focuses on measurement\r\ndysfunction: a situation in which the act of measurement\r\naffects the organization in a counter-productive fashion,\r\nwhich leads to results directly counter to those intended\r\nby the organization for the measurement.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-16",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "FTR"
    ],
    "sortKey": 199611
  },
  {
    "key": "csdl-96-19",
    "type": "techreport",
    "title": "PSP/Baseline: Software Requirements Specification",
    "year": "1997",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1996/96-19/96-19.html",
    "abstract": "PSP/Baseline is a system design that predated Project LEAP\r\n  by about a year. The PSP/Baseline system was intended to\r\n    provide an approach to empirical software process\r\n  improvement inspired by, but different from, the Personal\r\n  Software Process.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-96-19",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199701
  },
  {
    "key": "csdl-97-02",
    "type": "article",
    "title": "Assessing Software Review Meetings: Results\r\n   of a Comparative Analysis of Two Experimental Studies",
    "year": "1997",
    "month": "March",
    "abstract": "Software review is a fundamental tool for software quality assurance.\r\nNevertheless, there are significant controversies as to the\r\nmost efficient and effective review method. One of the most\r\nimportant questions currently being debated is the utility\r\nof meetings.  Although almost all industrial review methods\r\nare centered around the inspection meeting, recent findings\r\ncall their value into question. In prior research the authors\r\nof this paper separately and independently conducted controlled\r\nexperimental studies to explore this issue.\r\n\r\nThis paper presents new research to understand the\r\nbroader implications of these two studies. To do this,\r\nwe designed and carried out a process of \\`\\`reconciliation''\r\nin which we established a common framework\r\nfor the comparison of the two experimental studies,\r\nre-analyzed the experimental data with respect to this\r\ncommon framework, and compared the results. Through\r\nthis process we found many striking similarities between\r\nthe results of the two studies, strengthening their\r\nindividual conclusions. It also revealed interesting\r\ndifferences between the two experiments, suggesting\r\nimportant avenues for future research.",
    "journal": "IEEE Transactions on Software Engineering",
    "volume": "23",
    "number": "3",
    "authors": [
      "Adam A. Porter",
      "Philip M. Johnson"
    ],
    "keywords": [
      "FTR",
      "CSRS",
      "Pubs-Journal"
    ],
    "sortKey": 199703
  },
  {
    "key": "csdl-97-06",
    "type": "techreport",
    "title": "LEAP Initial Toolset: Software Requirements Specification",
    "year": "1997",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1997/97-06/97-06.html",
    "abstract": "\r\nThis SRS for the LEAP Toolset is based heavily upon the ideas specified in\r\nthe PSP/Baseline SRS.\r\nConceptually, the LEAP toolset is a variant of the PSP/Baseline toolset in\r\ntwo major ways. First,\r\nthe LEAP toolset is substantially more simple to implement and use. It\r\nwill serve as a prototype for proof-of-concept evaluation of the ideas in\r\nthe PSP/Baseline toolkit. Second,\r\nthe LEAP toolset emphasizes group review and minimization of\r\nmeasurement dysfunction to a greater extent than the PSP/Baseline toolset.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-97-06",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199710
  },
  {
    "key": "csdl-97-08",
    "type": "techreport",
    "title": "Project LEAP: Lightweight, Empirical, Anti-measurement\r\n  dysfunction, and Portable Software Developer Improvement",
    "year": "1997",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/1997/97-08/97-08.pdf",
    "abstract": "Project LEAP investigates the use of lightweight, empirical,\r\nanti-measurement dysfunction, and portable approaches to software developer\r\nimprovement. A lightweight method involves a minimum of process\r\nconstraints, is relatively easy to learn, is amenable to integration with\r\nexisting methods and tools, and requires only minimal management investment\r\nand commitment.  An empirical method supports measurements that can lead to\r\nimprovements in the software developers skill.  Measurement dysfunction\r\nrefers to the possibility of measurements being used against the\r\nprogrammer, so the method must take care to collect and manipulate\r\nmeasurements in a \\`\\`safe'' manner. A portable method is one that can be\r\napplied by the developer across projects, organizations, and companies\r\nduring her career.\r\n\r\nProject LEAP will investigate the strengths and weaknesses of this approach\r\nto software developer improvement in a number of ways. First, it will\r\nenhance and evaluate a LEAP-compliant toolset and method for defect entry\r\nand analysis. Second, it will use LEAP-compliant tools to explore the\r\nquality of empirical data collected by the Personal Software\r\nProcess. Third, it will collect data from industrial evaluation of the\r\ntoolkit and method. Fourth, it will create component-based versions of\r\nLEAP-compliant tools for defect and time collection and analysis that can\r\nbe integrated with other software development environment\r\nsoftware. Finally, Project LEAP will sponsor a web site providing distance\r\nlearning materials to support education of software developers in\r\nempirically guided software process improvement. The web site will also\r\nsupport distribution and feedback of Project LEAP itself.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-97-08",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199710
  },
  {
    "key": "csdl-98-01",
    "type": "mastersthesis",
    "title": "JavaWizard: Investigating Defect Detection and Analysis",
    "year": "1998",
    "month": "May",
    "abstract": "This thesis presents a study designed to investigate the occurrence of\r\n  certain kinds of errors in Java programs using JavaWizard\r\n  (JWiz), a static analysis mechanism for Java source code.  JWiz is an\r\n  extensible tool that supports detection of certain commonly occurring\r\n  semantic errors in Java programs.  For this thesis, I used JWiz within a\r\n  research framework designed to reveal (1) knowledge about the kinds of\r\n  errors made by Java programmers, (2) differences among Java programmers\r\n  in the kinds of errors made, and (3) potential avenues for improvement in\r\n  the design and/or implementation of the Java language or environment.\r\n\r\n  I performed a four week case study, collecting data from 14 students over\r\n  three programming projects which produced approximately 12,800 lines of\r\n  code.  The JWiz results were categorized into three types: functional\r\n  errors (must be fixed for the program to work properly, maintenance\r\n  errors (program will work, but considered to be bad style), and false\r\n  positives (intended by the developer).  Out of 235 JWiz warnings, there\r\n  were 69 functional errors, 100 maintenance errors, and 66 false\r\n  positives.  The fix times for the functional errors added up to five and\r\n  a half hours, or 7.3 percent of the total amount of time spent debugging\r\n  in test.\r\n\r\n  I found that all programmers inject a few of the same mistakes into their\r\n  code, but these are only minor, non-defect causing errors.  I found that\r\n  the types of defects injected vary drastically with no correlation to\r\n  program size or developer experience.  I also found that for those\r\n  developers who make some of the mistakes that JWiz is designed for, JWiz\r\n  can be a great help, saving significant amounts of time ordinarily spent\r\n  tracking down defects in test.",
    "school": "University of Hawaii",
    "authors": [
      "Jennifer M. Geis"
    ],
    "keywords": [
      "JavaWizard",
      "Thesis-MS"
    ],
    "sortKey": 199805
  },
  {
    "key": "csdl-98-02",
    "type": "techreport",
    "title": "Automated Support for Technical Skill Acquisition and Improvement: An\r\nEvaluation of the Leap Toolkit",
    "year": 1999,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-02/98-02.pdf",
    "abstract": "\r\n\r\n  Software developers work too hard and yet do not get enough done.  Developing\r\n  high quality software efficiently and consistently is a very difficult\r\n  problem.  Developers and managers have tried many different solutions to\r\n  address this problem.  Recently their focus has shifted from the software\r\n  organization to the individual software developer.  The Personal Software\r\n  Process incorporates many of the previous solutions while focusing on the\r\n  individual software developer.\r\n\r\n  I combined ideas from prior research on the Personal Software Process, Formal\r\n  Technical Review and my experiences building automated support for software\r\n  engineering activities to produce the Leap toolkit.  The Leap toolkit is\r\n  intended to help individuals in their efforts to improve their development\r\n  capabilities.  Since it is a light-weight, flexible, powerful, and private\r\n  tool, it allows individual developers to gain valuable insight into their own\r\n  development process. The Leap toolkit also addresses many measurement and\r\n  data issues involved with recording any software development process.\r\n\r\n  The main thesis of this work is the Leap toolkit provides a more accurate and\r\n  effective way for developers to collect and analyze their software\r\n  engineering data than manual methods.  To evaluate this thesis I will\r\n  investigate three claims: (1) the Leap toolkit prevents many important errors\r\n  in data collection and analysis; (2) the Leap toolkit supports data\r\n  collection and analyses that are not amenable to manual enactment; and (3)\r\n  the Leap toolkit reduces the level of \\`\\`collection stage'' errors.  To\r\n  evaluate the first claim, I will show how the design of the Leap toolkit\r\n  effectively prevents important classes of errors shown to occur in prior\r\n  related research. To evaluate the second claim, I will conduct an experiment\r\n  investigating 14 different quantitative time estimation techniques based upon\r\n  historical size data to show that the Leap toolkit is capable of complex\r\n  analyses not possible in manual methods.  To evaluate the third claim, I will\r\n  analyze software developers data and conduct surveys to investigate the level\r\n  of data collection errors.\r\n\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-98-02",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap",
      "Thesis-Proposal"
    ],
    "sortKey": 199911
  },
  {
    "key": "csdl-98-04",
    "type": "inproceedings",
    "title": "Investigating Data Quality Problems in the PSP",
    "year": "1998",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-04/98-04.pdf",
    "abstract": "  The Personal Software Process (PSP) is used by software engineers to\r\n  gather and analyze data about their work.  Published studies typically\r\n  use data collected using the PSP to draw quantitative conclusions about\r\n  its impact upon programmer behavior and product quality.  However,\r\n  our experience using PSP in both industrial and academic settings\r\n  revealed problems both in collection of data and its later analysis.\r\n  We hypothesized that these two kinds of data quality problems could make a\r\n  significant impact upon the value of PSP measures.  To test this\r\n  hypothesis, we built a tool to automate the PSP and then examined 89\r\n  projects completed by ten subjects using the PSP manually in an\r\n  educational setting.  We discovered 1539 primary errors and categorized\r\n  them by type, subtype, severity, and age.  To examine the collection\r\n  problem we looked at the 90 errors that represented impossible\r\n  combinations of data and at other less concrete anomalies in Time\r\n  Recording Logs and Defect Recording Logs.  To examine the analysis\r\n  problem we developed a rule set, corrected the errors as far as possible,\r\n  and compared the original and corrected data.  This resulted in\r\n  significant differences for measures such as yield and the\r\n  cost-performance ratio, confirming our hypothesis.  Our results raise\r\n  questions about the accuracy of manually collected and analyzed PSP data,\r\n  indicate that integrated tool support may be required for high quality\r\n  PSP data analysis, and suggest that external measures\r\n  should be used when attempting to evaluate the impact of the PSP upon\r\n  programmer behavior and product quality.",
    "booktitle": "Sixth International Symposium on the Foundations of\r\n  Software Engineering (SIGSOFT'98)",
    "address": "Orlando, FL.",
    "authors": [
      "Anne M. Disney",
      "Philip M. Johnson"
    ],
    "keywords": [
      "PSP",
      "Pubs-Conference"
    ],
    "sortKey": 199811
  },
  {
    "key": "csdl-98-05",
    "type": "techreport",
    "title": "Investigating the Design and Evaluation of Research Web Sites",
    "year": "1998",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-05/98-05.html",
    "abstract": "The Aziza design group (formally 691 Web Development\r\nTeam) was commissioned by CSDL to implement a new web site. The group was\r\nassigned not only to update the entire site, but also to research and\r\ninvestigate the process and life cycle of World Wide Web site development.\r\n\r\nThis research document records the process and products that occurred\r\nwhile updating of the CSDL web site.\r\nIt discusses issues such as the balance between providing\r\ninformation and providing an image of the group,\r\nand ways to share research information over the World Wide Web.\r\nTo back the data researched, evaluations by the various users of the site\r\noccurred and are discussed here. This\r\ndocument records our web site design processes,\r\nwhat insights we had about those processes, our findings, and finally, our\r\nconclusions.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-98-05",
    "authors": [
      "Anne M. Disney",
      "Jarrett Lee",
      "Tuan Huynh",
      "Jennifer Saito"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199805
  },
  {
    "key": "csdl-98-06",
    "type": "techreport",
    "title": "CSDL Web Site Requirements Specification Document",
    "year": "1998",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-06/98-06.html",
    "abstract": "The purpose of this document is to\r\nsummarize the results of our background research for the\r\nCSDL web site, and describe the resulting requirements for\r\n  evaluation and review.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-98-06",
    "authors": [
      "Anne M. Disney",
      "Jarrett Lee",
      "Tuan Huynh",
      "Jennifer Saito"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199804
  },
  {
    "key": "csdl-98-07",
    "type": "techreport",
    "title": "Improving Mailing List Archives through Condensation",
    "year": 1998,
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-07/proposal.pdf",
    "abstract": "\r\n  Electronic mailing lists are popular Internet information\r\n  sources. Many mailing lists maintain an archive of all\r\n  messages sent to the list which is often searchable using\r\n  keywords. While useful, these archives suffer from the fact\r\n  that they include all messages sent to the list. Because they\r\n  include all messages, the ability of users to rapidly find\r\n  the information they want in the archive is hampered. To\r\n  solve the problems inherent in current mailing list archives,\r\n  I propose a process called condensation whereby one can strip\r\n  out all the extraneous, conversational aspects of the data\r\n  stream leaving only the pearls of interconnected wisdom.\r\n\r\n  To explore this idea of mailing list condensation and to test\r\n  whether or not a condensed archive of a mailing list is\r\n  actually better than traditional archives, I propose the\r\n  construction and evaluation of a new software system.  I name\r\n  this system the Mailing list Condensation System or MCS. MCS\r\n  will have two main parts: one which is dedicated to taking\r\n  the raw material from the mailing list and condensing it, and\r\n  another which stores the condensed messages and allows users\r\n  to retrieve them.\r\n\r\n  The condensation process is performed by a human editor\r\n  (assisted by a tool), not an AI system. While this adds a\r\n  certain amount of overhead to the maintenance of the\r\n  MCS-generated archive when compared to a traditional archive,\r\n  it makes the system implementation feasible.\r\n\r\n  I believe that an MCS-generated mailing list archive\r\n  maintained by an external researcher will be adopted as a\r\n  information resource by the subscribers of that mailing list.\r\n  Furthermore, I believe that subscribers will prefer the\r\n  MCS-generated archive over existing traditional archives of\r\n  the mailing list. This thesis will be tested by a series of\r\n  quantitative and qualitative measures.  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-98-07",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "MCS",
      "Thesis-Proposal"
    ],
    "sortKey": 199809
  },
  {
    "key": "csdl-98-08",
    "type": "mastersthesis",
    "title": "Data Quality Problems in the Personal Software Process",
    "year": "1998",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-08/98-08.pdf",
    "abstract": "  The Personal Software Process (PSP) is used by software engineers to\r\n  gather and analyze data about their work and to produce empirically\r\n  based evidence for the improvement of planning and quality in future\r\n  projects.  Published studies have suggested that adopting the PSP results\r\n  in improved size and time estimation and in reduced numbers of defects\r\n  found in the compile and test phases of development.  However, personal\r\n  experience using PSP in both industrial and academic settings caused me\r\n  to wonder about the quality of two areas of PSP practice: collection and\r\n  analysis.  To investigate this I built a tool to automate the PSP and\r\n  then examined 89 projects completed by nine subjects using the PSP in an\r\n  educational setting.  I discovered 1539 primary errors and analyzed them\r\n  by type, subtype, severity, and age.  To examine the collection problem\r\n  I looked at the 90 errors that represented impossible combinations of\r\n  data and at other less concrete anomalies in Time Recording Logs and\r\n  Defect Recording Logs.  To examine the analysis problem I developed a\r\n  rule set, corrected the errors as far as possible, and compared the\r\n  original and corrected data.  This resulted in substantial\r\n  differences for numbers such as yield and the cost-performance ratio.\r\n  The results raise questions about the accuracy of published data on the\r\n  PSP and directions for future research.",
    "school": "University of Hawaii",
    "authors": [
      "Anne M. Disney"
    ],
    "keywords": [
      "PSP",
      "Thesis-MS"
    ],
    "sortKey": 199808
  },
  {
    "key": "csdl-98-10",
    "type": "mastersthesis",
    "title": "Improving Mailing List Archives Through Condensation",
    "year": "2000",
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-10/98-10.pdf",
    "abstract": "\r\n  Searching the archives of electronic product support mailing lists often\r\n  provides unsatisfactory results for users looking for quick solutions to\r\n  their problems. Archives are inconvenient because they are too voluminous,\r\n  lack efficient searching mechanisms, and retain the original thread structure\r\n  which is not relevant to knowledge seekers.\r\n\r\n  I present MCS, a system which improves mailing list archives through \\\\em\r\n  condensation. Condensation involves omitting redundant or useless\r\n  messages, and adding meta-level information to messages to improve searching.\r\n  The condensation process is performed by a human assisted by an editing tool.\r\n\r\n  I describe the design and implementation of MCS, and compare it to related\r\n  systems. I also present my experiences condensing a 1428 message mailing list\r\n  archive to an archive containing only 177 messages (an 88\\\\% reduction). The\r\n  condensation required only 1.5 minutes of editor effort per message. The\r\n  condensed archive was adopted by the users of the mailing list.\r\n",
    "school": "University of Hawaii",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "MCS",
      "Thesis-MS"
    ],
    "sortKey": 200003
  },
  {
    "key": "csdl-98-11",
    "type": "article",
    "title": "The Personal Software Process: A Cautionary Case Study",
    "year": "1998",
    "month": "November",
    "abstract": "\r\nIn 1995, Watts Humphrey introduced the Personal Software Process in\r\nhis book, A Discipline for Software Engineering.\r\nProgrammers who use the PSP gather measurements related to\r\ntheir own work products and the process by which they were developed,\r\nthen use these measures to drive changes to their development\r\nbehavior.\r\nAfter almost three years of\r\nteaching and using the PSP, we have experienced the educational\r\nbenefits of the PSP. As researchers, however, we have also uncovered\r\nevidence of certain limitations, which we believe can help improve\r\nappropriate adoption and evaluation of the method by industrial\r\nand academic practitioners. This paper presents an overview of\r\na case study we performed that presents evidence\r\nof potential data quality problems, along with\r\nrecommendations for those interested in adopting\r\nPSP within industry or academia.",
    "journal": "IEEE Software",
    "volume": "15",
    "number": "6",
    "authors": [
      "Philip M. Johnson",
      "Anne M. Disney"
    ],
    "keywords": [
      "PSP",
      "Pubs-Journal"
    ],
    "sortKey": 199811
  },
  {
    "key": "csdl-98-12",
    "type": "inproceedings",
    "title": "Project LEAP: Personal Process Improvement for the Differently Disciplined",
    "year": "1999",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-12/98-12.pdf",
    "abstract": "\r\nThis paper overviews the research motivations for Project Leap.\r\n",
    "booktitle": "Proceedings of the Doctoral Workshop from the\r\n1999 International Conference on Software Engineering",
    "address": "Los Angeles, CA.",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap",
      "Pubs-Workshop"
    ],
    "sortKey": 199905
  },
  {
    "key": "csdl-98-13",
    "type": "article",
    "title": "A Critical Analysis of PSP Data Quality: Results from a Case Study",
    "year": "1999",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-13/98-13.pdf",
    "abstract": "\r\n  The Personal Software Process (PSP) is used by software engineers to\r\n  gather and analyze data about their work.  Published studies typically\r\n  use data collected using the PSP to draw quantitative conclusions about\r\n  its impact upon programmer behavior and product quality.  However, our\r\n  experience using PSP led us to question the quality of data both during\r\n  collection and its later analysis.  We hypothesized that data quality\r\n  problems can make a significant impact upon the value of PSP\r\n  measures---significant enough to lead to incorrect conclusions regarding\r\n  process improvement.  To test this hypothesis, we built a tool to\r\n  automate the PSP and then examined 89 projects completed by ten subjects\r\n  using the PSP manually in an educational setting.  We discovered 1539\r\n  primary errors and categorized them by type, subtype, severity, and age.\r\n  To examine the collection problem we looked at the 90 errors that\r\n  represented impossible combinations of data and at other less concrete\r\n  anomalies in Time Recording Logs and Defect Recording Logs.  To examine\r\n  the analysis problem we developed a rule set, corrected the errors as far\r\n  as possible, and compared the original and corrected data.  We found\r\n  significant differences for measures such as yield and the\r\n  cost-performance ratio, confirming our hypothesis.  Our results raise\r\n  questions about the accuracy of manually collected and analyzed PSP data,\r\n  indicate that integrated tool support may be required for high quality\r\n  PSP data analysis, and suggest that external measures should be used when\r\n  attempting to evaluate the impact of the PSP upon programmer behavior and\r\n  product quality.\r\n",
    "journal": "Journal of Empirical Software Engineering",
    "authors": [
      "Philip M. Johnson",
      "Anne M. Disney"
    ],
    "keywords": [
      "PSP",
      "Pubs-Journal"
    ],
    "sortKey": 199912
  },
  {
    "key": "csdl-98-15",
    "type": "techreport",
    "title": "JavaWizard User Guide",
    "year": "1998",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1998/98-15/98-15.html",
    "abstract": "\r\n  This document describes the use of JavaWizard, an automated code\r\n  checker for the Java programming language. The user guide\r\n  includes directions for installation, command line\r\n  invocation, and graphical user interface invocation.\r\n  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-98-15",
    "authors": [
      "Jennifer M. Geis"
    ],
    "keywords": [
      "JavaWizard"
    ],
    "sortKey": 199812
  },
  {
    "key": "csdl-99-01",
    "type": "techreport",
    "title": "Reflective Software Engineering with the Leap Toolkit",
    "year": "1999",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-01/",
    "abstract": "\r\n  This document describes a empirical, experience-based approach to\r\n  software engineering at the individual level using the Leap toolkit.\r\n  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-01",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199901
  },
  {
    "key": "csdl-99-02",
    "type": "techreport",
    "title": "LOCC User Guide",
    "year": "1999",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-02/99-02.html",
    "abstract": "\r\n  This document describes the installation and use of LOCC.\r\nLOCC is a general mechanism for producing one or more measurements of the\r\nsize of work products.  LOCC\r\ncan produce both the \"total\" size of a work product, as well as the\r\n\"difference\" in size between successive versions of the same work product.\r\n  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-02",
    "authors": [
      "Joseph A. Dane"
    ],
    "keywords": [
      "LOCC"
    ],
    "sortKey": 199901
  },
  {
    "key": "csdl-99-04",
    "type": "techreport",
    "title": "A Case Study Of Defect Detection And Analysis With JWiz",
    "year": "1999",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-04/99-04.pdf",
    "abstract": "\r\nThis paper presents a study designed to investigate the occurrence of certain kinds of errors in Java programs using JavaWizard (JWiz), a static analysis mechanism for Java source code. JWiz is a tool that supports detection of certain commonly occurring semantic errors in Java programs.\r\n\r\nJWiz was used within a research framework designed to reveal (1) knowledge about the kinds of errors made by Java programmers, (2) differences among Java programmers in the kinds of errors made, and (3) potential avenues for improvement in the design and/or implementation of the Java language or environment.\r\n\r\nWe found that all programmers inject a few of the same mistakes into their code, but these are only minor, non-defect causing errors. We also found that the types of defects injected vary drastically with no correlation to program size or developer experience.\r\n\r\nFinally, we found that for those developers who make some of the mistakes that JWiz is designed for, JWiz can be a great help, saving significant amounts of time ordinarily spent tracking down defects in test.\r\n\r\n  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-04",
    "authors": [
      "Jennifer M. Geis"
    ],
    "keywords": [
      "JavaWizard"
    ],
    "sortKey": 199911
  },
  {
    "key": "csdl-99-05",
    "type": "techreport",
    "title": "Aspect Technology Fund Grant Proposal: Condensation of Educational Mailing Lists",
    "year": "1999",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-05/99-05.pdf",
    "abstract": "\r\n  I propose the extension of the Mailinglist Condensation System to the realm\r\n  of class support mailing lists in education. Condensed archives of the\r\n  mailing lists can be used by future students to learn from the students of\r\n  previous semesters, instead of having the information thrown out at the end\r\n  of each semester. I will pursue this by piloting the system on two classes in\r\n  Fall 1999. Furthermore, I show the feasibility of creating a company based on\r\n  the \\\\em open source model which will sell service and support for MCS.\r\n  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-05",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "MCS"
    ],
    "sortKey": 199902
  },
  {
    "key": "csdl-99-06",
    "type": "techreport",
    "title": "The Aspect Technology Fund Grant Proposal:\r\nBusiness Plan Improvement using Software Engineering Principles",
    "year": "1999",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-06/99-06.pdf",
    "abstract": "This proposal describes the motivation, organization,\r\n  and potential products and services for a company that\r\n  supports the creation of high quality business plans.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-06",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199902
  },
  {
    "key": "csdl-99-07",
    "type": "inproceedings",
    "title": "Project LEAP: Addressing Measurement Dysfunction in Review",
    "year": "1999",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-07/99-07.pdf",
    "abstract": "\r\nThe software industry and academia believe that software review,\r\nspecifically Formal Technical Review (FTR), is a powerful method for\r\nimproving the quality of software.\r\nComputer support for FTR reduces the overhead of conducting\r\nreviews for reviewers and managers.\r\nComputer support of FTR also allow for the easy collection of empirical\r\nmeasurement of process and products of software review.  These measurements\r\nallow researchers or reviewers to gain valuable insights into the review\r\nprocess.\r\nAfter looking closely at review metrics, we became aware of the possibility\r\nof measurement dysfunction in formal technical review.  Measurement\r\ndysfunction is a situation in which the act of measurement affects the\r\norganization in a counter-productive fashion, which leads to results\r\ndirectly counter to those intended by the organization for the measurement.\r\nHow can we reduce the threat of measurement dysfunction in software review\r\nwithout losing the benefits of metrics collection?  Project\r\nLEAP is our attempt\r\nat to answer this question.  This paper present Project Leap's\r\napproach to the design, implementation,\r\nand evaluation of tools and methods for empirically-based, individualized\r\nsoftware developer improvement.\r\n  ",
    "booktitle": "Proceedings of the Eighth International Conference on\r\n  Human-Computer Interaction",
    "address": "Munich, Germany",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap",
      "FTR",
      "Pubs-Conference"
    ],
    "sortKey": 199908
  },
  {
    "key": "csdl-99-08",
    "type": "inproceedings",
    "title": "Leap: A \\`\\`Personal Information Environment'' for Software Engineers",
    "year": "1999",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-08/99-08.pdf",
    "abstract": "  The Leap toolkit is designed to provide Lightweight, Empirical,\r\nAnti-measurement dysfunction, and Portable approaches to\r\nsoftware developer improvement. Using Leap, software engineers gather and\r\nanalyze personal data concerning time, size, defects, patterns, and\r\nchecklists. They create and maintain definitions describing their software\r\ndevelopment procedures, work products, and project attributes, including\r\ndocument types, defect types, severities, phases, and size definitions.\r\nLeap also supports asynchronous software review and facilitates integration\r\nof this group-based data with individually collected data.  The Leap\r\ntoolkit provides a \\`\\`reference model'' for a personal information\r\nenvironment to support skill acquisition and improvement for software\r\nengineers.",
    "booktitle": "Proceedings of the 1999 International Conference on\r\n  Software Engineering",
    "address": "Los Angeles, CA.",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap",
      "Pubs-Conference"
    ],
    "sortKey": 199905
  },
  {
    "key": "csdl-99-10",
    "type": "mastersthesis",
    "title": "Modular Program Size Counting",
    "year": "1999",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-10/99-10.pdf",
    "abstract": "\r\n\r\n  Effective program size measurement is difficult to accomplish.  Factors\r\n  such as program implementation language, programmer experience and\r\n  application domain influence the effectiveness of particular size metrics\r\n  to such a degree that it is unlikely that any single size metric will be\r\n  appropriate for all applications. This thesis introduces a tool, LOCC,\r\n  which provides a generic architecture and interface to the production and\r\n  use of different size metrics.  Developers can use the size metrics\r\n  distributed with LOCC or can design their own metrics, which can be\r\n  easily incorporated into LOCC.  LOCC pays particular attention to the\r\n  problem of supporting incremental development, where a work product is\r\n  not created all at once but rather through a sequence of small changes\r\n  applied to previously developed programs.  LOCC requires that developers\r\n  of new size metrics support this approach by providing a means of\r\n  comparing two versions of a program.  LOCC's effectiveness was evaluated\r\n  by using it to count over 50,000 lines of Java code, by soliciting\r\n  responses to a questionnaire sent to users, and by personal reflection on\r\n  the process of using and extending it.  The evaluation revealed that\r\n  users of LOCC found that it assisted them in their development process,\r\n  although there were some improvements which could be made.\r\n\r\n\r\n",
    "school": "University of Hawaii",
    "authors": [
      "Joseph A. Dane"
    ],
    "keywords": [
      "LOCC",
      "Thesis-MS"
    ],
    "sortKey": 199912
  },
  {
    "key": "csdl-99-11",
    "type": "techreport",
    "title": "Java-based software engineering technology\r\n  for high quality development in \"Internet Time\"\r\n  organizations",
    "year": "1999",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-11/Welcome.html",
    "abstract": "\r\nThis grant will support deployment and evaluation of four software\r\nengineering technologies to support high quality development in \"Internet\r\nTime\" environments.  The Leap toolset supports technical skill acquisition.\r\nMCS supports improves the capability of mailing lists to provide technical\r\nsupport. OpenJavaDoc facilitates open source distribution and software\r\ndevelopment. The JavaWizard Internet Trial provides community-wide\r\nstatistics on Java programming errors.  The research projects will be\r\nstructured to allow Sun developers with early access to the systems, to\r\nprovide tangible software engineering benefits to Sun development groups,\r\nand to enable Sun developers to provide feedback that can influence future\r\ndevelopment.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-11",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Leap",
      "JavaWizard"
    ],
    "sortKey": 199902
  },
  {
    "key": "csdl-99-12",
    "type": "techreport",
    "title": "Teaching Software Engineering skills with the Leap Toolkit",
    "year": "1999",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-12/99-12.pdf",
    "abstract": "\r\nThe Personal Software Process (PSP) teaches software developers many valuable\r\nsoftware engineering techniques.  Developers learn how to develop high quality\r\nsoftware efficiently and how to accurately estimate the amount of effort it will\r\ntake. To accomplish this the PSP forces the developer to follow a very strict\r\ndevelopment model, to manually record time, to defect and size data, and analyze\r\ntheir data.  The PSP appears successful at improving developer performance during\r\nthe training, yet there are questions concerning long-term adoption rates and\r\nthe accuracy of PSP data.\r\n\r\nThis paper presents our experiences using the Leap toolkit, an automated tool\r\nto support personal developer improvement.  The Leap toolkit incorporates ideas\r\nfrom the PSP and group review.  It relaxes some of the constraints in the PSP\r\nand reduces process overhead.  We are using the Leap toolkit in an advanced\r\nsoftware engineering course at the University of Hawaii, Manoa.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-99-12",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap"
    ],
    "sortKey": 199911
  },
  {
    "key": "csdl-99-13",
    "type": "inproceedings",
    "title": "Improving Problem-Oriented Mailing List Archives with MCS",
    "year": "2000",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-13/99-13.pdf",
    "abstract": "\r\nDevelopers often use electronic mailing lists when seeking assistance with a\r\nparticular software application. The archives of these mailing lists provide a\r\nrich repository of problem-solving knowledge. Developers seeking a quick answer\r\nto a problem find these archives inconvenient, because they lack efficient\r\nsearching mechanisms, and retain the structure of the original conversational\r\nthreads which are rarely relevant to the knowledge seeker.\r\n\r\nWe present a system called MCS which improves mailing list archives through a\r\nprocess called \\\\em condensation. Condensation involves several tasks:\r\nextracting only messages of longer-term relevance, adding metadata to those\r\nmessages to improve searching, and potentially editing the content of the\r\nmessages when appropriate to clarify. The condensation process is performed by\r\na human editor (assisted by a tool), rather than by an artificial intelligence\r\n(AI) system.\r\n\r\nWe describe the design and implementation of MCS, and compare it to related\r\nsystems. We also present our experiences condensing a 1428 message mailing list\r\narchive to an archive containing only 177 messages (an 88\\\\% reduction). The\r\ncondensation required only 1.5 minutes of editor effort per message. The\r\ncondensed archive was adopted by the users of the mailing list.\r\n",
    "booktitle": "Proceedings of the 2000 International Conference on\r\n  Software Engineering",
    "address": "Limerick, Ireland",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "MCS",
      "Pubs-Conference"
    ],
    "sortKey": 200006
  },
  {
    "key": "csdl-99-15",
    "type": "phdthesis",
    "title": "Investigating Individual Software Development: An\r\nEvaluation of the Leap Toolkit",
    "year": "2000",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/1999/99-15/99-15.pdf",
    "abstract": "\r\n  Software developers work too hard and yet do not get enough done.\r\n  Developing high quality software efficiently and consistently is a very\r\n  difficult problem.  Developers and managers have tried many different\r\n  solutions to address this problem.  Recently their focus has shifted from\r\n  the software organization to the individual software developer.  For\r\n  example, the Personal Software Process incorporates many of the previous\r\n  solutions while focusing on the individual software developer.\r\n\r\n  This thesis presents the Leap toolkit, which combines ideas from prior\r\n  research on the Personal Software Process, Formal Technical Review and my\r\n  experiences building automated support for software engineering activities.\r\n  The Leap toolkit is intended to help individuals in their efforts to improve\r\n  their development capabilities.  Since it is a light-weight, flexible,\r\n  powerful, and private tool, it provides a novel way for developers to gain\r\n  valuable insight into their own development process. The Leap toolkit also\r\n  addresses many measurement and data issues involved with recording any\r\n  software development process.\r\n\r\n  The main thesis of this work is that the Leap toolkit provides a novel\r\n  tool that allows developers and researchers to collect and analyze\r\n  software engineering data.  To investigate some of the issues of data\r\n  collection and analysis, I conducted a case study of 16 graduate students\r\n  in an advanced software engineering course at the University of Hawaii,\r\n  Manoa.  The case study investigated: (1) the relationship between the\r\n  Leap toolkit's time collection tools and \\`\\`collection stage'' errors; and\r\n  (2) different time estimation techniques supported by the Leap toolkit.\r\n\r\n  The major contributions of this research includes (1) the LEAP design\r\n  philosophy; (2) the Leap toolkit, which is a novel tool for individual\r\n  developer improvement and software engineering research; and (3) the insights\r\n  from the case study about collection overhead, collection error and project\r\n  estimation.",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap",
      "Thesis-PhD"
    ],
    "sortKey": 200008
  },
  {
    "key": "csdl2-00-01",
    "type": "inproceedings",
    "title": "Lessons Learned from Teaching Reflective Software Engineering\r\n using the Leap Toolkit",
    "year": "2000",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-01/00-01.pdf",
    "abstract": "\r\nThis paper presents our experiences using the Leap toolkit, an automated tool\r\nto support personal developer improvement.  The Leap toolkit incorporates ideas\r\nfrom the PSP and group review.  It relaxes some of the constraints in the PSP\r\nand reduces process overhead.  Our lessons learned include: (1)\r\nCollecting data about software development is useful; (2) Leap enables users to accurately estimate size and time\r\n  in a known domain; (3) Many users feel their programming skills improve\r\n  primarily due to practice, not their method; (4) To reduce measurement dysfunction, make the results less visible; (5) Partial defect collection and analysis is still useful; (6) Tool support should require few machine resources; and (7)\r\nExperience may lead to overconfidence.\r\n",
    "booktitle": "Proceedings of the 2000 International Conference on Software Engineering, Workshop on Software Engineering Education",
    "address": "Limerick, Ireland",
    "authors": [
      "Carleton A. Moore"
    ],
    "keywords": [
      "Leap",
      "Pubs-Workshop"
    ],
    "sortKey": 200005
  },
  {
    "key": "csdl2-00-03",
    "type": "article",
    "title": "Empirically Guided Software Effort Guesstimation",
    "year": "2000",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-03/00-03.pdf",
    "abstract": "\r\nFor several years, we have pursued an initiative called Project LEAP, whose\r\ngoal is the improvement of individual developers though lightweight,\r\nempirical, anti-measurement dysfunction, and portable software engineering\r\ntools and methods.\r\nDuring the Fall of 1999, we performed a case study using the LEAP toolkit\r\nin a graduate software engineering class.  One of the goals of the study\r\nwas to evaluate the various analytical estimation methods made available by\r\nthe toolkit.  We were curious as to whether a single method would prove\r\nmost accurate, or whether the most accurate method would depend upon the\r\ntype of project or the specific developer.  To our surprise, we found that,\r\nin most cases, the developer-generated \\`\\`guesstimates'' were more accurate\r\nthan the analytical estimates.\r\nWe also found that the PROBE method of the\r\nPersonal Software Process, perhaps the most widely\r\npublicized analytical approach to personal effort estimation, was the sixth\r\nmost accurate method.  Finally, we found that access to a range of\r\nanalytical estimation methods appeared to be useful to developers in\r\ngenerating their guesstimates and improving them over time. ",
    "journal": "IEEE Software",
    "volume": 17,
    "number": 6,
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Joseph A. Dane",
      "Robert S. Brewer"
    ],
    "keywords": [
      "Leap",
      "PSP",
      "Pubs-Journal"
    ],
    "sortKey": 200012
  },
  {
    "key": "csdl2-00-04",
    "type": "mastersthesis",
    "title": "JavaJam: Supporting Collaborative Review and Improvement of Open Source Software",
    "year": "2000",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-04/00-04.pdf",
    "abstract": "\r\nDevelopment of Open Source Software is in many cases a collaborative\r\neffort, often by geographically dispersed team members.  The problem for\r\nmembers is to efficiently review documentation and source code and to\r\ncollect and share comments and annotations that will lead to improvements\r\nin performance, functionality, and quality.  javaJAM is a collaborative\r\ntool for assisting with the development of Open Source Software.  It\r\ngenerates integrated documentation and source code presentations to be\r\nviewed over the web.  More importantly, javaJAM provides an interactive\r\nenvironment for navigating documentation and source code and for posting\r\nannotations.  javaJAM creates relationships between sections of\r\ndocumentation, source, and related comments and annotations to provide the\r\nnecessary cross-referencing to support quick and efficient reviews.\r\njavaJAM was evaluated in a classroom setting.  Student teams posted\r\nprojects for team review using javaJAM and found it to be an easy way to\r\nreview their projects and post their comments.\r\n ",
    "school": "University of Hawaii",
    "authors": [
      "Monir Hodges"
    ],
    "keywords": [
      "JavaJam",
      "Thesis-MS"
    ],
    "sortKey": 200008
  },
  {
    "key": "csdl2-00-05",
    "type": "techreport",
    "title": "The design, implementation, and evaluation of INCA: a proposal for an\r\nautomated system for approval code allocation",
    "year": 2001,
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-05/00-05.pdf",
    "abstract": "\r\nThe ICS department of the University of Hawaii has faced problems\r\nsurrounding approval code distribution as its enrollment has increased. The\r\nmanual system for approval code allocation was time-consuming, ineffective\r\nand inefficient. INCA is designed to automate the task of approval code\r\nallocation, improve the quality of course approval decisions, and decrease\r\nthe administrative overhead involved in those decisions.\r\n\r\nBased upon informal feedback from department administrators, it appears\r\nthat INCA reduces their overhead and makes their life easier. What are the\r\nold problems that are solved by INCA? Does INCA introduce new kinds of\r\nproblems for the administrator? What about the students? Are they\r\ncompletely satisfied with the system? In what ways does the system benefit\r\nthe department as a whole?\r\n\r\nIn this thesis, I will discuss design, implementation and evaluation of\r\nINCA. I will evaluate INCA from the viewpoints of students, administrators,\r\nand the department. I will do an email analysis to prove that INCA reduces\r\nthe administrative overheads. I will conduct a user survey to investigate\r\nwhether INCA improves the predictability and understandability of\r\nstudents. Finally, I will analyze the INCA database to extract the\r\ninformation useful to the departments for course curriculum planning. The\r\nevaluation of INCA will provide us with useful insights for future\r\nimprovements of INCA and improving the student experience with academic\r\nsystems in general.\r\n\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-11",
    "authors": [
      "Jitender Miglani"
    ],
    "keywords": [
      "Inca",
      "Thesis-Proposal"
    ],
    "sortKey": 200109
  },
  {
    "key": "csdl2-00-06",
    "type": "techreport",
    "title": "A Proposal for VCommerce: An Internet Entrepreneurship Environment",
    "year": "2000",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-06/00-06.pdf",
    "abstract": "The document proposes the development of an internet entrepreneurship simulation environment called VCommerce for the University of Hawaii Aspect Technology Grant program.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-06",
    "authors": [
      "Mette L. Moffett"
    ],
    "keywords": [
      "VCommerce"
    ],
    "sortKey": 200002
  },
  {
    "key": "csdl2-00-07",
    "type": "techreport",
    "title": "VCommerce Entrepreneur User Guide",
    "year": "2000",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-07/00-07.pdf",
    "abstract": "VCommerce is intended to provide you with an educational and stimulating introduction to the initial, \"startup\" phases of entreprenurial activity in the online, Internet-enabled economy.  VCommerce is designed to reward those who can innovate, explore market niches, design viable businesses within the context of the VCommerce world, exploit the information resources of the Internet for business planning, react appropriately to VCommerce market data, and develop effective partnerships with other people with complementary skills. This user guide provides an overview of the VCommerce process.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-07",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "VCommerce"
    ],
    "sortKey": 200001
  },
  {
    "key": "csdl2-00-08",
    "type": "techreport",
    "title": "VCommerce Example Business Plan: Pizza Portal",
    "year": "2000",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-08/00-08.pdf",
    "abstract": "This document provides an example business plan for the VCommerce simulation.  It details the design and implementation of a hypothetical business called \"Pizza Portal\".\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-08",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "VCommerce"
    ],
    "sortKey": 200001
  },
  {
    "key": "csdl2-00-10",
    "type": "techreport",
    "title": "A Comparative Review of LOCC and CodeCount",
    "year": "2000",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-10/",
    "abstract": "\r\nThis paper provides one review of the comparative\r\nstrengths and weaknesses of <A\r\nHREF=\"http://csdl.ics.hawaii.edu/Tools/LOCC/LOCC.html\">LOCC</A> and <A\r\nHREF=\"http://sunset.usc.edu/research/CODECOUNT/index.html\">CodeCount</A>,\r\ntwo tools for calculating the size of software source code.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-10",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "LOCC"
    ],
    "sortKey": 200011
  },
  {
    "key": "csdl2-00-09",
    "type": "techreport",
    "title": "Aligning the financial services, fulfillment distribution infrastructure, and small business sectors in Hawaii through B2B technology innovation",
    "year": "2000",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-09/00-09.pdf",
    "abstract": "This document is a proposal to the University of Hawaii New Economy Research Grant Program. It describes a study intended to discover business-to-business technologies that have the potential to improve the efficiency and reduce the cost for small Hawaiian businesses that produce physical products and desire to expand into national and international markets.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-09",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 200009
  },
  {
    "key": "csdl2-00-11",
    "type": "techreport",
    "title": "The Design, Development, and Evaluation of VCommerce: A Virtual Environment to Support Entrepreneurial Learning",
    "year": "2000",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-11/00-11.pdf",
    "abstract": "This thesis describes VCommerce, a virtual environment whose goal\r\nis to significantly increase students' knowledge of the process involved with\r\nstarting a high tech company, and through hands-on experience enhance their confidence\r\nin their ability to start such a company.  The thesis presents the design and\r\nimplementation of the environment, and a case study of its use in a graduate\r\ncourse comprised of 50 students from amongst the computer science, business school,\r\nengineering, and other departments. A course survey and fourteen post-semester\r\ninterviews show that students felt the class was extremely effective in teaching\r\nentrepreneurship concepts, and that they have learned valuable lessons about managing\r\nan Internet startup.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-11",
    "authors": [
      "Mette L. Moffett"
    ],
    "keywords": [
      "Thesis-BS",
      "VCommerce"
    ],
    "sortKey": 200012
  },
  {
    "key": "csdl2-00-12",
    "type": "techreport",
    "title": "A controlled experimental study of the Personal Waterslide\r\nProcess: Results and Interpretations",
    "year": "1999",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-12/pwp.pdf",
    "abstract": "The paper reports on the Personal Waterslide Process,\r\nan innovative software engineering technique pioneered during the 1999\r\nmeeting of the International Software Engineering Research Network at\r\nits annual meeting in Oulu, Finland.\r\n",
    "institution": "Waterslide Engineering Institute, Oulu, Finland",
    "number": "CSDL-00-12",
    "authors": [
      "Philip M. Johnson",
      "Audris Mockus",
      "Larry Votta"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 199906
  },
  {
    "key": "csdl2-00-13",
    "type": "techreport",
    "title": "VCommerce Administrator Guide",
    "year": "2001",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2000/00-13/00-13.pdf",
    "abstract": "Provides administrative support for installation, configuration, and running the VCommerce simulation.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-00-13",
    "authors": [
      "Mette L. Moffett",
      "Brian T. Pentland",
      "Philip M. Johnson"
    ],
    "keywords": [
      "VCommerce"
    ],
    "sortKey": 200101
  },
  {
    "key": "csdl2-01-01",
    "type": "mastersthesis",
    "title": "The Hardware Subroutine Approach to Developing Custom Co-Processors",
    "year": "2001",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-01/01-01.pdf",
    "abstract": "\r\nThe Hardware Subroutine Approach to developing a reconfigurable, custom\r\nco-processor is an architecture and a process for implementing a hardware\r\nsubsystem as a direct replacement for a subroutine in a larger program.\r\nThe approach provides a framework that helps the developer analyze the\r\ntradeoffs of using hardware acceleration, and a design procedure to guide\r\nthe implementation process.  To illustrate the design process a HWS\r\nimplementation of a derivative estimation subroutine is described.  In this\r\ncontext I show how key performance parameters of the HWS can be estimated\r\nin advance of complete implementation and decisions made regarding the\r\npotential benefit of implementation alternatives to program performance\r\nimprovement.  Performance of the actual hardware coprocessor is compared to\r\nthe software-only implementation and to estimates developed during the\r\ndesign process.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Mark F. Waterson"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 200105
  },
  {
    "key": "csdl2-01-02",
    "type": "article",
    "title": "Lessons learned from VCommerce: A virtual\r\nenvironment for interdisciplinary learning about software entrepreneurship",
    "year": "2003",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-02/01-02.pdf",
    "abstract": "\r\nThe Virtual Commerce (VCommerce) simulation environment provides\r\na framework within which students can develop internet-based\r\nbusinesses. Unlike most entrepreneurship simulation games, the objective\r\nof VCommerce is not to maximize profits.  The environment, which is\r\ndesigned for use in interdisciplinary classroom settings, provides an\r\nopportunity for students with different backgrounds to build (virtual)\r\nbusinesses together.  Elements of VCommerce, such as its open-ended\r\nbusiness model and product; significant technical depth; external\r\nplayers; and severe time constraints combine to create a surprisingly\r\nrealistic and effective learning experience for students in both computer science and management.  This article overviews the VCommerce environment and\r\nour lessons learned from using it at both the University of Hawaii and\r\nMichigan State University. ",
    "journal": "Communications of the ACM",
    "volume": "46",
    "number": "12",
    "authors": [
      "Philip M. Johnson",
      "Mette L. Moffett",
      "Brian T. Pentland"
    ],
    "keywords": [
      "VCommerce",
      "Pubs-Journal"
    ],
    "sortKey": 200312
  },
  {
    "key": "csdl2-01-04",
    "type": "techreport",
    "title": "Hackystat Design Notes",
    "year": "2001",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-04/01-04.html",
    "abstract": "\r\nThis document collects together a series of design notes concerning\r\nHackystat, a system for automated collection and analysis of software engineering data.  Some of the design notes include: Insights from the Presto Development Project: Requirements from the IDE for automated data collection; A roundtable discussion of Hackystat; Change management in Hackystat; Validated idle time\r\ndetection; and Defect collection and analysis in Hackystat.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-04",
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Jitender Miglani"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200106
  },
  {
    "key": "csdl2-01-05",
    "type": "techreport",
    "title": "Hackystat Developer Release Installation Guide",
    "year": "2001",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-05/01-05.html",
    "abstract": "\r\nThis document provides an overview of the Hackystat developer\r\ndistribution. This includes the structure of the source code, the\r\nJava-based component technologies  Hackystat is built on (including Tomcat,\r\nAnt, Soap, Xerces, Cocoon, JavaMail, JUnit, HttpUnit, JDOM,\r\nand Jato), configuration instructions, testing, and frequently\r\nasked questions. An updated version of this document is provided\r\nin the actual developer release package; this technical report is\r\nintended to provide easy access to near-current instructions for\r\nthose who are evaluating the system and would like to learn more\r\nbefore downloading the entire package.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-05",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200106
  },
  {
    "key": "csdl2-01-06",
    "type": "techreport",
    "title": "Inca Business Plan",
    "year": "2001",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-06/01-06.pdf",
    "abstract": "\r\nInca is an Enterprise JavaBean based technology to provide Internet-based\r\nallocation of course approval codes.  This business plan explores the\r\ncommercial potential of this technology.  The Inca business plan was\r\nselected as a finalist in the 2001 Business Plan Competition of the\r\nUniversity of Hawaii College of Business Administration.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-06",
    "authors": [
      "Jitender Miglani"
    ],
    "keywords": [
      "Inca"
    ],
    "sortKey": 200104
  },
  {
    "key": "csdl2-01-07",
    "type": "techreport",
    "title": "Lightweight Disaster Management Training and Control",
    "year": 2001,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-07/01-07.pdf",
    "abstract": "\r\nDisaster management is increasingly a global enterprise for international\r\norganizations,  governmental institutions, and arguably individuals.  The\r\ntempo at which information is  collected and disseminated during natural\r\nand man-made disasters paces the rate and  effectiveness of relief\r\nefforts.  As the Internet becomes a ubiquitous platform for sharing\r\ninformation, a browser-based application can provide disaster managers a\r\nlightweight  solution for training and control.  A heavyweight solution\r\nmight include dedicated  communications, real-time command and control\r\nsoftware and hardware configurations,  and dedicated personnel.  In\r\ncontrast, a lightweight solution requires trained personnel  with Internet\r\naccess to a server via computers or hand-held devices.  Tsunami Sim\r\nprovides asynchronous situational awareness with an interactive, Geographic\r\nInformation  System (GIS).  Tsunami Sim is not capable of providing\r\nreal-time situational awareness  nor intended to replace or compete with\r\nheavyweight solutions developed for that  purpose.  Rather, Tsunami Sim\r\nwill enhance the disaster managers' abilities to train for  and control\r\ndisasters in regions where heavyweight solutions are impractical.  For\r\ndistributed training, Tsunami Sim will provide deterministic and stochastic\r\nscenarios of  historical and fictional disasters.  Tsunami Sim will be an\r\nopen-source, Java application  implemented for maintainability and\r\nextensibility.  United States Pacific Command  (PACOM) located at Camp\r\nSmith, Hawai'i, will enable Tsunami Sim validation and  assessment.\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-07",
    "authors": [
      "Michael J. Staver"
    ],
    "keywords": [
      "TsunamiSim",
      "Thesis-Proposal"
    ],
    "sortKey": 200107
  },
  {
    "key": "csdl2-01-08",
    "type": "techreport",
    "title": "J2EEval: A Method for Performance Analysis of Enterprise JavaBean Applications",
    "year": 2001,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-08/01-08.pdf",
    "abstract": "\r\nJ2EEval is a method for performance analysis of Enterprise JavaBean (EJB)\r\napplications.  This proposal overviews the method and its application in\r\nthe context of a case study of the Inca Course approval system.\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-08",
    "authors": [
      "Weifeng Miao"
    ],
    "keywords": [
      "Inca",
      "Thesis-Proposal"
    ],
    "sortKey": 200107
  },
  {
    "key": "csdl2-01-09",
    "type": "techreport",
    "title": "Inca Software Requirements Specification",
    "year": 2001,
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-09/01-09.html",
    "abstract": "\r\nInca is a system designed to improve the\r\nefficiency and effectiveness of course approval request processing.\r\nThis software requirements specification details: (a)  the traditional\r\nmanual process\r\nused by the ICS department for course approval request processing,\r\n(b) the 12 basic requirements Inca must satisfy, the fine-grained rules for\r\nprioritization of requests, (c) several usage scenarios, (d) n-tier architectural\r\nissues for an Enterprise JavaBeans implementation, and (e) miscellaneous\r\nrequirements including authentication, data file formats, special topics,\r\nand so forth.\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-09",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Inca"
    ],
    "sortKey": 200104
  },
  {
    "key": "csdl2-01-10",
    "type": "techreport",
    "title": "Vendor Relationship Management: Re-engineering the business\r\nprocess through B2B infrastructure to accelerate the growth of small\r\nbusinesses in geographically isolated areas",
    "year": 2001,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-10/01-10.pdf",
    "abstract": "\r\nInstead of limiting the business to the local populace, the World Wide Web\r\ngives global access to all companies that have made the transition to\r\nonline.  Ideally, the Internet seems to offer vast, untapped markets,\r\nlowers the costs of reaching these markets, and frees businesses from\r\ngeographical constraints. Applying this to Hawaii, small companies can now\r\nsell their products in the expanding global marketplace, instead of\r\nrestricting themselves to an island economy.\r\n\r\nThe goal of research on the Vendor Relationship Management (VRM) System\r\nis to explore the requirements for new business process models and\r\nassociated technological infrastructure for small local businesses in\r\nHawaii that wish to exploit the global reach of the Internet.  In order to\r\nunderstand the requirements and potential of this approach, we had meetings\r\nwith different groups of people that included the host of a virtual mall, a\r\nfinancial service provider, two courier services, and several local\r\ncompanies.\r\n\r\nThe interface of the VRM system includes both a vendor and a host\r\n side. The host side is used by the virtual mall company to send customers\r\n orders to the various vendors. It can also be used to create and edit\r\n vendor company information, create and edit vendor product information,\r\n and enter a contact email address. The vendor side is used by the numerous\r\n vendors to receive the orders, confirm that the orders have been sent,\r\n view the customer information, create and edit product information, and\r\n create and edit contact information.\r\n\r\nAfter creating the first prototype, several experts gave their critiques\r\nof the system. Based on their critiques, we came up with several possible\r\ndirections for future research.\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-01-10",
    "authors": [
      "Joy M. Agustin",
      "William M. Albritton"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 200112
  },
  {
    "key": "csdl2-01-11",
    "type": "mastersthesis",
    "title": "The design, implementation, and evaluation of INCA: an\r\nautomated system for approval code allocation",
    "year": 2002,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-11/01-11.pdf",
    "abstract": "\r\n   The ICS department of the University of Hawaii has faced problems\r\nsurrounding approval code distribution as its enrollment has increased. The\r\nmanual system for approval code allocation was time-consuming, ineffective\r\nand inefficient. INCA is designed to automate the task of approval code\r\nallocation, improve the quality of course approval decisions, and decrease\r\nthe administrative overhead involved in those decisions.\r\n\r\nBased upon informal feedback from department administrators, it appears\r\nthat INCA reduces their overhead and makes their life easier. What are the\r\nold problems that are solved by INCA? Does INCA introduce new kinds of\r\nproblems for the administrator? What about the students? Are they\r\ncompletely satisfied with the system? In what ways does the system benefit\r\nthe department as a whole?\r\n\r\nThis thesis discusses the design, implementation and evaluation of INCA. It\r\nevaluates INCA from the viewpoint of the administrator, the students, and\r\nthe department. An analysis of emails\r\nindicates that INCA reduces administrative overhead. The results of the\r\nuser survey show that three quarters of students believe INCA improved\r\ntheir course approval predictability and course requirements\r\nunderstandability. They prefer INCA to old method of requesting approval\r\ncodes by email. INCA database analysis provided course demand information\r\nand student statistics useful for departments. This evaluation of INCA from\r\nthree different perspectives provides useful insights for future\r\nimprovement of INCA and for improving the student experience with academic\r\nsystems in general.\r\n ",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Jitender Miglani"
    ],
    "keywords": [
      "Inca",
      "Thesis-MS"
    ],
    "sortKey": 200205
  },
  {
    "key": "csdl2-01-12",
    "type": "inproceedings",
    "title": "You can't even ask them to push a button:  Toward\r\nubiquitous, developer-centric, empirical software engineering",
    "year": "2001",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-12/01-12.pdf",
    "abstract": "\r\nCollection and analysis of empirical software project data is central to\r\nmodern techniques for improving software quality, programmer productivity,\r\nand the economics of software project development. Unfortunately, barriers\r\nsurrounding the cost, quality, and utility of empirical project data\r\nhamper effective collection and application in many software\r\ndevelopment organizations.\r\n\r\nThis paper describes Hackystat, an approach to enabling ubiquitous\r\ncollection and analysis of empirical software project data. The approach\r\nrests on three design criteria: data collection and analysis must be\r\ndeveloper-centric rather than management-centric; it must be in-process\r\nrather than between-process, and it must be non-disruptive---it must not\r\nrequire developers to interrupt their activities to collect and/or analyze\r\ndata.  Hackystat is being implemented via an open source, sensor and web\r\nservice based architecture.  After a developer instruments their commercial\r\ndevelopment environment tools (such as their compiler, editor, version\r\ncontrol system, and so forth) with Hackystat sensors, data is silently and\r\nunobtrusively collected and sent to a centralized web service.  The web\r\nservice runs analysis mechanisms over the data and sends email\r\nnotifications back to a developer when \\`\\`interesting'' changes in their\r\nprocess or product occur.\r\n\r\nOur research so far has yielded an initial operational release in daily use\r\nwith a small set of sensors and analysis mechanisms, and a research agenda\r\nfor expansion in the tools, the sensor data types, and the analyses. Our\r\nresearch has also identified several critical technical and social\r\nbarriers, including: the fidelity of the sensors; the coverage of the\r\nsensors; the APIs exposed by commercial tools for instrumentation; and the\r\nsecurity and privacy considerations required to avoid adoption problems due\r\nto the spectre of \\`\\`Big Brother''.\r\n\r\n",
    "booktitle": "The NSF Workshop for New Visions for Software\r\nDesign and Productivity: Research and Applications",
    "address": "Nashville, TN",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Workshop"
    ],
    "sortKey": 200112
  },
  {
    "key": "csdl2-01-13",
    "type": "techreport",
    "title": "Project Hackystat: Accelerating adoption of empirically guided software development through\r\n  non-disruptive, developer-centric, in-process data collection and analysis",
    "year": "2001",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-13/01-13.pdf",
    "abstract": "\r\nCollection and analysis of empirical software project data is central to\r\nmodern techniques for improving software quality, programmer productivity,\r\nand the economics of software project development.  Unfortunately,\r\neffective collection and analysis of software project data is rare in\r\nmainstream software development. Prior research suggests that three primary\r\nbarriers are: (1) cost: gathering empirical software engineering\r\nproject data is frequently expensive in resources and time; (2)\r\n  quality: it is often difficult to validate the accuracy of the data; and\r\n(3) utility: many metrics programs succeed in collecting data but\r\nfail to make that data useful to developers.\r\n\r\nThis report describes Hackystat, a technology initiative and research\r\nproject that explores the strengths and weaknesses of a\r\n  developer-centric, in-process, and non-disruptive approach\r\nto validation of empirical software project data collection and analysis.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL2-01-13",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200111
  },
  {
    "key": "csdl2-01-14",
    "type": "mastersthesis",
    "title": "An artificial neural network for recognition of simulated dolphin whistles",
    "year": 2001,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2001/01-14/01-14.pdf",
    "abstract": "\r\nIt is known that dolphins are capable of understanding 200 \"word\"\r\nvocabularies with sentence complexity of three or more \"words\", where\r\nwords consist of audio tones or hand gestures. An automated recognition\r\nmethod of words where a word is a defined whistle, within a\r\npredetermined acceptable degree of variance, could allow words to  be\r\nboth easily reproducible by dolphins and identifiable by humans. We\r\ninvestigate a neural network to attempt to distinguish four\r\nartificially  generated whistles from themselves and from common\r\nunderwater  environmental noises, where a whistle consists of four\r\nvariations of a  fundamental whistle style. We play these whistle\r\nvariations into the  dolphins normal tank environment and then record\r\nfrom a separate  tank hydrophone. This results in slight differences for\r\neach whistle  variation's spectrogram, the complete collection of which\r\nwe use to  form the neural network training set. For a single whistle\r\nvariation, the  neural network demonstrates strong output node values,\r\ngreater than  0.9 on a scale of 0 to 1. However, for combinations of\r\n\"words\", the network exhibits poor training\r\nperformance and an  inability to distinguish between words. To validate\r\nthis, we used a test set of 41 examples, of which only 22 were\r\ncorrectly classified. This  result suggests that an appropriately\r\ntrained backpropagation neural  network using spectrographic analysis as\r\ninputs is a viable means for a  very specific whistle recognition,\r\nhowever a large degree of whistle  variation will dramatically lower the\r\nperformance of the network, past  that required for acceptable\r\nrecognition.\r\n ",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Timothy Burgess"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 200105
  },
  {
    "key": "csdl2-02-01",
    "type": "techreport",
    "title": "Bringing the Faulkes Telescope to Classrooms in Hawaii",
    "year": 2002,
    "month": "March",
    "note": "http://koa.ifa.hawaii.edu/~giebink/thesis/proposal.htm",
    "abstract": "\r\nThe Faulkes Telescope (FT), currently under construction on the summit of\r\nHaleakala, Maui, Hawaii, will provide data from celestial observations to\r\nschools in the United Kingdom and Hawaii. This project, with its unique\r\ngoal of building a telescope to be used exclusively for educational\r\npurposes, is a joint venture between groups in the United Kingdom and\r\nHawaii. Teachers and students will be able to download data that has been\r\ncollected by the telescope on a previous occasion or sign up to have the\r\ntelescope collect data at a specific time for them. Current plans call for\r\ndata from the telescope to be delivered to classrooms in the form of raw\r\ndata files and images from processed raw data files. In addition to sharing\r\nuse of the telescope, part of the agreement between the UK and Hawaii\r\ngroups provides for the UK group to share all software developed for the\r\nproject with the Hawaii group. However, though a system for transporting\r\nimages to schools is being developed for the UK side, at present there is\r\nno corresponding system for Hawaii. Also, at this point neither the British\r\nnor Hawaii sides have a definite system for storing and transporting raw\r\ndata files.\r\n\r\nA first step, therefore, toward making the FT useful\r\nfor students and teachers in Hawaii is to develop a plan for a complete\r\nsystem to archive and transport telescope data. It is anticipated that a\r\nplan for this system will include: 1) a specification of the required\r\nhardware components, 2) a description of how data will move in and out of\r\nthe system, 3) a definition of the data pathway within the system, and 4) a\r\ndescription of the data storage requirements (i.e. database). The\r\ndevelopment of each of the components of the system will consist of a\r\ndiscussion of available options followed by a suggestion of the best choice\r\nof action. Development of this system is anticipated to be the topic for a\r\ndirected reading/research project to be undertaken during spring,\r\n2002. After the system has been clearly defined there are some additional\r\nquestions to be answered. Among the more interesting aspects is the\r\nquestion of how to present data from the telescope in the most useful and\r\neffective manner to teachers and students.\r\n ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-01",
    "authors": [
      "Bill Giebink"
    ],
    "keywords": [
      "Thesis-Proposal"
    ],
    "sortKey": 200203
  },
  {
    "key": "csdl2-02-02",
    "type": "mastersthesis",
    "title": "J2EEVAL: A method for performance analysis of Enterprise JavaBean applications",
    "year": "2002",
    "month": "August",
    "abstract": "\r\nJ2EEval is a method for performance analysis of Enterprise JavaBean (EJB)\r\napplications.  This thesis overviews the method and its application in\r\nthe context of a case study of the Inca Course approval system.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Weifeng Miao"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 200208
  },
  {
    "key": "csdl2-02-03",
    "type": "techreport",
    "title": "Improving the dependability and predictability of JPL/MDS software\r\nthrough low-overhead validation of software process and\r\nproduct metrics",
    "year": "2002",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-03/",
    "abstract": "This white paper presents information regarding a proposed collaboration between\r\nthe Collaborative Software Development Laboratory, the Mission Data Systems group at Jet Propulsion Laboratory, and the Center for Software Engineering at University of Southern California. The proposed\r\ncollaboration would be funded through grants from the NSF/NASA Highly Dependable Computing and Communication Systems Research (HDCCSR) program.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-03",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200205
  },
  {
    "key": "csdl2-02-04",
    "type": "techreport",
    "title": "Virtual Mall Management Software",
    "year": "2002",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-04/02-04.pdf",
    "abstract": "Presents a business plan for commercialization of the Vendor Relationship Management (VRM) system.",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-04",
    "authors": [
      "Joy M. Agustin",
      "William M. Albritton",
      "Nolan Y. Kiddo"
    ],
    "keywords": [
      "VRM"
    ],
    "sortKey": 200205
  },
  {
    "key": "csdl2-02-05",
    "type": "techreport",
    "title": "Supporting development of highly dependable software through\r\n  continous, automated, in-process, and individualized software measurement validation",
    "year": "2002",
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-05/02-05.pdf",
    "abstract": "Highly dependable software is, by nature, predictable.  For example, one\r\ncan predict with confidence the circumstances under which the software will\r\nwork and the circumstances under which it will fail.  Empirically-based\r\napproaches to creating predictable software are based on two assumptions:\r\n(1) historical data can be used to develop and calibrate models that\r\ngenerate empirical predictions, and (2) there exists relationships between\r\ninternal attributes of the software (i.e.  immediately measurable\r\nprocess and product attributes such as size, effort, defects, complexity,\r\nand so forth) and external attributes of the software (i.e. abstract\r\nand/or non-immediately measurable attributes, such as \\`quality', the time\r\nand circumstances of a specific component's failure in the field, and so\r\nforth).  Software measurement validation is the process of\r\ndetermining a predictive relationship between available internal attributes\r\nand correspondingly useful external attributes and the conditions under\r\nwhich this relationship holds.\r\n<p>\r\nThis report proposes research whose general objective is to design, implement, and\r\nvalidate software measures within a development infrastructure that\r\nsupports the development of highly dependable software systems. The\r\nmeasures and infrastructure are designed to support dependable software\r\ndevelopment in two ways: (1) They will support identification of modules at\r\nrisk for being fault-prone, enabling more efficient and effective\r\nallocation of quality assurance resources, and (2) They will support\r\nincremental software development through continuous monitoring,\r\nnotifications, and analyses.  Empirical assessment of these methods and\r\nmeasures during use on the Mission Data System project at Jet Propulsion\r\nLaboratory will advance the theory and practice of dependable computing and\r\nsoftware measurement validation and provide new insight into the\r\ntechnological and methodological problems associated with the current state\r\nof the art.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-05",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200207
  },
  {
    "key": "csdl2-02-07",
    "type": "inproceedings",
    "title": "Beyond the Personal Software Process: Metrics collection and analysis for the differently disciplined",
    "year": "2003",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-07/02-07.pdf",
    "abstract": "\r\n  Pedagogies such as the Personal Software Process (PSP)\r\n  shift metrics definition, collection, and analysis from\r\n  the organizational level to the individual level.  While\r\n  case study research indicates that the PSP can provide\r\n  software engineering students with empirical support for\r\n  improving estimation and quality assurance, there is\r\n  little evidence that many students continue to use the PSP\r\n  when no longer required to do so.  Our research suggests\r\n  that this \\`\\`PSP adoption problem'' may be due to two\r\n  problems: the high overhead of PSP-style metrics\r\n  collection and analysis, and the requirement that PSP\r\n  users \\`\\`context switch'' between product development and\r\n  process recording.  This paper overviews our initial PSP\r\n  experiences, our first attempt to solve the PSP adoption\r\n  problem with the LEAP system, and our current approach\r\n  called Hackystat.  This approach fully automates both data\r\n  collection and analysis, which eliminates overhead and\r\n  context switching. However, Hackystat changes the kind of\r\n  metrics data that is collected, and introduces new\r\n  privacy-related adoption issues of its own.\r\n",
    "booktitle": "Proceedings of the 2003 International Conference on Software Engineering",
    "address": "Portland, Oregon",
    "authors": [
      "Philip M. Johnson",
      "Hongbing Kou",
      "Joy M. Agustin",
      "Christopher Chan",
      "Carleton A. Moore",
      "Jitender Miglani",
      "Shenyan Zhen",
      "William E. Doane"
    ],
    "keywords": [
      "PSP",
      "Leap",
      "Hackystat",
      "Pubs-Conference"
    ],
    "sortKey": 200305
  },
  {
    "key": "csdl2-02-08",
    "type": "techreport",
    "title": "JBlanket: Support for Extreme Coverage in Java Unit Testing",
    "year": "2002",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-08/02-08.pdf",
    "abstract": "Unit testing is a tool commonly used to ensure reliability in software\r\ndevelopment and can be applied to the software development process as soon\r\nas core functionality of a program is implemented. In conventional unit\r\ntesting, to properly design unit tests programmers will need to have access\r\nto specifications and source code. However, this is not possible in Extreme\r\nProgramming (XP), where tests are created before any feature of a system is\r\never implemented. Obviously, XP's approach does not lead to improper\r\ntesting, but instead leads to a different approach for testing.  JBlanket\r\nis a tool developed in the Collaborative Software Development Laboratory\r\n(CSDL) at the University of Hawai'i (UH) that is meant to assist these\r\ntypes of \"unconventional\" testing that calculates method-level coverage in\r\nJava programs, a coarse enough granularity of test case coverage whereby\r\nprogrammers will not only be able to ensure that all of their unit tests\r\npass, but will also be able to test all of their currently implemented\r\nmethods. Unit testing where 100 percent of all unit tests must pass that also\r\nexercises 100 percent of all non-trivial remaining implemented methods is called\r\nExtreme Coverage. This research will attempt to show that Extreme Coverage\r\nis useful in developing quality software.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-08",
    "authors": [
      "Joy M. Agustin"
    ],
    "keywords": [
      "JBlanket"
    ],
    "sortKey": 200212
  },
  {
    "key": "csdl2-02-09",
    "type": "techreport",
    "title": "Most active file measurement in Hackystat",
    "year": "2002",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-09/02-09.pdf",
    "abstract": "Hackystat, an automated metric collection and analysis tool, adopts the\r\n\"Most Active File\" measurement in five-minute time chunks to represent the\r\ndevelopers' effort. This measurement is validated internally in this\r\nreport. The results show that big time chunk sizes are highly linear\r\nregressive with the standard time chunk size (1 minute). The percentage of\r\nmissed effort to total effort is very low with five minutes chunk size. And\r\nthe relative ranking with respect to the effort of the active files is only\r\nslightly changed.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-09",
    "authors": [
      "Hongbing Kou",
      "Xiangli Xu"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200212
  },
  {
    "key": "csdl2-02-10",
    "type": "techreport",
    "title": "Comparing personal project metrics to support process and product improvement",
    "year": "2002",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-10/02-10.pdf",
    "abstract": "\r\nWriting high quality software with a minimum of effort is an important\r\nthing to learn. Various personal metric collection processes exist, such as\r\nPSP and Hackystat. However, using the personal metric collection processes\r\ngives only a partial indication of how a programmer stands amongst his\r\npeers.  Personal metrics vary greatly amongst programmers and it is not\r\nalways clear what is the \"correct\" way to develop software.  This paper\r\ncompares personal programming characteristics of students in a class\r\nenvironment. Metrics, such as CK Metrics, have been analyzed and compared\r\nagainst a set of similar students in an attempt to find the correct or\r\naccepted value for these metrics.  It is our belief that programmers can\r\ngain much, if not, more information from comparing their personal metrics\r\nagainst other programmers. Preliminary results show that people with more\r\nexperience in programming produce different metrics than those with less.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-10",
    "authors": [
      "Christoph Aschwanden",
      "Aaron Kagawa"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200212
  },
  {
    "key": "csdl2-02-11",
    "type": "techreport",
    "title": "Configuration Management and Hackystat: Initial steps to relating\r\norganizational and individual development",
    "year": "2002",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-11/02-11.pdf",
    "abstract": "\r\nHackystat is a software development metrics collection tool that focuses on\r\nindividual developers.  Hackystat is able to provide a developer with a\r\npersonal analysis of his or her unique processes.  Source code\r\nconfiguration management (SCM) systems, on the other hand, are a means of\r\nstorage for source code in a development community and serve as controller\r\nfor what each individual may contribute to the community.  We created a\r\nHackystat sensor for CVS (an SCM system) in the hopes of bridging the gap\r\nbetween these two very different, yet related software applications.  It\r\nwas our hope to use the data we collected to address the issue of\r\ndevelopment conflicts that often arise in organizational development\r\nenvironments.  We found, however, that neither application, Hackystat or\r\nCVS, could be easily reconfigured to our needs.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-02-11",
    "authors": [
      "Cliff Tomosada",
      "Burt Leung"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200212
  },
  {
    "key": "csdl2-02-06",
    "type": "mastersthesis",
    "title": "Improving software quality through extreme coverage with JBlanket",
    "year": 2003,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2002/02-06/02-06.pdf",
    "abstract": "\r\nUnit testing is an important part of software testing that aids in the\r\ndiscovery of bugs sooner in the software development process.  Extreme\r\nProgramming (XP), and its Test First Design technique, relies so heavily upon\r\nunit tests that the first code implemented is made up entirely of\r\ntest cases.  Furthermore, XP considers a feature to be completely coded\r\nonly when all of its test cases pass.  However, passing all test cases does\r\nnot necessarily mean the test cases are good.\r\n<p>\r\nExtreme Coverage (XC) is a new approach that helps to assess and improve the\r\nquality of software by enhancing unit testing.  It extends the XP requirement\r\nthat all test cases must pass with the requirement that all defect-prone\r\ntestable methods must be invoked by the tests.  Furthermore, a set of flexible\r\nrules are applied to XC to make it as attractive and light-weight as unit\r\ntesting is in XP.  One example rule is to exclude all methods containing one\r\nline of code from analysis.  I designed and implemented a new tool, called\r\nJBlanket, that automates the XC measurement process similar to the way that\r\nJUnit automates unit testing.  JBlanket produces HTML reports similar to JUnit\r\nreports which inform the user about which methods need to be tested next.\r\n<p>\r\nIn this research, I explore the feasibility of JBlanket, the amount of effort\r\nneeded to reach and maintain XC, and the impact that knowledge of XC has on\r\nsystem implementation through deployment and evaluation in an academic\r\nenvironment.  Results show that most students find JBlanket to be a useful tool\r\nin developing their test cases, and that knowledge of XC did influence the\r\nmanner in which students implemented their systems. However,  more studies are\r\nneeded to conclude precisely how much effort is needed to reach and maintain\r\nXC.\r\n<p>\r\nThis research lays the foundation for future research directions.  One\r\ndirection involves increasing its flexibility and value by expanding and\r\nrefining the rules of XC.  Another direction involves tracking XC behavior to\r\nfind out when it is and is not applicable.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Joy M. Agustin"
    ],
    "keywords": [
      "Thesis-MS",
      "JBlanket"
    ],
    "sortKey": 200305
  },
  {
    "key": "csdl2-03-01",
    "type": "inproceedings",
    "title": "Keeping the coverage green: Investigating the cost and quality of testing in agile development",
    "year": "2004",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-01/03-01.pdf",
    "abstract": "\r\n  An essential component of agile methods such as Extreme Programming is a\r\n  suite of test cases that is incrementally built and maintained throughout\r\n  development.  This paper presents research exploring two questions\r\n  regarding testing in these agile contexts. First, is there a way to\r\n  validate the quality of test case suites in a manner compatible with\r\n  agile development methods?  Second, is there a way to assess and monitor\r\n  the costs of agile test case development and maintenance?  In this paper,\r\n  we present the results of our recent research on these issues. Our\r\n  results include a measure called XC (for Extreme Coverage) which is\r\n  implemented in a system called JBlanket. XC is designed to support\r\n  validation of the test-driven design methodology used in agile\r\n  development. We describe how XC and JBlanket differ from other coverage\r\n  measures and tools, assess their feasibility through a case study in a\r\n  classroom setting, assess its external validity on a set of open source\r\n  systems, and illustrate how to incorporate XC into a more global measure\r\n  of testing cost and quality called Unit Test Dynamics (UTD). We conclude\r\n  with suggested research directions building upon these findings to\r\n  improve agile methods and tools.\r\n",
    "booktitle": "Submitted to the 2004 Conference on Software Metrics",
    "address": "Chicago, Illinois",
    "authors": [
      "Philip M. Johnson",
      "Joy M. Agustin"
    ],
    "keywords": [
      "Hackystat",
      "JBlanket",
      "Pubs-Conference"
    ],
    "sortKey": 200408
  },
  {
    "key": "csdl2-03-03",
    "type": "techreport",
    "title": "The design, implementation, and evaluation of CLEW: An improved Collegiate Department Website",
    "year": 2003,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-03/03-03.pdf",
    "abstract": "\r\nThe purpose of a collegiate department website is to provide prospective\r\nstudents, current students, faculty, staff, and other academic and industry\r\nprofessionals with information concerning the department.  The information\r\npresented on the website should give the user an accurate model of the\r\ndepartment, even as it changes overtime.  Some of these changes include:\r\nadding new faculty members, new students, new courses, etc.  The more\r\naccurately the website models the department, the more aware the website's\r\nusers will be of the department.\r\n\r\nTraditional collegiate department websites have two primary problems in\r\ncreating an accurate model of their department.  First, only a few people,\r\nusually the department webmasters, can add information to the website.\r\nSecond, it is difficult to enable website users to be informed of changes\r\nto the website that might be of interest to them.  These two problems\r\ndecrease the accuracy of the model and hamper its effectiveness in alerting\r\nusers of changes to the website.  As a result, user awareness of the\r\ndepartment is also decreased.\r\n\r\nThe Collaborative Educational Website (CLEW) is a Java web application\r\nintended to support accurate modeling of a collegiate department.  CLEW is\r\ndesigned to solve the traditional collegiate department website's two main\r\nproblems.  First, it provides interactive services which will allow users\r\nto add various kinds of information to the website.  Secondly, CLEW\r\naddresses the notification problem by providing tailored email\r\nnotifications of changes to the website.\r\n\r\nCLEW was developed by a Software Engineering class in the Information and\r\nComputer Science Department at the University of Hawaii at Manoa.\r\nMy role in this development as project leader is to design and\r\nimplement the framework for the system.  CLEW currently contains\r\napproximately 28,000 lines of Java code and it contains upwards of\r\n500 web pages.  In the Spring 2003 semester, CLEW replaced the\r\nexisting Information and Computer Science Department website.  I\r\nevaluated CLEW to measure its effectiveness as a model of the\r\ndepartment using a pre and post release questionnaire.  I also\r\nevaluated usage data of the CLEW System to assess the functionality\r\nprovided by CLEW.\r\n\r\nIf CLEW provides a more accurate model of a collegiate department,\r\nthen the next step is to provide the CLEW framework to other\r\ncollegiate departments worldwide.  It is my hope that the users' of\r\nCLEW will get a clue about their department!\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-03",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Thesis-BS",
      "Clew"
    ],
    "sortKey": 200305
  },
  {
    "key": "csdl2-03-06",
    "type": "techreport",
    "title": "Hackystat Metric Collection and Analysis for the MDS Harvest CM System: A Design Specification",
    "year": 2003,
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-06/03-06.html",
    "abstract": "\r\nThis proposal describes the requirements and top-level design for a Hackystat-based system that automatically monitors and analyzes the MDS development process using data collected from the Harvest CM system.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-06",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200308
  },
  {
    "key": "csdl2-03-07",
    "type": "techreport",
    "title": "The Hackystat-JPL Configuration: Overview and Initial Results",
    "year": 2003,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-07/03-07.html",
    "abstract": "\r\nThis report presents selected initial results from Hackystat-based\r\ndescriptive analyses\r\nof Harvest workflow data gathered from the Mission Data System software\r\ndevelopment project from January, 2003 to August, 2003.  We present the\r\nmotivation for this work, the methods used, examples of the analyses, and\r\nquestions raised by the results. Our major findings include: (a) workflow\r\ntransitions not documented in the \"official\" process; (b) significant\r\nnumbers of packages with unexpected transition\r\nsequences; (c) cyclical levels of development \"intensity\" as\r\nrepresented by levels of promotion/demotion; (d) a possible approach to\r\ncalculating the proportion of \"new\" scheduled work versus rework/unscheduled work\r\nalong with baseline values; and\r\n(e) a possible approach to calculating the distribution of package \"ages\" and days spent in the\r\nvarious workflow states, along with potential issues with the representation of\r\n\"package age\" based upon the current approach to package\r\npromotion.\r\n\r\nThe report illustrates how our current approach to analysis can yield\r\ndescriptive perspectives on the MDS development process. It provides a first\r\nstep toward more prescriptive, analytic models of the MDS software development\r\nprocess by providing insights into the potential uses and limitations of MDS\r\nproduct and process data.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-07",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200310
  },
  {
    "key": "csdl2-03-09",
    "type": "techreport",
    "title": "The Review Game: Teaching Asynchronous Distributed Software Review Using Eclipse",
    "year": 2003,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-09/03-09.html",
    "abstract": "\r\nPresents an approach to teaching software review involving an Eclipse plug-in called Jupiter and automated metrics collection and analysis using Hackystat.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-09",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200311
  },
  {
    "key": "csdl2-03-11",
    "type": "techreport",
    "title": "Jupiter Users Guide",
    "year": 2003,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-11/03-11.html",
    "abstract": "\r\nProvides a users guide for the Jupiter code review plug-in for Eclipse.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-11",
    "authors": [
      "Takuya Yamashita"
    ],
    "keywords": [
      "Jupiter"
    ],
    "sortKey": 200312
  },
  {
    "key": "csdl2-03-12",
    "type": "inproceedings",
    "title": "Practical automated process and product metric collection and analysis in a\r\nclassroom setting: Lessons learned from Hackystat-UH",
    "year": "2004",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-12/03-12.pdf",
    "abstract": "\r\n  Measurement definition, collection, and analysis is an essential\r\n  component of high quality software engineering practice, and is thus an\r\n  essential component of the software engineering curriculum.  However,\r\n  providing students with practical experience with measurement in a\r\n  classroom setting can be so time-consuming and intrusive that it's\r\n  counter-productive---teaching students that software measurement is\r\n  \\`\\`impractical'' for many software development contexts.  In this\r\n  research, we designed and evaluated a very low-overhead approach to\r\n  measurement collection and analysis using the Hackystat system with\r\n  special features for classroom use. We deployed this system in two\r\n  software engineering classes at the University of Hawaii during Fall,\r\n  2003, and collected quantitative and qualitative data to evaluate the\r\n  effectiveness of the approach.  Results indicate that the approach\r\n  represents substantial progress toward practical, automated metrics\r\n  collection and analysis, though issues relating to the complexity of\r\n  installation and privacy of user data remain.\r\n",
    "booktitle": "Proceedings of the 2004 International Symposium on Empirical Software Engineering",
    "address": "Los Angeles, California",
    "authors": [
      "Philip M. Johnson",
      "Hongbing Kou",
      "Joy M. Agustin",
      "Qin Zhang",
      "Aaron Kagawa",
      "Takuya Yamashita"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Conference"
    ],
    "sortKey": 200408
  },
  {
    "key": "csdl2-03-13",
    "type": "techreport",
    "title": "Results from the 2003 Classroom Evaluation of Hackystat-UH",
    "year": 2003,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2003/03-13/03-13.html",
    "abstract": "\r\nThis report presents the results from a qualitative evaluation of ICS 413\r\nand ICS 613 students at the end of Fall, 2003.  The students had used\r\nHackystat-UH for approximately six weeks at the time of the evaluation.  The survey requests their\r\nfeedback regarding the installation, configuration, overhead of use,\r\nusability, utility, and future use of the Hackystat-UH\r\nconfiguration. Results provide evidence that: (1) Significant problems\r\noccur during installation and configuration of the system; (2) the\r\nHackystat-UH configuration incurs very low overhead after completing\r\ninstallation and configuration; (3) Analyses were generally found to be\r\nsomewhat useful and usable; and (4) feasibility in a professional\r\ndevelopment context requires addressing privacy and platform issues.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-13",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200312
  },
  {
    "key": "csdl2-04-02",
    "type": "techreport",
    "title": "The Hackystat-JPL Configuration: Round 2 Results",
    "year": 2004,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-02/04-02.html",
    "abstract": "\r\nThis report presents selected round two results from Hackystat-based\r\ndescriptive analyses of Harvest workflow data gathered from the Mission\r\nData System software development project from January, 2003 to December,\r\n2003. The information provided in this report describes improvements and\r\ndifferences made since the time of writing of the previous techreport (The Hackystat-JPL\r\nConfiguration: Overview and Initial Results.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-03-07",
    "authors": [
      "Aaron Kagawa",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200405
  },
  {
    "key": "csdl2-04-03",
    "type": "inproceedings",
    "title": "Toward Accurate HPC Productivity Measurement",
    "year": "2004",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-03/04-03.pdf",
    "abstract": "\r\nOne key to improving high-performance computing\r\n(HPC) productivity is finding better ways to measure it.\r\nWe define productivity in terms of mission goals, i.e.,\r\ngreater productivity means that more science is\r\naccomplished with less cost and effort. Traditional\r\nsoftware productivity metrics and computing benchmarks\r\nhave proven inadequate for assessing or predicting such\r\nend-to-end productivity. In this paper we describe a new\r\napproach to measuring productivity in HPC applications\r\nthat addresses both development time and execution time.\r\nOur goal is to develop a public repository of effective\r\nproductivity benchmarks that anyone in the HPC\r\ncommunity can apply to assess or predict productivity.\r\n",
    "booktitle": "Proceedings of the First International Workshop on Software Engineering\r\nfor High Performance Computing System Applications",
    "address": "Edinburgh, Scotland ",
    "authors": [
      "Stuart Faulk",
      "John Gustafson",
      "Philip M. Johnson",
      "Adam A. Porter",
      "Walter Tichy",
      "Larry Votta"
    ],
    "keywords": [
      "HPC",
      "Pubs-Workshop"
    ],
    "sortKey": 200405
  },
  {
    "key": "csdl2-04-04",
    "type": "article",
    "title": "Measuring HPC Productivity",
    "year": "2004",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-04/04-04.pdf",
    "abstract": "\r\nOne key to improving high-performance computing (HPC) productivity is\r\nfinding better ways to measure it. We define productivity in terms of\r\nmission goals, i.e., greater productivity means that more science is\r\naccomplished with less cost and effort. Traditional software productivity\r\nmetrics and computing benchmarks have proven inadequate for assessing or\r\npredicting such end-to-end productivity. In this paper we introduce a new\r\napproach to measuring productivity in HPC applications that addresses both\r\ndevelopment time and execution time. Our goal is to develop a public\r\nrepository of effective productivity benchmarks that anyone in the HPC\r\ncommunity can apply to assess or predict productivity.\r\n",
    "journal": "International Journal of High Performance Computing Applications",
    "authors": [
      "Stuart Faulk",
      "Philip M. Johnson",
      "John Gustafson",
      "Adam A. Porter",
      "Walter Tichy",
      "Larry Votta"
    ],
    "keywords": [
      "HPC",
      "Pubs-Journal"
    ],
    "sortKey": 200412
  },
  {
    "key": "csdl2-04-05",
    "type": "techreport",
    "title": "Proceedings of the First Hackystat Developer Boot Camp",
    "year": "2004",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-05/04-05.pdf",
    "summary": "\r\nThis proceedings contains the slides to a series of seventeen talks on the architecture,\r\ndesign, applications, and research directions of Hackystat presented\r\nduring the week of May 10-14, 2004.   It also\r\nincludes a \"Hackystat Hacker Certification Exam\", which describes 18 exercises designed\r\nto provide an incremental introduction to Hackystat internals.",
    "institution": "University of Hawaii",
    "number": "CSDL2-04-05",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200405
  },
  {
    "key": "csdl2-04-06",
    "type": "techreport",
    "title": "Hackystat MDS supporting MSL MMR",
    "year": 2004,
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-06/04-06.html",
    "abstract": "\r\nThis report presents selected results from Hackystat Analyses on\r\nMission Data System's Release 9. The goal is to identify reports of use\r\nto the Monthly Management Report for Mars Science Laboratory.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-06",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200406
  },
  {
    "key": "csdl2-04-07",
    "type": "techreport",
    "title": "Hackystat MDS supporting MSL MMR: Round 2 Results",
    "year": 2004,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-07/04-07.html",
    "abstract": "\r\nThis report presents selected additional results from Hackystat Analyses on\r\nMission Data System's Release 9. The goal is to identify reports of use\r\nto the Monthly Management Report for Mars Science Laboratory.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-07",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200407
  },
  {
    "key": "csdl2-04-09",
    "type": "techreport",
    "title": "Hackystat-SQI: Modeling different development processes",
    "year": 2004,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-09/04-09.html",
    "abstract": "\r\nThis report presents the design of a Hackystat module called SQI, whose purpose\r\nis to support quality analysis for multiple projects at Jet Propulsion Laboratory.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-09",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200407
  },
  {
    "key": "csdl2-04-10",
    "type": "techreport",
    "title": "Hackystat-SQI: First Progress Report",
    "year": 2004,
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-09/04-09.html",
    "abstract": "\r\nThis report presents the initial analysis that are available for Hackystat-SQI and future directions.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-10",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200407
  },
  {
    "key": "csdl2-04-11",
    "type": "article",
    "title": "Improving Software Development Management through Software Project Telemetry",
    "year": "2005",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-11/04-11.pdf",
    "abstract": "\r\nSoftware project telemetry is a new approach to software project\r\nmanagement in which sensors are attached to development environment tools\r\nto unobtrusively monitor the process and products of development. This\r\nsensor data is abstracted into high-level perspectives on development\r\ntrends called Telemetry Reports, which provide project members with\r\ninsights useful for local, in-process decision making.  This paper presents\r\nthe essential characteristics of software project telemetry, contrasts it\r\nto other approaches such as predictive models based upon historical\r\nsoftware project data, describes a reference framework implementation of\r\nsoftware project telemetry called Hackystat, and presents our lessons\r\nlearned so far.\r\n",
    "journal": "IEEE Software",
    "authors": [
      "Philip M. Johnson",
      "Hongbing Kou",
      "Michael G. Paulding",
      "Qin Zhang",
      "Aaron Kagawa",
      "Takuya Yamashita"
    ],
    "keywords": [
      "Hackystat",
      "Telemetry",
      "Pubs-Journal"
    ],
    "sortKey": 200508
  },
  {
    "key": "csdl2-04-13",
    "type": "techreport",
    "title": "Measuring the Processes and Products of HPCS Development: Initial Results\r\nfor the Optimal Truss Purpose-Based Benchmark",
    "year": "2004",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-13/04-13.html",
    "abstract": "\r\nThis report presents initial results from the in-progress implementation of the\r\nOptimal Truss Purpose-based benchmark. It shows process and product data collected both\r\nautomatically by Hackystat and manually by engineering logs and other tools. It\r\npresents some interpretations of the data and proposes approaches to improving\r\nsupport for understanding how to improve HPCS development productivity.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-13",
    "authors": [
      "Michael G. Paulding"
    ],
    "keywords": [
      "Hackystat",
      "HPC"
    ],
    "sortKey": 200409
  },
  {
    "key": "csdl2-04-16",
    "type": "techreport",
    "title": "Improving Software Development Management with Software Project Telemetry",
    "year": 2005,
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-16/04-16.pdf",
    "abstract": "\r\nSoftware development is slow, expensive and error prone, often resulting in\r\nproducts with a large number of defects which cause serious problems in\r\nusability, reliability and performance. To combat this problem, software\r\nmeasurement provides a systematic and empirically-guided approach to\r\ncontrol and improve development processes and final products. Experience\r\nhas shown excellent results so long as measurement programs are\r\nconscientiously implemented and followed. However, due to the high cost\r\nassociated with metrics collection and difficulties in metrics\r\ndecision-making, many organizations fail to benefit from measurement\r\nprograms.\r\n\r\nIn this dissertation, I propose a new measurement approach --\r\nsoftware project telemetry. It addresses the \"metrics collection\r\ncost problem\" through highly automated measurement machinery -- sensors\r\nare used to collect metrics automatically and unobtrusively. It addresses\r\nthe \"metrics decision-making problem\" through intuitive high-level visual\r\nperspectives on software development that support in-process,\r\nempirically-guided project management and process improvement. Unlike\r\ntraditional metrics approaches which are primarily based on historical\r\nproject databases and focused on model-based project comparison, software\r\nproject telemetry emphasizes project dynamics and in-process control. It\r\ncombines both the precision of traditional project management techniques\r\nand the flexibility promoted by agile community.\r\n\r\nThe main claim of this dissertation is that software project telemetry\r\nprovides an effective approach to (1) automated metrics collection, and (2)\r\nin-process, empirically-guided software development process problem\r\ndetection and analysis. Three case studies will be\r\nconducted to evaluate the claim in different software development\r\nenvironments:\r\n\r\n(1) A pilot case study with student users in software engineering classes to\r\n(a) test drive the software project telemetry system in preparation for the\r\nnext two full-scale case studies, and (b) gather the students' opinions\r\nwhen the adoption of the technology is mandated by their instructor.\r\n\r\n(2) A case study in CSDL to (a) use software project telemetry to\r\ninvestigate and improve its build process, and (b) evaluate the technology\r\nat the same time in CSDL (an environment typical of traditional software\r\ndevelopment with close collaboration and centralized decision-making).\r\n\r\n(3) A case study at Ikayzo with open-source project developers\r\n(geologically-dispersed volunteer work and decentralized decision-making)\r\nto gather their opinions about software project telemetry.\r\n\r\nThe time frame of this research is as follows. The implementation of the\r\nsoftware project telemetry system is complete and deployed. I have finished\r\nthe first pilot case study. I will start both the second and third case\r\nstudies from October 2005, and they will last 4 - 6 months. I wish to\r\ndefend my research in May or August 2006 if everything goes according to\r\nplan.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-04-16",
    "authors": [
      "Qin Zhang"
    ],
    "keywords": [
      "Thesis-Proposal",
      "Hackystat",
      "Telemetry"
    ],
    "sortKey": 200510
  },
  {
    "key": "csdl2-04-22",
    "type": "inproceedings",
    "title": "Understanding HPCS development through automated process and product measurement with Hackystat",
    "year": "2005",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2004/04-22/04-22.pdf",
    "abstract": "\r\nThe high performance computing (HPC) community is increasingly\r\naware that traditional low-level, execution-time measures for assessing\r\nhigh-end computers, such as flops/second, are not adequate for\r\nunderstanding the actual productivity of such systems. In response,\r\nresearchers and practitioners are exploring new measures and assessment\r\nprocedures that take a more wholistic approach to high performance\r\nproductivity. In this paper, we present an approach to understanding and\r\nassessing development-time aspects of HPC productivity. It involves the use\r\nof Hackystat for automatic, non-intrusive collection and analysis of six\r\nmeasures: Active Time, Most Active File,\r\nCommand Line Invocations, Parallel and Serial Lines of Code, Milestone\r\nTest Success, and Performance. We illustrate the use and interpretation of\r\nthese measures through a case study of small-scale HPC software development.\r\nOur results show that these measures provide useful insight into development-time\r\nproductivity issues, and suggest promising additions to and enhancements of the\r\nexisting measures.\r\n",
    "booktitle": "Second Workshop on Productivity and Performance in High-End Computing (P-PHEC)",
    "authors": [
      "Philip M. Johnson",
      "Michael G. Paulding"
    ],
    "keywords": [
      "HPC",
      "Hackystat",
      "Pubs-Workshop"
    ],
    "sortKey": 200502
  },
  {
    "key": "csdl2-05-01",
    "type": "mastersthesis",
    "title": "Priority Ranked Inspection: Supporting Effective\r\nInspection in Resource-limited Organizations",
    "year": 2005,
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-01/05-01.pdf",
    "abstract": "\r\nImagine that your project manager has budgeted 200 person-hours for the\r\nnext month to inspect newly created source code. Unfortunately, in order to\r\ninspect all of the documents adequately, you estimate that it will take 400\r\nperson-hours. However, your manager refuses to increase the budgeted\r\nresources for the inspections. How do you decide which documents to inspect\r\nand which documents to skip? Unfortunately, the classic definition of\r\ninspection does not provide any advice on how to handle this situation. For\r\nexample, the notion of entry criteria used in Software Inspection\r\ndetermines when documents are ready for inspection rather\r\nthan if it is needed at all.\r\n\r\nMy research has investigated how to prioritize inspection resources and\r\napply them to areas of the system that need them more. It is commonly\r\nassumed that defects are not uniformly distributed across all documents in\r\na system, a relatively small subset of a system accounts for a relatively\r\nlarge proportion of defects. If inspection resources are\r\nlimited, then it will be more effective to identify and inspect the\r\ndefect-prone areas.\r\n\r\nTo accomplish this research, I have created an inspection process called\r\nPriority Ranked Inspection (PRI). PRI uses software product and development\r\nprocess measures to distinguish documents that are \\`\\`more in need of\r\ninspection'' (MINI) from those \\`\\`less in need of inspection'' (LINI). Some\r\nof the product and process measures include: user-reported defects, unit\r\ntest coverage, active time, and number of changes. I hypothesize that the\r\ninspection of MINI documents will generate more defects with a higher\r\nseverity than inspecting LINI documents.\r\n\r\nMy research employed a very simple exploratory study, which includes\r\ninspecting MINI and LINI software code and checking to see if MINI code\r\ninspections generate more defects than LINI code inspections. The results\r\nof the study provide supporting evidence that MINI documents do contain\r\nmore high-severity defects than LINI documents. In addition, there is some\r\nevidence that PRI can provide developers with more information to help\r\ndetermine what documents they should select for inspection.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Aaron Kagawa"
    ],
    "keywords": [
      "Thesis-MS",
      "Hackystat",
      "PRI"
    ],
    "sortKey": 200508
  },
  {
    "key": "csdl2-05-02",
    "type": "techreport",
    "title": "Cedar -- Cyberinfrastructure for Empirical Data Analysis and Reuse",
    "year": "2005",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-02/05-02.pdf",
    "abstract": "\r\nThis document presents the project description for a proposal to the National Science Foundation\r\nprogram on Next Generation Cybertools.  It discusses an approach to integrating qualitative\r\nand quantitative empirical data, approaches to privacy policies, and data management issues\r\nto support collection, analysis, and dissemination of this data.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-05-02",
    "authors": [
      "Philip M. Johnson",
      "Brian T. Pentland",
      "Victor R. Basili",
      "Martha S. Feldman"
    ],
    "keywords": [
      "Hackystat",
      "HPC"
    ],
    "sortKey": 200505
  },
  {
    "key": "csdl2-05-03",
    "type": "techreport",
    "title": "Studying Micro-Processes in Software Development Stream",
    "year": "2005",
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-03/05-03.pdf",
    "abstract": "\r\n  In this paper we propose a new streaming technique to study software\r\n  development. As we observed software development consists of a series of\r\n  activities such as edit, compilation, testing, debug and deployment etc.\r\n  All these activities contribute to development stream, which is a\r\n  collection of software development activities in time order. Development\r\n  stream can help us replay and reveal software development process at a\r\n  later time without too much hassle. We developed a system called Zorro to\r\n  generate and analyze development stream at Collaborative Software\r\n  Development Laboratory in University of Hawaii. It is built on the top of\r\n  Hackystat, an in-process automatic metric collection\r\n  system developed in the CSDL.  Hackystat sensors continuously collect\r\n  development activities and send them to a centralized data store for\r\n  processing. Zorro reads in all data of a project and constructs stream\r\n  from them. Tokenizers are chained together to divide development stream\r\n  into episodes (micro iteration) for classification with rule engine. In\r\n  this paper we demonstrate the analysis on Test-Driven Development (TDD)\r\n  with this framework.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-05-03",
    "authors": [
      "Hongbing Kou"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200507
  },
  {
    "key": "csdl2-05-05",
    "type": "techreport",
    "title": "A continuous, evidence-based approach to discovery and assessment of software engineering best practices",
    "year": "2005",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-05/05-05.pdf",
    "abstract": "\r\nThis document presents the project description for a proposal to the National Science Foundation.\r\nIt discusses an approach that integrates Hackystat, Software Project Telemetry, Software\r\nDevelopment Stream Analysis, Pattern Discovery, and Evidence-based software engineering to\r\nsupport evaluation of best practices.  Both classroom and industrial case studies are proposed\r\nto support evaluation of the techniques.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-05-05",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Telemetry"
    ],
    "sortKey": 200506
  },
  {
    "key": "csdl2-05-06",
    "type": "techreport",
    "title": "Readings in Empirical Evaluation for Budding Software Engineering Researchers",
    "year": "2005",
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-06/05-06.html",
    "abstract": "\r\nProvides links to resources for empirical software engineering evaluation.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-05-06",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      ""
    ],
    "sortKey": 200507
  },
  {
    "key": "csdl2-05-07",
    "type": "techreport",
    "title": "Telemetry Plate Lunch Contest Results",
    "year": "2005",
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-07/05-07.html",
    "abstract": "\r\nThe \"Telemetry Plate Lunch Contest\" was a contest to support investigation of the use\r\nof multi-axis telemetry charts in Hackystat. This document describes the winning submissions.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-05-07",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Telemetry"
    ],
    "sortKey": 200507
  },
  {
    "key": "csdl2-05-09",
    "type": "mastersthesis",
    "title": "Continuous GQM: An automated framework for the Goal-Question-Metric paradigm",
    "year": 2005,
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2005/05-09/05-09.pdf",
    "abstract": "\r\nMeasurement is an important aspect of Software Engineering as it is the\r\nfoundation of predictable and controllable software project\r\nexecution. Measurement is essential for assessing actual project progress,\r\nestablishing baselines and validating the effects of improvement or\r\ncontrolling actions.\r\n\r\nThe work performed in this thesis is based on Hackystat, a fully automated\r\nmeasurement framework for software engineering processes and\r\nproducts. Hackystat is designed to unobtrusively measure a wide range of\r\nmetrics relevant to software development and collect them in a centralized\r\ndata repository.  Unfortunately, it is not easy to interpret, analyze and\r\nvisualize the vast data collected by Hackystat in such way that it can\r\neffectively be used for software project control.\r\n\r\nA potential solution to that problem is to integrate Hackystat with the GQM\r\n(Goal / Question / Metric) Paradigm, a popular approach for goal-oriented,\r\nsystematic definition of measurement programs for software-engineering\r\nprocesses and products.  This integration should allow the goal-oriented\r\nuse of the metric data collected by Hackystat and increase its usefulness\r\nfor project control.  During the course of this work, this extension to\r\nHackystat which is later called hackyCGQM is implemented. As a result,\r\nhackyCGQM enables Hackystat to be used as a Software Project Control Center\r\n(SPCC) by providing purposeful high-level representations of the\r\nmeasurement data.\r\n\r\nAnother interesting side-effect of the combination of Hackystat and\r\nhackyCGQM is that this system is able to perform fully automated\r\nmeasurement and analysis cycles. This leads to the development of cGQM, a\r\nspecialized method for fully automated, GQM based measurement programs.  As\r\na summary, hackyCGQM seeks to implement a completely automated GQMbased\r\nmeasurement framework. This high degree of automation is made possible by\r\nlimiting the implemented measurement programs to metrics which can be\r\nmeasured automatically, thus sacrificing the ability to use arbitrary\r\nmetrics.\r\n",
    "school": "Department of Software Engineering,\r\n  Fachbereich Informatik,\r\n    Universitat Kaiserslautern, Germany",
    "authors": [
      "Christoph Lofi"
    ],
    "keywords": [
      "Thesis-MS",
      "C-GQM",
      "Hackystat"
    ],
    "sortKey": 200508
  },
  {
    "key": "csdl2-06-01",
    "type": "inproceedings",
    "title": "Actual Process: A Research Program",
    "year": "2006",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-01/06-01.pdf",
    "abstract": "\r\nMost process research relies heavily on the use of terms and concepts whose\r\nvalidity depends on a variety of assumptions to be met. As it is difficult\r\nto guarantee that they are met, such work continually runs the risk of\r\nbeing invalid. We propose a different and complementary approach to\r\nunderstanding process: Perform all description bottom-up and based on hard\r\ndata alone. We call the approach actual process and the data actual\r\nevents. Actual events can be measured automatically. This paper describes\r\nwhat has been done in this area already and what are the core problems to\r\nbe solved in the future.\r\n",
    "booktitle": "Submitted to the 2006 Workshop on Software Process",
    "authors": [
      "Lutz Prechelt",
      "Sebastian Jekutsch",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200605
  },
  {
    "key": "csdl2-06-02",
    "type": "inproceedings",
    "title": "Automated recognition of low-level process: A pilot validation study of Zorro for test-driven development",
    "year": "2006",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-02/06-02.pdf",
    "abstract": "\r\nZorro is a system designed to automatically determine whether a developer\r\nis complying with the Test-Driven Development (TDD) process.  Automated\r\nrecognition of TDD could benefit the software engineering community in a\r\nvariety of ways, from pedagogical aids to support the learning of\r\ntest-driven design, to support for more rigorous empirical studies on the\r\neffectiveness of TDD in practice.  This paper presents the Zorro system and\r\nthe results of a pilot validation study, which shows that Zorro was able to\r\nrecognize test-driven design episodes correctly 89\\\\% of the time. The\r\nresults also indicate ways to improve Zorro's classification accuracy\r\nfurther, and provide evidence for the effectiveness of this approach to\r\nlow-level software process recognition.\r\n",
    "booktitle": "Proceedings of the 2006 International Workshop on Software Process",
    "address": "Shanghai, China",
    "authors": [
      "Hongbing Kou",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Zorro",
      "Pubs-Workshop"
    ],
    "sortKey": 200605
  },
  {
    "key": "csdl2-06-05",
    "type": "phdthesis",
    "title": "Improving Software Development Process and Product Management with Software Project Telemetry",
    "year": "2006",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-05/06-05.pdf",
    "abstract": "\r\nSoftware development is slow, expensive and error prone, often resulting in\r\nproducts with a large number of defects which cause serious problems in\r\nusability, reliability, and performance. To combat this problem, software\r\nmeasurement provides a systematic and empirically-guided approach to\r\ncontrol and improve software development processes and final\r\nproducts. However, due to the high cost associated with \\`\\`metrics\r\ncollection'' and difficulties in \\`\\`metrics decision-making,'' measurement\r\nis not widely adopted by software organizations.\r\n\r\nThis dissertation proposes a novel metrics-based program called \\`\\`software\r\nproject telemetry'' to address the problems. It uses software sensors to\r\ncollect metrics automatically and unobtrusively. It employs a\r\ndomain-specific language to represent telemetry trends in software product\r\nand process metrics. Project management and process improvement decisions\r\nare made by detecting changes in telemetry trends and comparing trends\r\nbetween different periods of the same project. Software project telemetry\r\navoids many problems inherent in traditional metrics models, such as the\r\nneed to accumulate a historical project database and ensure that the\r\nhistorical data remain comparable to current and future projects.\r\n\r\nThe claim of this dissertation is that software project telemetry provides\r\nan effective approach to (1) automated metrics collection and analysis, and\r\n(2) in-process, empirically-guided software development process problem\r\ndetection and diagnosis. Two empirical studies were carried out to evaluate\r\nthe claim: one in software engineering classes, and the other in the\r\nCollaborative Software Development Lab. The results suggested that software\r\nproject telemetry had acceptably-low metrics collection and analysis\r\noverhead, and that it provided decision-making value at least in the\r\nexploratory context of the two studies.\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Qin Zhang"
    ],
    "keywords": [
      "Hackystat",
      "Telemetry",
      "Thesis-PhD"
    ],
    "sortKey": 200612
  },
  {
    "key": "csdl2-06-06",
    "type": "inproceedings",
    "title": "Requirement and Design Trade-offs in Hackystat: An in-process software engineering measurement and analysis system",
    "year": "2007",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-06/06-06.pdf",
    "abstract": "\r\nFor five years, the Hackystat Project has incrementally developed and\r\nevaluated a generic framework for in-process software engineering\r\nmeasurement and analysis (ISEMA). At least five other independent ISEMA\r\nsystem development projects have been initiated during this time,\r\nindicating growing interest and investment in this approach by the software\r\nengineering community. This paper presents 12 important requirement and\r\ndesign tradeoffs made in the Hackystat system, some of their implications\r\nfor organizations wishing to introduce ISEMA, and six directions for future\r\nresearch and development. The three goals of this paper are to: (1) help\r\npotential users of ISEMA systems to better evaluate the relative strengths\r\nand weaknesses of current and future systems, (2) help potential developers\r\nof ISEMA systems to better understand some of the important requirement and\r\ndesign trade-offs that they must make, and (3) help accelerate progress in\r\nISEMA by identifying promising directions for future research and\r\ndevelopment.\r\n",
    "booktitle": "Proceedings of the 2007 International Symposium on Empirical Software Engineering and Measurement",
    "address": "Madrid, Spain",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Conference"
    ],
    "sortKey": 200709
  },
  {
    "key": "csdl2-06-07",
    "type": "article",
    "title": "Protocols in the use of Empirical Software Engineering Artifacts",
    "year": "2007",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-07/06-07.pdf",
    "abstract": "\r\nIf empirical software engineering is to grow as a valid scientific\r\nendeavor, the ability to acquire, use, share, and compare data collected\r\nfrom a variety of sources must be encouraged. This is necessary to validate\r\nthe formal models being developed within computer science. However, within\r\nthe empirical software engineering community this has not been easily\r\naccomplished. This paper analyses experience from a number of projects, and\r\ndefines the issues, which include the following: (1) How should data,\r\ntestbeds, and artifacts be shared? (2) What limits should be placed on who\r\ncan use them and how? How does one limit potential misuse? (3) What is the\r\nappropriate way to credit the organization and individual that spent the\r\neffort collecting the data, developing the testbed, and building the\r\nartifact? (4) Once shared, who owns the evolved asset?  As a solution to\r\nthese issues, the paper proposes a framework for an empirical software\r\nengineering artifact license, which is intended to address the needs for\r\nboth creator and user of such artifacts and should foster a market in\r\nmaking available and using such artifacts. If this license framework for\r\nsharing software engineering artifacts is commonly accepted, it is\r\nconsidered that it should encourage artifact owners to make the artifacts\r\naccessible to others (gaining credit is more likely and misuse is less\r\nlikely), and it may be easier for other researchers to request artifacts\r\nsince there will be a well-defined protocol for how to deal with relevant\r\nmatters.\r\n",
    "journal": "Empirical Software Engineering",
    "volume": 12,
    "authors": [
      "Victor R. Basili",
      "Marvin V. Zelkowitz",
      "Dag Sjoberg",
      "Philip M. Johnson",
      "Tony Cowling"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Journal"
    ],
    "sortKey": 200702
  },
  {
    "key": "csdl2-06-08",
    "type": "article",
    "title": "Experiments to understand HPC time to development",
    "year": "2006",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-08/06-08.pdf",
    "abstract": "\r\nIn order to understand how high performance computing (HPC) programs are\r\ndeveloped, a series of experiments, using students in graduate level HPC\r\nclasses, have been conducted at many universities in the US. In this paper\r\nwe discuss the general process of conducting those experiments, give some\r\nof the early results of those experiments, and describe a web-based process\r\nwe are developing that will allow us to run additional experiments at other\r\nuniversities and laboratories that will be easier to conduct and generate\r\nresults that more accurately reflect the process of building HPC programs.\r\n",
    "journal": "CTWatch Quarterly",
    "authors": [
      "Lorin Hochstein",
      "Taiga Nakamura",
      "Victor R. Basili",
      "Sima Asgari",
      "Marvin V. Zelkowitz",
      "Jeffrey K. Hollingsworth",
      "Forrest Shull",
      "Jeffrey Carver",
      "Martin Voelp",
      "Nico Zazworka",
      "Philip M. Johnson"
    ],
    "keywords": [
      "HPC",
      "Pubs-Journal",
      "Hackystat"
    ],
    "sortKey": 200611
  },
  {
    "key": "csdl2-06-09",
    "type": "mastersthesis",
    "title": "Evaluation of Jupiter: A Lightweight Code Review Framework",
    "year": 2006,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-09/06-09.pdf",
    "abstract": "\r\nSoftware engineers generally agree that code reviews reduce development\r\ncosts and improve software quality by finding defects in the early stages\r\nof software development. In addition, code review software tools help the\r\ncode review process by providing a more efficient means of collecting and\r\nanalyzing code review data. On the other hand, software organizations that\r\nconduct code reviews often do not utilize these review tools. Instead, most\r\norganizations simply use paper or text editors to support their code review\r\nprocesses. Using paper or a text editor is potentially less useful than\r\nusing a review tool for collecting and analyzing code review data.\r\n\r\nIn this research, I attempted to address the problems of previous code\r\nreview tools by creating a lightweight and flexible review tool. This\r\nreview tool that I have developed, called \"Jupiter\", is an Eclipse IDE\r\nPlug-In. I believe the Jupiter Code Review Tool is more efficient at\r\ncollecting and analyzing code review data than the text-based approaches.\r\n\r\nTo investigate this hypothesis, I have constructed a methodology to compare\r\nthe Jupiter Review Tool to the text-based review approaches. I carried out\r\na case study using both approaches in a software engineering course with 19\r\nstudents.\r\n\r\nThe results provide some supporting evidence that Jupiter is more useful\r\nand more usable than the text-based code review, requires less overhead\r\nthan the text-based review, and appears to support long-term adoption.\r\n\r\nThe major contributions of this research are the Jupiter design philosophy,\r\nthe Jupiter Code Review Tool, and the insights from the case study\r\ncomparing the text-based review to the Jupiter-based review.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Takuya Yamashita"
    ],
    "keywords": [
      "Thesis-MS",
      "Jupiter"
    ],
    "sortKey": 200612
  },
  {
    "key": "csdl2-06-10",
    "type": "article",
    "title": "Automated software process and product measurement with Hackystat",
    "year": "2007",
    "month": "January",
    "abstract": "This article presents an overview of Hackystat, a system for automated software\r\nprocess and product measurement.",
    "journal": "Dr. Dobbs Journal",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Pubs-Journal",
      "Hackystat"
    ],
    "sortKey": 200701
  },
  {
    "key": "csdl2-06-12",
    "type": "techreport",
    "title": "Automated Inference of Software Development Behaviors:\r\n    Design, Implementation and Validation of Zorro for Test-Driven\r\n    Development",
    "year": 2006,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-12/06-12.pdf",
    "abstract": "\r\nIn my dissertation research, I propose to develop a systematic approach to automatically\r\ninferring software development behaviors using a technique I have developed called Software Development\r\nStream Analysis (SDSA). Software Development Stream Analysis is a generic framework\r\nfor inferring low-level software development behaviors. Zorro is an implementation of SDSA\r\nfor Test-Driven Development (TDD). In addition, I designed a series of validation studies to test\r\nthe SDSA framework by evaluating Zorro with respect to its capabilities to infer TDD development\r\nbehaviors. An early pilot validation study found that Zorro works very well in practice, with Zorro\r\nrecognizing the software development episodes of TDD with 88.4\\\\% accuracy. After this pilot\r\nstudy, I improved Zorro system's inferencing rules and evaluation mechanism as part of my collaborative\r\nresearch with Software Engineering Group at the National Research Council of Canada\r\n(NRC-CNRC). I am planning to conduct two more extended validation studies of Zorro in academic\r\nand industrial settings for Fall 2006 and Spring 2007.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-06-12",
    "authors": [
      "Hongbing Kou"
    ],
    "keywords": [
      "Thesis-Proposal",
      "Zorro",
      "Hackystat"
    ],
    "sortKey": 200611
  },
  {
    "key": "csdl2-06-13",
    "type": "article",
    "title": "Automated Recognition of Test-Driven Development with Zorro",
    "year": "2007",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2006/06-13/06-13.pdf",
    "abstract": "\r\nZorro is a system designed to automatically determine whether a developer\r\nis complying with an operational definition of Test-Driven Development\r\n(TDD) practices.  Automated recognition of TDD can benefit the software\r\ndevelopment community in a variety of ways, from inquiry into the \\`\\`true\r\nnature'' of TDD, to pedagogical aids to support the practice of test-driven\r\ndevelopment, to support for more rigorous empirical studies on the effectiveness\r\nof TDD in both laboratory and real world settings.  This paper introduces\r\nthe Zorro system, its operational definition of TDD, the analyses made\r\npossible by Zorro, and our ongoing efforts to validate the system.\r\n",
    "journal": "Proceedings of Agile 2007",
    "authors": [
      "Philip M. Johnson",
      "Hongbing Kou"
    ],
    "keywords": [
      "Pubs-Conference",
      "Zorro",
      "Hackystat"
    ],
    "sortKey": 200708
  },
  {
    "key": "csdl2-07-02",
    "type": "techreport",
    "title": "Results from the 2006 Classroom Evaluation of Hackystat-UH",
    "year": 2006,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2007/07-02/07-02.html",
    "abstract": "\r\nThis report presents the results from a classroom evaluation of Hackystat\r\nby ICS 413 and ICS 613 students at the end of Fall, 2006.  The students had\r\nused Hackystat-UH for approximately six weeks at the time of the\r\nevaluation.  The survey requests their feedback regarding the installation,\r\nconfiguration, overhead of use, usability, utility, and future use of the\r\nHackystat-UH configuration. This classroom evaluation is a semi-replication\r\nof an evaluation performed on Hackystat by ICS 413 and 613 students at the\r\nend of Fall, 2003, which is reported in \"Results from the 2003 Classroom\r\nEvaluation of Hackystat-UH\".  As the Hackystat system has changed\r\nsignificantly since 2003, some of the evaluation questions were changed.\r\nThe data from this evaluation, in combination with the data from the 2003\r\nevaluation, provide an interesting perspective on the past, present, and\r\npossible future of Hackystat.  Hackystat has increased significantly in\r\nfunctionality since 2003, which has enabled the 2006 usage to more closely\r\nreflect industrial application, and which has resulted in significantly\r\nless overhead with respect to client-side installation. On the other hand,\r\nresults appear to indicate that this increase in functionality has resulted\r\nin a decrease in the usability and utility of the system, due to\r\ninadequacies in the server-side user interface.  Based upon the data, the\r\nreport proposes a set of user interface enhancements to address the\r\nproblems raised by the students, including Ajax-based menus and parameters,\r\nworkflow based organization of the user interface, real-time display for\r\nongoing project monitoring, annotations, and simplified data exploration\r\nfacilities.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-07-02",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200612
  },
  {
    "key": "csdl2-07-03",
    "type": "inproceedings",
    "title": "Ultra-automation and ultra-autonomy for software engineering management of ultra-large-scale systems",
    "year": "2007",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2007/07-03/07-03.pdf",
    "abstract": "\r\n  \\`\\`Ultra-Large-Scale Systems: The Software Challenge of the Future''\r\n  identifies \\`\\`Engineering Management at Large Scales'' as an important\r\n  focus of research.  Engineering management for software typically\r\n  involves measurement and monitoring of products and processes in order to\r\n  maintain acceptable levels of important project characteristics including\r\n  cost, quality, usability, performance, reliability, and so forth.  Our\r\n  research on software engineering measurement over the past ten years has\r\n  exhibited a trend towards increasing automation and autonomy in the\r\n  collection and analysis of process and product measures.  In this\r\n  position paper, we extrapolate from our work so far to consider what new\r\n  forms of automation and autonomy might be required for software\r\n  engineering management of ULS systems.\r\n",
    "booktitle": "Proceedings of the 2007 Workshop on Ultra Large Scale Systems",
    "address": "Minneapolis, Minnesota",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Workshop"
    ],
    "sortKey": 200705
  },
  {
    "key": "csdl2-07-04",
    "type": "phdthesis",
    "title": "Automated Inference of Software Development Behaviors: Design,\r\n  Implementation and Validation of Zorro for Test-Driven Development",
    "year": "2007",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2007/07-04/07-04.pdf",
    "abstract": "\r\nA recent focus of interest in software engineering research is on low-level\r\nsoftware processes, which define how software developers or development\r\nteams should carry on development activities in short phases that last from\r\nseveral minutes to a few hours. Anecdotal evidence exists for the positive\r\nimpact on quality and productivity of certain low-level software processes\r\nsuch as test-driven development and continuous integration. However,\r\nempirical research on low-level software processes often yields conflicting\r\nresults. A significant threat to the validity of the empirical studies on\r\nlow-level software processes is that they lack the ability to rigorously\r\nassess process conformance. That is to say, the degree to which developers\r\nfollow the low-level software processes can not be evaluated.\r\n\r\nIn order to improve the quality of empirical research on low-level software\r\nprocesses, I developed a technique called Software Development Stream\r\nAnalysis (SDSA) that can infer development behaviors using automatically\r\ncollected in-process software metrics. The collection of development\r\nactivities is supported by Hackystat, a framework for automated software\r\nprocess and product metrics collection and analysis. SDSA abstracts the\r\ncollected software metrics into a software development stream, a\r\ntime-series data structure containing time-stamped development events. It\r\nthen partitions the development stream into episodes, and then uses a\r\nrule-based system to infer low-level development behaviors exhibited in\r\nepisodes.\r\n\r\nWith the capabilities provided by Hackystat and SDSA, I developed the Zorro\r\nsoftware system to study a specific low-level software process called\r\nTest-Driven Development (TDD). Experience reports have shown that TDD can\r\ngreatly improve software quality with increased developer productivity, but\r\nempirical research findings on TDD are often mixed. An inability to\r\nrigorously assess process conformance is a possible explanation. Zorro can\r\nrigorously assess process conformance to a specific operational definition\r\nfor TDD, and thus enable more controlled, comparable empirical studies.\r\n\r\nMy research has demonstrated that Zorro can recognize the low-level\r\nsoftware development behaviors that characterize TDD. Both the pilot and\r\nclassroom case studies support this conclusion. The industrial case study\r\nshows that the automated data collection and development behavior inference\r\nhas the potential to be useful for researchers.\r\n\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Hongbing Kou"
    ],
    "keywords": [
      "Hackystat",
      "Zorro",
      "Thesis-PhD"
    ],
    "sortKey": 200712
  },
  {
    "key": "csdl2-08-01",
    "type": "inproceedings",
    "title": "Carbon Metric Collection and Analysis with the Personal Environmental Tracker",
    "year": "2008",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2008/08-01/08-01.pdf",
    "abstract": "\r\nThe Personal Environmental Tracker (PET) is a proposed\r\nsystem for helping people to track their impact on the\r\nenvironment, and to make changes to reduce that impact,\r\ncreating a personal feedback loop. PET consists of sensors\r\nthat collect data such as home electricity or gasoline usage\r\nand send it to a database for analysis and presentation to the\r\nuser. By collecting data from diverse sources, PET can help\r\nusers decide what aspect of their lives they should make\r\nchanges in first to maximize their reduction in\r\nenvironmental impact. PET's open architecture will allow\r\nother ubiquitous sustainability researchers to leverage the\r\ninfrastructure for research in sensors, data analysis, or\r\npresentation of data.\r\n\r\n",
    "booktitle": "Proceedings of the UbiComp 2008 Workshop on Ubiquitous Sustainability: Citizen Science and Activism",
    "address": "Seoul, South Korea",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "Pubs-Workshop"
    ],
    "sortKey": 200809
  },
  {
    "key": "csdl2-08-04",
    "type": "techreport",
    "title": "Dynamic Time Warping Algorithm Review",
    "year": 2008,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2008/08-04/08-04.pdf",
    "abstract": "This technical report describes the Dynamic Time Warping algorithm and\r\nhow it can be applied to support identification of similar software development projects\r\nthrough analysis of their telemetry data.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-08-04",
    "authors": [
      "Pavel Senin"
    ],
    "keywords": [
      "Hackystat",
      "Trajectory"
    ],
    "sortKey": 200812
  },
  {
    "key": "csdl2-08-05",
    "type": "techreport",
    "title": "Using simulation to investigate IT micro-processes",
    "year": 2008,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2008/08-05/08-05.pdf",
    "abstract": "This technical report describes how simulation can be used to (1) gain confidence\r\nin empirical analysis of software micro-processes and (2) provide a means to validate or obtain\r\nevidence to support software engineering hypotheses and theory.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-08-05",
    "authors": [
      "Alexey Olkov",
      "Daniel Port"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200812
  },
  {
    "key": "csdl2-09-01",
    "type": "article",
    "title": "Operational Definition and Automated Inference of Test-Driven Development with Zorro",
    "year": "2009",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-01/09-01.pdf",
    "abstract": "\r\nTest-driven development (TDD) is a style of development named for its most\r\nvisible characteristic: the design and implementation of test cases prior\r\nto the implementation of the code required to make them pass. Many claims\r\nhave been made for TDD: that it can improve implementation as well as\r\ndesign quality, that it can improve productivity, that it results in 100\\\\%\r\ncoverage, and so forth.  However, research to validate these claims has\r\nyielded mixed and sometimes contradictory results.  We believe that at\r\nleast part of the reason for these results stems from differing\r\ninterpretations of the TDD development style, along with an inability to\r\ndetermine whether programmers actually follow whatever definition of\r\nTDD is in use.\r\n\r\nZorro is a system designed to automatically determine whether a developer\r\nis complying with an operational definition of Test-Driven Development\r\n(TDD) practices.  Automated recognition of TDD can benefit the software\r\ndevelopment community in a variety of ways, from inquiry into the \\`\\`true\r\nnature'' of TDD, to pedagogical aids to support the practice of test-driven\r\ndevelopment, to support for more rigorous empirical studies on the\r\neffectiveness of TDD in both laboratory and real world settings.\r\n\r\nThis paper describes the Zorro system, its operational definition of TDD,\r\nthe analyses made possible by Zorro, and two empirical evaluations of the\r\nsystem.  Our research shows that it is possible to define an operational\r\ndefinition of TDD that is amenable to automated recognition, and\r\nillustrates the architectural and design issues that must be addressed in\r\norder to do so.  Zorro has implications not only for the practice of TDD,\r\nbut also for software engineering \\`\\`micro-process'' definition and\r\nrecognition through its parent framework, Software Development Stream\r\nAnalysis.\r\n",
    "journal": "Journal of Automated Software Engineering",
    "authors": [
      "Hongbing Kou",
      "Philip M. Johnson",
      "Hakan Erdogmus"
    ],
    "keywords": [
      "Hackystat",
      "Zorro",
      "Pubs-Journal"
    ],
    "sortKey": 200912
  },
  {
    "key": "csdl2-09-02",
    "type": "inproceedings",
    "title": "We need more coverage, stat!  Experience with the Software ICU",
    "year": "2009",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-02/09-02.pdf",
    "abstract": "\r\nFor empirical software engineering to reach its fullest potential, we must\r\ndevelop effective, experiential approaches to learning about it in a\r\nclassroom setting.  In this paper, we report on a case study involving a\r\nnew approach to classroom-based empirical software engineering called the\r\n\\`\\`Software ICU''.  In this approach, students learn about nine empirical\r\nproject \\`\\`vital signs'' and use the Hackystat Framework to put their\r\nprojects into a virtual \\`\\`intensive care unit'' where these vital signs can\r\nbe assessed and monitored.  We used both questionnaire and log data to gain\r\ninsight into the strengths and weaknesses of this approach. Our evaluation\r\nprovides both quantitative and qualitative evidence concerning the overhead\r\nof the system; the relative utility of different vital signs; the frequency\r\nof use; and the perceived appropriateness outside of the classroom\r\nsetting. In addition to benefits, we found evidence of measurement\r\ndysfunction induced directly by the presence of the Software ICU. We\r\ncompare these results to case studies we performed in 2003 and 2006 using\r\nthe Hackystat Framework but not the Software ICU.  We use these findings to\r\norient future research on empirical software engineering both inside and\r\noutside of the classroom.\r\n",
    "booktitle": "Proceedings of the 2009 Conference on Empirical Software Engineering and Measurement",
    "address": "Orlando, Florida",
    "authors": [
      "Philip M. Johnson",
      "Shaoxuan Zhang"
    ],
    "keywords": [
      "Hackystat",
      "Pubs-Conference",
      "SoftwareICU"
    ],
    "sortKey": 200910
  },
  {
    "key": "csdl2-09-03",
    "type": "techreport",
    "title": "Results from the 2008 Classroom Evaluation of Hackystat",
    "year": 2009,
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-03/09-03.pdf",
    "abstract": "\r\nThis report presents the results from a classroom evaluation of Hackystat\r\nby ICS 413 students at the end of Fall, 2008.  The evaluation focuses on\r\nthe use of the Software ICU user interface developed using Hackystat Version 8.\r\nResults indicate that sensor installation is somewhat more complicated than\r\npreviously due to the absence of a client-side installer.  The three most\r\nused \"vital signs\" were DevTime, Coverage, and Commit.  Over half of the respondents\r\nfelt that the Software ICU colors accurately represented the health of the project.\r\nMost students felt that the Software ICU would be useful in a professional context.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-03",
    "authors": [
      "Shaoxuan Zhang",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat",
      "SoftwareICU"
    ],
    "sortKey": 200903
  },
  {
    "key": "csdl2-09-05",
    "type": "techreport",
    "title": "Literature review on carbon footprint collection and analysis",
    "year": 2009,
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-05/09-05.pdf",
    "abstract": "\r\nThe Personal Environmental Tracker (PET) is a proposed system for helping people to track their\r\nimpact on the environment via data collected from sensors, and to make changes to reduce that\r\nimpact, creating a personal feedback loop. This document presents a review of the work related\r\nto this research program, including: environmental research, economic factors regarding energy\r\nefficiency, methods of providing feedback on energy usage, motivating users to change their behavior,\r\nsuggestions for the design of persuasive environmental systems, a review of related systems, and\r\nthe calculation of carbon emissions.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-05",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability"
    ],
    "sortKey": 200901
  },
  {
    "key": "csdl2-09-07",
    "type": "techreport",
    "title": "Experiences with Hackystat as a service-oriented architecture",
    "year": "2009",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-07/09-07.pdf",
    "abstract": "\r\nHackystat is an open source framework for automated collection and analysis\r\nof software engineering process and product data.  Hackystat has been in\r\ndevelopment since 2001, and has gone through eight major architectural\r\nrevisions during that time.  In 2007, we performed the latest architectural\r\nrevision, whose primary goal was to reimplement Hackystat as a\r\nservice-oriented architecture (SOA).  This version has now been in\r\npublic release for a year, and this paper reports on our experiences:\r\nthe motivations that led us to reimplement the system as a SOA, the\r\ncosts and benefits of that conversion, and our lessons learned.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-07",
    "authors": [
      "Philip M. Johnson",
      "Shaoxuan Zhang",
      "Pavel Senin"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200902
  },
  {
    "key": "csdl2-09-08",
    "type": "techreport",
    "title": "Literature review on time series indexing",
    "year": 2009,
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-08/09-08.pdf",
    "abstract": "\r\nSimilarity search in time-series databases has become an active research area in the past decade\r\ndue to the tremendous growth of the amount of temporal data collected and publicly available.\r\nThe complexity of this similarity problem lies in the high dimensionality of the temporal data\r\nmaking convenient methods inappropriate. The most promising approaches involve dimensionality\r\nreduction and indexing techniques which are the subject of this review. After starting with a\r\ngeneral introduction to the time-series and classical time-series analyses, we will discuss in detail\r\ntime-series normalization techniques and relevant distance metrics. We conclude with a review of\r\nthe dimensionality-reduction and indexing methods proposed to date.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-08",
    "authors": [
      "Pavel Senin"
    ],
    "keywords": [
      "Trajectory"
    ],
    "sortKey": 200905
  },
  {
    "key": "csdl2-09-09",
    "type": "techreport",
    "title": "Software Trajectory Analysis:\r\n    An empirically based method for automated software process discovery",
    "year": 2009,
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-09/09-09.pdf",
    "abstract": "\r\nIn this research, I will apply knowledge discovery and data mining techniques to the domain of software engineering in order to evaluate their ability to automatically notice interesting recurrent patterns of behavior. While I am not proposing to be able to infer a complete and correct software process model, my system will provide its users with a formal description of recurrent behaviors in their software development. The proposed contributions of my research will include:  (1) the implementation of a system aiding in discovery of novel software process knowledge through the analysis of fine-grained software process and product data;\r\n(2) experimental evaluation of the system, which will provide insight into its strengths and weaknesses;\r\nand (3) the possible discovery of useful new software process patterns.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-09",
    "authors": [
      "Pavel Senin"
    ],
    "keywords": [
      "Thesis-Proposal",
      "Trajectory",
      "Hackystat"
    ],
    "sortKey": 200908
  },
  {
    "key": "csdl2-09-10",
    "type": "mastersthesis",
    "title": "Learning Empirical Software Engineering Using Software Intensive Care Unit",
    "year": 2009,
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-10/09-10.pdf",
    "abstract": "\r\nIn software engineering, the importance of measurement is well understood, and many efficient software development metrics have been developed to help measurement. However, as the number of metrics increases, the effort required to collect data, analyze them and interpret the results quickly becomes overwhelming. This problem is even more critical in educational approaches regarding empirical software engineering.\r\n\r\nThe Software Intensive Care Unit is a new approach to facilitating software measurement and control with multiple software development metrics. It uses the Hackystat system to achieve automated data collection and analysis, then uses the collected analysis data to create a monitoring interface for multiple \\`\\`vital signs''. A vital sign is a wrapper of a software metric with an easy to use presentation. It consists of a historical trend and a newest state value, both of which are colored according to the \\`\\`health'' state.\r\n\r\nMy research deployed and evaluated the Software ICU in a senior-level software engineering course. Students' usage was logged in the system, and a survey was conducted. The results provide supporting evidence that Software ICU does help students in course project development and project team organization. In addition, the results of the study also discover some limitations of the system, including inappropriate vital sign presentation and measurement dysfunction.\r\n",
    "school": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "authors": [
      "Shaoxuan Zhang"
    ],
    "keywords": [
      "Thesis-MS",
      "Hackystat",
      "SoftwareICU"
    ],
    "sortKey": 200912
  },
  {
    "key": "csdl2-09-11",
    "type": "techreport",
    "title": "Empirical Computational Thinking",
    "year": "2009",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-11/09-11.pdf",
    "abstract": "\r\nThis technical report presents an edited version of a proposal to the NSF\r\nCPATH program. The vision of this proposal is to develop and\r\ninstitutionalize a new approach to computational thinking where abstraction\r\nand automation combine to transform the use of empirical thinking in\r\nsoftware development.  We call this approach \\`\\`empirical computational\r\nthinking'', or eCT.  The goal of this research is to explore, evaluate,\r\nand institutionalize techniques and technologies for eCT, building upon\r\nresearch and education by ourselves and others in empirically-based\r\nsoftware development.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-11",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Hackystat"
    ],
    "sortKey": 200905
  },
  {
    "key": "csdl2-09-12",
    "type": "techreport",
    "title": "Proposal for Electricity Conservation Experiments in Saunders Hall",
    "year": "2009",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-12/09-12.pdf",
    "abstract": "\r\nThe University of Hawaii at Manoa has set the goals of reducing its\r\nelectricity usage by 30 percent by 2012 and 50 percent by 2015 (based on a\r\n2003 benchmark). A variety of tactics will be required to meet these\r\naggressive goals. One promising technique is to encourage the occupants of\r\nbuildings to reduce their electricity usage.  There are a variety of\r\npossible interventions that may encourage occupants to reduce their\r\nelectricity usage. To assess the relative effectiveness of the\r\ninterventions, we plan a series of experiments in Saunders. However, the\r\nparticipants of each experiment will be the occupants of Saunders, rather\r\nthan a set of participants recruited anew for each experiment. We expect\r\ntwo negative consequences of the continuity of the subjects: reduced\r\nsubject interest/enthusiasm, and diminishing conservation returns.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-09-12",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability"
    ],
    "sortKey": 200906
  },
  {
    "key": "csdl2-09-15",
    "type": "techreport",
    "title": "Human centered information integration for the smart grid",
    "year": "2009",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-15/09-15.pdf",
    "abstract": "\r\nThe \"Smart Grid\" represents a new vision for\r\nthe electrical infrastructure of the United States, whose goals include\r\nmore active participation by consumers, new generation and storage options\r\nincluding renewable energy, and new products, services, and markets.  To\r\nreach its full potential, the Smart Grid must provide information to\r\nconsumers in a way that enables positive, sustained changes to\r\nenergy-related behaviors.\r\n\r\nThe central question to be pursued in this research proposal is: What kinds of\r\n  information, provided in what ways and at what times, enables consumers\r\n  to make positive, sustained changes to their energy consumption\r\n  behaviors?  Prior research indicates that such changes can potentially\r\nbe motivated by an appropriate combination of personalized information,\r\ngeneral and specific commitments, achievable goals, social reinforcement,\r\nfeedback, and financial incentives.\r\n\r\nThis project will develop a collection\r\nof open source components called WattBlocks, which  will provide novel and\r\nuseful scientific infrastructure for investigating the ways in which\r\nenergy-related information can affect human behavior. The project will also\r\ndevelop eSpheres, a novel social networking application that provides users\r\nwith access to energy-related communities at configurable levels of\r\nscale. The combination of WattBlocks and eSpheres will lower the technological\r\nefforts required for empirical, replicable studies of human energy-related\r\nbehaviors.\r\n\r\nThe project will use this infrastructure in a series of two case studies, one\r\ninvolving campus dormitory energy competitions and one involving community\r\nhome energy challenges.  The project will investigate a number of\r\nimportant research questions, including: (1) What are the requirements\r\nfor consumer-facing, open source, scientific energy information\r\ninfrastructure? (2) What are the strengths and weaknesses of a dedicated\r\nsocial network technology like eSpheres for energy behavior change? (3)\r\nWhat combination of behavioral change motivators, under what conditions,\r\ninduce positive change? (4) What factors influence the sustainability of\r\nthese changes? (5) What is the influence of energy data feedback latency\r\n(i.e. 1 minute, 15 minutes, 1 hour, 1 day) on behavioral change?\r\n",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-09-15",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "WattDepot",
      "SmartGrid",
      "KukuiCup"
    ],
    "sortKey": 200912
  },
  {
    "key": "csdl2-09-16",
    "type": "mastersthesis",
    "title": "Linked Data applied to Collaborative Software Development: A case study of Hackystat",
    "year": "2009",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-16/09-16.pdf",
    "abstract": "\r\nThis thesis investigates a new way to take advantage of RDF metadata to\r\nsupport Collaborative Software Development. RDF metadata helps developers\r\novercome typical problems in iterative software development, such as:\r\nexceptions thrown at run-time; making design and implementation decisions\r\nwithin previously unknown domains; and usage of previously unknown tools or\r\nlibraries. Solutions usually consist of searching for suggestions from\r\nforum posts, source code of similar projects, direct contact with specific\r\nexperts, etc.  The main problems with this approach are the time wasted in\r\nmanually detecting the searched info from unstructured documents, the low\r\neffectiveness of search engines, and the lack of information about the\r\nactual expertise of the directly contacted people.\r\n\r\nIn contrast, having info about projects and issues semantically structured\r\nwith RDF metadata can speed up detection of the searched details.  Dynamic\r\ncreation of RDF links with external similar RDF metadata allows users to\r\navoid searching or analyzing search results.  Finally, metadata about users\r\nincluding quality measures coming from a trustworthy source such as\r\nTelemetry can allow the user to trust the actual developer's\r\nexpertise. Such RDF metadata and links, together with HTTP URIs, is\r\nprovided by the Hackystat LinkedSensorData (LiSeD) service.\r\n",
    "school": "University of Bari, Italy",
    "authors": [
      "Myriam Leggieri"
    ],
    "keywords": [
      "Hackystat",
      "Thesis-MS"
    ],
    "sortKey": 200912
  },
  {
    "key": "csdl2-09-17",
    "type": "mastersthesis",
    "title": "Applying Case-Based Reasoning for Building Autonomic Service-Oriented Systems",
    "year": "2009",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2009/09-17/09-17.pdf",
    "abstract": "\r\nService-oriented computing is considered as a successful approach building\r\nlarge-scale software systems, spanning the internet, and globally improving\r\nsoftware reuse. Service-oriented architectures are complex and hard to\r\nmaintain. A service may run on many machines, and single machines may host\r\nmany services. The concept of distributed composition of services hides a\r\nhuge amount of complexity in the management of the service-oriented\r\narchitecture. Users have to deal with complex configuration of services to\r\nachieve functional and quality requirements, thus the complexity of the\r\nsystem requires a lot of administrator-interference. Despite the effort of\r\nthe administrator, the configuration may not be good enough. It is hard for\r\nan administrator to monitor individual services and the service-oriented\r\nsystem to determine if the system is running optimal. Therefore a growing\r\ntrend for autonomic service-oriented systems has emerged. In mid-october\r\n2001, IBM released a manifesto that the main obstacle to further progress\r\nin the IT industry is a looming software complexity crisis. The manifesto\r\nclaimed that the difficulty of managing today's computer systems goes well\r\nbeyond the administration of individual software environments. Computing\r\nsystem's complexity appears to be approaching the limits of human\r\ncapability, and there will be no way to make timely, decisive responses to\r\nthe rapid stream of changing and conflicting. This dissertation discusses\r\nautonomic computing in service-oriented computing. We present a framework\r\nthat builds the foundation for self-healing, self-reconfiguration,\r\nself-optimization and selfprotecting service-oriented systems. We apply and\r\nimplement the framework to Hackystat, an Open Source Software developed at\r\nUniversity of Hawaii. Furthermore we discuss the role of service-oriented\r\ncomputing in autonomic computing, which plays a fundamental role for the\r\nrelationship between autonomic elements. At the end, we achieved to provide\r\na global overview in the domain of autonomic and service-oriented computing\r\nand how to combine them in bidirectional ways. We implemented an open\r\nsource framework called, Hackystat Service Manager, for achieving an\r\nautonomic service-oriented architecture in Hackystat in the scope of Google\r\nSummer of Code, which can be evolved and evaluated or adapted to any other\r\nservice-oriented system.\r\n\r\n",
    "school": "University of Limerick, Ireland",
    "authors": [
      "Herve Weitz"
    ],
    "keywords": [
      "Hackystat",
      "Thesis-MS"
    ],
    "sortKey": 200909
  },
  {
    "key": "csdl2-10-02",
    "type": "techreport",
    "title": "Fostering Sustained Energy Behavior Change and Increasing Energy Literacy In A Student Housing Energy Competition",
    "year": "2010",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-02/10-02.pdf",
    "abstract": "\r\nThe world is in the grip of a crisis in the way energy is produced and consumed. Climate change represents a huge threat to the modern way of life, particularly for island communities like Hawaii. Many changes to our energy system will be required to resolve the crisis, and one promising part of the solution is reducing energy usage through changes in behavior. Energy usage in similar homes can differ by a factor of two to four times, demonstrating the potential contribution of behavior change to the crisis.\r\n\r\nThis research project seeks to find ways to foster sustainable changes in behavior that lead to reduced energy usage. The research will be conducted in the context of a dorm energy competition on the UH Manoa campus in October 2010. Power meters will be installed on each floor of two freshmen residence halls. Each floor will compete to use the least energy during the 4 week competition.\r\n\r\nA competition website will be created, where participants can log in to view near-realtime data about their floor's power usage, and also select from a variety of tasks to perform. Each task is designed to increase the participant's energy literacy (knowledge, positive attitudes, and behaviors related to energy), and a certain number of points are assigned for the completion of each task. The points provide a parallel competition to motivate participants to perform the tasks. Prizes will be awarded to floors using the least energy, and participants obtaining the most points.\r\n\r\nSeveral research questions will be investigated using the data collected, including how energy usage changed after the competition is over, whether the website tasks affected energy literacy, and whether floors that had higher energy literacy had more sustained energy conservation after the competition was complete. The research questions will be investigated using energy data from the meters, log files from the website, and an energy literacy survey administered before and after the competition.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-10-02",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "Thesis-Proposal",
      "WattDepot",
      "KukuiCup"
    ],
    "sortKey": 201005
  },
  {
    "key": "csdl2-10-03",
    "type": "techreport",
    "title": "The Kukui Cup: Proposal for a UH Residence Hall Energy Competition",
    "year": "2010",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-03/10-03.pdf",
    "abstract": "\r\nKukui nut oil was used by ancient Hawaiians to light their homes.  In honor\r\nof this original form of energy in the islands, we propose to design and\r\nimplement a Dorm Energy Competition for the University of Hawaii called the\r\n\\`\\`Kukui Cup''.   It will be held for the first time during the month of October,\r\n2011.  The three goals of this project are: (1) Improve the energy literacy\r\nof participating students; (2) Conduct innovative research in information\r\ntechnology for energy-related behavioral change; and (3) Save money for the\r\nuniversity by reducing energy costs.  As part of this project, we will\r\nimplement a new web application to provide information regarding UH Dorm\r\nEnergy in general and the Kukui Cup competition in particular.  This\r\nsoftware will also support research on energy behavior by the Collaborative\r\nSoftware Development Laboratory in the Department of Information and\r\nComputer Sciences.  We propose to hold the October, 2011 dorm energy\r\ncompetition in three freshman dorms, and then expand the program to include\r\nmore dorms in future years.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-10-03",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "WattDepot",
      "KukuiCup"
    ],
    "sortKey": 201002
  },
  {
    "key": "csdl2-10-04",
    "type": "techreport",
    "title": "Makahiki: An Extensible Open-Source Platform for Creating Energy Competitions",
    "year": "2010",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-04/10-04.pdf",
    "abstract": "\r\nBecause of our ever-increasing population and our limited natural resources, improving the energy literacy of the population is becoming increasingly important.  A way to promote these habits is to hold energy competitions to see who can reduce their energy usage the most.  A popular place to hold these competitions are in University dorms, where students are making the transition from living with their parents to living on their own.  Holding these competitions are a great way to educate the student population, but the development of the competition can be costly.  Besides prizes for the winning individuals/dorms, creating and maintaining a development website can take a lot of time.  Some groups have turned to software development firms that provide the software and hardware, but at a cost.\r\n\r\nWe propose a system called Makahiki that will provide a free, open-source, and easy to implement solution.  Using other open source tools such as WattDepot, we aim to create a configurable package for organizations who hope to hold their own energy competitions.  To test our implementation, we will be holding a dorm energy competition here at the University of Hawaii at Manoa in October 2011.  We will also test the configurability of our system by implementing another organization's dorm energy competition website.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-10-04",
    "authors": [
      "George E. Lee"
    ],
    "keywords": [
      "Sustainability",
      "Thesis-Proposal",
      "WattDepot",
      "KukuiCup",
      "Makahiki"
    ],
    "sortKey": 201012
  },
  {
    "key": "csdl2-10-05",
    "type": "inproceedings",
    "title": "WattDepot: An open source software ecosystem for enterprise-scale energy data collection, storage, analysis, and visualization",
    "year": "2010",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-05/10-05.pdf",
    "abstract": "\r\n  WattDepot is an open source, Internet-based, service-oriented framework\r\n  for collection, storage, analysis, and visualization of energy data.\r\n  WattDepot differs from other energy management solutions in one or more\r\n  of the following ways: it is not tied to any specific metering\r\n  technology; it provides high-level support for meter aggregation and data\r\n  interpolation; it supports carbon intensity analysis; it is\r\n  architecturally decoupled from the underlying storage technology; it\r\n  supports both hosted and local energy services; it can provide near-real\r\n  time data collection and feedback; and the software is open source and\r\n  freely available.  In this paper, we introduce the framework, provide\r\n  examples of its use, and discuss its application to research and\r\n  understanding of the Smart Grid.\r\n",
    "booktitle": "Proceedings of the First International Conference on Smart Grid Communications",
    "address": "Gaithersburg, MD",
    "authors": [
      "Robert S. Brewer",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "WattDepot",
      "SmartGrid",
      "Pubs-Conference"
    ],
    "sortKey": 201010
  },
  {
    "key": "csdl2-10-06",
    "type": "techreport",
    "title": "WattDepot: Enterprise-scale, sensor-based energy data collection and analysis",
    "year": "2010",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-06/10-06.pdf",
    "abstract": "\r\nEnterprise-scale energy data collection and analysis is becoming increasingly important with the advent of the \"Smart\" grid. We have developed and released an open source, sensor-based system called WattDepot for collecting, storing and analyzing energy data to fill this niche that is greater than individual households but less than entire utility grids. WattDepot is designed to allow data collection from a wide variety of energy production and consumption devices, and to support diverse visualizations and delivery of the data. We are using WattDepot to support a campus dormitory energy competition for Fall 2010. Since the process of selecting, purchasing, and installing the meters is ongoing, we have developed an end-to-end simulation of dorm energy to ensure that the WattDepot software sensors would work with any of the chosen meters. WattDepot's sensor-based, service-oriented architecture makes it useful to a wide variety of energy application domains.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-10-06",
    "authors": [
      "Robert S. Brewer",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "WattDepot",
      "SmartGrid"
    ],
    "sortKey": 201005
  },
  {
    "key": "csdl2-10-07",
    "type": "inproceedings",
    "title": "The Kukui Cup: a Dorm Energy Competition Focused on Sustainable Behavior Change and Energy Literacy",
    "year": "2011",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-07/10-07.pdf",
    "abstract": "\r\nThe Kukui Cup is an advanced dorm energy competition whose goal is to\r\ninvestigate the relationships among energy literacy, sustained energy\r\nconservation, and information technology support of behavior change. Two\r\ngeneral purpose open source systems have been implemented: WattDepot and\r\nMakahiki. WattDepot provides enterprise-level collection, storage, analysis,\r\nand visualization of energy data. Makahiki is a web application framework that\r\nsupports dorm energy competitions of varying degrees of complexity,\r\nincluding a personalized homepage where participants can complete tasks\r\ndesigned to increase energy literacy that can be verified by competition\r\nadministrators. The technology and approach will be evaluated in a dorm energy\r\ncompetition to take place in the Spring of 2011, with hundreds of University\r\nfreshmen. The energy use of each pair of dormitory floors will be metered in\r\nnear-realtime, and the energy literacy of participants will be assessed before\r\nand after the competition.\r\n",
    "booktitle": "Proceedings of the 44th Hawaii International Conference on System Sciences",
    "authors": [
      "Robert S. Brewer",
      "George E. Lee",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "WattDepot",
      "KukuiCup",
      "Makahiki",
      "Pubs-Conference",
      "Gamification"
    ],
    "sortKey": 201101
  },
  {
    "key": "csdl2-10-09",
    "type": "inproceedings",
    "title": "Software Trajectory Analysis: An empirically based method for automated software process discovery",
    "year": "2010",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-09/10-09.pdf",
    "abstract": "\r\nA process defines a set of routines which allow one to organize, manage and improve activities in order to reach a goal. With expert intuition and a-priori knowledge, software processes have been modeled for a long time, resulting in the Waterfall, Spiral and other development models. Later, with the wide use of SCM systems and the public availability of primitive software process artifact trails, formal methods such as Petri Nets, State Machines and others have been applied to the problem of recurrent process discovery and control. Recent advances in metrics effort, increased use of continuous integration, and extensive documentation of the performed process make information-rich fine-grained software process artifacts trails available for analysis. This fine-grained data has the potential to shed new light on the software process. In this work I propose to investigate an automated technique for the discovery and characterization of recurrent behaviors in software development - \"programming habits\" either on an individual or a team level.\r\n",
    "booktitle": "Proceedings of the Fifth International Doctoral Symposium on Empirical Software Engineering",
    "address": "Bolzano-Bozen, Italy",
    "authors": [
      "Pavel Senin"
    ],
    "keywords": [
      "Trajectory",
      "Hackystat",
      "Pubs-Conference"
    ],
    "sortKey": 201009
  },
  {
    "key": "csdl2-10-08",
    "type": "phdthesis",
    "title": "Fostering Sustained Energy Behavior Change And Increasing Energy Literacy In A Student Housing Energy Challenge",
    "year": "2013",
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-08/10-08.pdf",
    "abstract": "\r\nWe designed the Kukui Cup challenge to foster energy conservation and increase energy literacy. Based on a review of the literature, the challenge combined a variety of elements into an overall game experience, including: real-time energy feedback, goals, commitments, competition, and prizes.\r\n\r\nWe designed a software system called Makahiki to provide the online portion of the Kukui Cup challenge. Energy use was monitored by smart meters installed on each floor of the Hale Aloha residence halls on the University of Hawai\\`i at Manoa campus.\r\n\r\nIn October 2011, we ran the UH Kukui Cup challenge for the over 1000 residents of the Hale Aloha towers. To evaluate the Kukui Cup challenge, I conducted three experiments: challenge participation, energy literacy, and energy use.\r\n\r\nMany residents participated in the challenge, as measured by points earned and actions completed through the challenge website. I measured the energy literacy of a random sample of Hale Aloha residents using an online energy literacy questionnaire administered before and after the challenge. I found that challenge participants' energy knowledge increased significantly compared to non-challenge participants. Positive self-reported energy behaviors increased after the challenge for both challenge participants and non-participants, leading to the possibility of passive participation by the non-challenge participants.\r\n\r\nI found that energy use varied substantially between and within lounges over time. Variations in energy use over time complicated the selection of a baseline of energy use to compare the levels during and after the challenge. The best team reduced its energy use during the challenge by 16\\\\%. However, team energy conservation did not appear to correlate to participation in the challenge, and there was no evidence of sustained energy conservation after the challenge. The problems inherent in assessing energy conservation using a baseline call into question this common practice.\r\n\r\nMy research has generated several contributions, including: a demonstration of increased energy literacy as a result of the challenge, the discovery of fundamental problems with the use of baselines for assessing energy competitions, the creation of two open source software systems, and the creation of an energy literacy assessment instrument.\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "WattDepot",
      "Thesis-PhD"
    ],
    "sortKey": 201303
  },
  {
    "key": "csdl2-10-11",
    "type": "techreport",
    "title": "Literature Review on Smart Grid Cyber Security",
    "year": "2010",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-11/10-11.pdf",
    "abstract": "\r\nThe current U.S. electrical power grid is an out-of-date\r\ninfrastructure, and the Smart Grid is an upgrade that\r\nwill add many new functionalities to meet customers' new\r\npower requirements. Updating a system as complex as the\r\nelectrical power grid has the potential of introducing\r\nnew security vulnerabilities into the system. This\r\ndocument presents a review of the work related to Smart\r\nGrid cyber security. The work reviewed is separated into\r\nfive categories that make up different components of the\r\nSmart Grid: Process Control System (PCS) Security, Smart\r\nMeter Security, Power System State Estimation Security,\r\nSmart Grid Communication Protocol Security, and Smart\r\nGrid Simulation for Security Analysis. The Smart Grid is\r\na large complex system, and it still requires a lot of\r\ncyber security design work.  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-10-11",
    "authors": [
      "Todd Baumeister"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid"
    ],
    "sortKey": 201012
  },
  {
    "key": "csdl2-10-12",
    "type": "misc",
    "title": "Poster: WattDepot: Open Source Software for Energy Data Collection and Analysis",
    "year": 2010,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2010/10-12/10-12.pdf",
    "abstract": "This poster presents the components of the WattDepot system and early experiences with its use.",
    "howpublished": "Behavior, Energy, and Climate Change (BECC) 2010 Poster Session, Sacramento, CA",
    "authors": [
      "Philip M. Johnson",
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup"
    ],
    "sortKey": 201011
  },
  {
    "key": "csdl2-11-01",
    "type": "mastersthesis",
    "title": "Makahiki: An extensible open-source platform for creating energy competitions",
    "year": "2012",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-01/11-01.pdf",
    "abstract": "\r\nDue to rising costs and the questionable future of our non-renewable energy reserves,\r\nindividuals need to become aware of their energy usage. In order to instill these habits earlier,\r\norganizations have held energy competitions to promote the reduction of energy. This also has the\r\nside effect of reducing the energy cost to the organization holding the competition. Typically, these\r\ncompetitions are held in colleges and universities and there are companies that can provide hardware\r\nand software to support them. However, since such solutions can be expensive, we would like a free,\r\nopen source solution that can be used by any organization.\r\nWe created Makahiki to be an open source framework for sustainability competitions. We\r\nalso designed it to be a platform for researchers to investigate user behaviors during an energy competition. However, in order to validate our design, we need to evaluate and test our design. During\r\nthe course of development, we had three evaluation phases. In the mockup phase, we validated our\r\ndesign before doing any implementation. In the onboarding phase, we investigated how individuals\r\nwill interact with the system when they visit it for the first time. Finally, in the beta phase, we simulated the competition on a much smaller scale in order to observe how Makahiki might be used in\r\nan actual competition. Following these evaluations, Makahiki was used to support the 2011 Kukui\r\nCup, which was held in mid-October.\r\nIn summary, we claim the following contributions:\r\n1. An open source system for creating serious games for energy competitions.\r\n2. A research platform on which researchers can observe user behavior during energy competitions.\r\n3. A methodology for evaluating and testing serious games that involve competitions over a\r\nperiod of time.\r\n",
    "school": "University of Hawaii",
    "authors": [
      "George E. Lee"
    ],
    "keywords": [
      "Makahiki",
      "Thesis-MS"
    ],
    "sortKey": 201206
  },
  {
    "key": "csdl2-11-02",
    "type": "inproceedings",
    "title": "Lights Off. Game On. The Kukui Cup: A Dorm Energy Competition",
    "year": "2011",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-02/11-02.pdf",
    "abstract": "\r\nOur research seeks to investigate the relationships\r\namong energy literacy, sustained energy conservation,\r\nand information technology support of behavior change\r\nthrough an advanced dorm energy competition to take\r\nplace in Fall 2011. Game design techniques are used to\r\nattract competition participants, keep them engaged,\r\nand have a lasting impact in their energy use behavior\r\nthrough retained knowledge of energy obtained via the\r\ngame environment.\r\n",
    "booktitle": "Proceedings of the CHI 2011 Workshop on Gamification",
    "address": "Vancouver, Canada",
    "authors": [
      "Robert S. Brewer",
      "George E. Lee",
      "Yongwen Xu",
      "Caterina Desiato",
      "Michelle Katchuck",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Pubs-Workshop",
      "Gamification"
    ],
    "sortKey": 201105
  },
  {
    "key": "csdl2-11-03",
    "type": "inproceedings",
    "title": "The Kukui Cup: Shaping everyday energy use via a dorm energy competition",
    "year": "2011",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-03/11-03.pdf",
    "abstract": "\r\nOur research seeks to investigate the relationships\r\namong energy literacy, sustained energy conservation,\r\nand information technology support of behavior change\r\nthrough an advanced dorm energy competition to take\r\nplace in Fall 2011. The competition will attempt to\r\nfoster changes in participants' everyday energy use by\r\nincreasing their energy literacy and changing their\r\nhabits through activities performed during the\r\ncompetition.\r\n",
    "booktitle": "Proceedings of the CHI 2011 Workshop on Everyday Practice and Sustainable HCI",
    "address": "Vancouver, Canada",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Pubs-Workshop"
    ],
    "sortKey": 201105
  },
  {
    "key": "csdl2-11-07",
    "type": "techreport",
    "title": "Makahiki: An Open Source Game Engine for Energy Education and Conservation",
    "year": "2012",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-07/11-07.pdf",
    "abstract": "\r\n  The rising cost, increasing scarcity, and environmental impact of fossil\r\n  fuels as an energy source makes a transition to cleaner, renewable energy\r\n  sources an international imperative.  This paper presents Makahiki, an open\r\n  source game engine for energy education and conservation. Developed for a\r\n  residence hall energy competition, Makahiki facilitates the implementation of\r\n  \\`\\`serious games'' that motivate players to learn about energy issues,\r\n  improve their intuition about energy consumption, and understand how to use energy more\r\n  efficiently in their normal life.  Initial deployment of Makahiki at the\r\n  University of Hawaii in Fall 2011 has revealed useful insights into its game\r\n  mechanics, ways to improve the next Kukui Cup challenge, and insights\r\n  into the changes we need to make to better facilitate adaptation to other energy contexts.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-11-07",
    "authors": [
      "George E. Lee",
      "Yongwen Xu",
      "Robert S. Brewer",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Makahiki",
      "Sustainability",
      "KukuiCup",
      "Gamification"
    ],
    "sortKey": 201201
  },
  {
    "key": "csdl2-11-08",
    "type": "techreport",
    "title": "Results from the Kukui Cup Anonymous Questionnaire for RAs",
    "year": "2011",
    "month": "Nov",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-08/11-08.pdf",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-11-08",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup"
    ],
    "sortKey": 201111
  },
  {
    "key": "csdl2-11-10",
    "type": "inproceedings",
    "title": "Recognizing recurrent development behaviors corresponding to Android OS release life-cycle",
    "year": "2012",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-10/11-10.pdf",
    "abstract": "\r\nWithin the field of software repository mining\r\n(MSR) researchers deal with a problem of discovery of interesting\r\nand actionable information about software projects. It is\r\na common practice to perform analyzes on the various levels\r\nof abstraction of change events, for example by aggregating\r\nchange-events into time-series. Following this, I investigate\r\nthe applicability of SAX-based approximation and indexing of\r\ntime-series with tf*idf weights in order to discover recurrent\r\nbehaviors within development process. The proposed workflow\r\nstarts by extracting and aggregating of revision control data\r\nand followed by reduction and transformation of aggregated\r\ndata into symbolic space with PAA and SAX. Resulting SAX\r\nwords then grouped into dictionaries associated with software\r\nprocess constraints known to influence behaviors, such as time,\r\nlocation, employment, etc. These, in turn, are investigated with\r\nthe use of tf*idf statistics as a dissimilarity measure in order\r\nto discover behavioral patterns.\r\nAs a proof of the concept I have applied this technique to\r\nsoftware process artifact trails corresponding to Android OS1\r\ndevelopment, where it was able to discover recurrent behaviors\r\nin the \\`\\`new code lines dynamics'' before and after release.\r\nBy building a classifier upon these behaviors, I was able to\r\nsuccessfully recognize pre- and post-release behaviors within\r\nthe same and similar sub-projects of Android OS.",
    "booktitle": "Proceedings of the 2012 International Conference on Software Engineering Research and Practice",
    "address": "Las Vegas, NV",
    "authors": [
      "Pavel Senin"
    ],
    "keywords": [
      "Trajectory",
      "Hackystat",
      "Pubs-Conference"
    ],
    "sortKey": 201205
  },
  {
    "key": "csdl2-11-12",
    "type": "techreport",
    "title": "Results from Energy Audit of Hale Aloha",
    "year": "2012",
    "month": "Jan",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-12/11-12.pdf",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-11-12",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup"
    ],
    "sortKey": 201201
  },
  {
    "key": "csdl2-11-14",
    "type": "misc",
    "title": "Poster: Lights Off.  Game On.  The 2011 Kukui Cup",
    "year": 2011,
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2011/11-14/11-14.pdf",
    "abstract": "This poster presents the Kukui Cup energy challenge and early results from its use in 2011.",
    "howpublished": "Behavior, Energy, and Climate Change (BECC) 2011 Poster Session, Washington, DC.",
    "authors": [
      "Kaveh Abhari",
      "Hana Bowers",
      "Robert S. Brewer",
      "Gregory L. Burgess",
      "Caterina Desiato",
      "Philip M. Johnson",
      "Michelle Katchuck",
      "Risa Khamsi",
      "George E. Lee",
      "Yongwen Xu",
      "Alex Young",
      "Chris Zorn"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup"
    ],
    "sortKey": 201111
  },
  {
    "key": "csdl2-12-02",
    "type": "techreport",
    "title": "A proposal for a smart, sustainable microgrid for the University of Hawaii at Manoa campus",
    "year": "2012",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-02/12-02.pdf",
    "abstract": "\r\nThe state of Hawaii is more dependent on oil than any other state in the nation, using it for most electricity generation as well as transportation. The state-sponsored Hawaii Clean Energy Initiative calls for Hawaii to sharply reduce this dependence, obtaining 70 percent of its energy from clean energy sources by 2030. The University of Hawaii is playing a major role in this effort by conducting research, education, and workforce training in energy and sustainability. The project considers both theoretical and practical aspects of response, control and status on a local, interconnected sub-system of the grid and elucidates its behavior when distributed renewable energy sources are added. The result will be a smart, sustainable microgrid. Four interlinked research projects will be integrated into a graduate and undergraduate education program on smart grids, renewable energy, and energy efficiency.\r\n",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-12-02",
    "authors": [
      "Matthias Fripp",
      "Philip M. Johnson",
      "Alexandar Kavcic",
      "Anthony Kuh",
      "Dora Nakafuji"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid"
    ],
    "sortKey": 201202
  },
  {
    "key": "csdl2-12-06",
    "type": "inproceedings",
    "title": "Makahiki+WattDepot: An open source software stack for next generation energy research and education",
    "year": "2013",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-06/12-06.pdf",
    "abstract": "\r\nSatisfying the radically different requirements and operating assumptions of the next generation smart grid requires new kinds of software that enable research and experimentation into the ways that electrical energy production and consumption can be collected, analyzed, visualized, and provided to consumers. Since 2009, we have been designing, implementing, and evaluating an open source software \\`\\`stack'' to facilitate this research. This software stack consists of two custom systems called WattDepot and Makahiki, along with the open source components they rely upon (Java, Restlet, Postgres, Python, Django, Memcache). In this paper, we detail the novel features of WattDepot and Makahiki, our experiences using them for research and education, and additional ways they can be used for next generation energy research and education.\r\n",
    "booktitle": "Proceedings of the 2013 Conference on Information and Communication Technologies for Sustainability (ICT4S)",
    "authors": [
      "Philip M. Johnson",
      "Yongwen Xu",
      "Robert S. Brewer",
      "Carleton A. Moore",
      "George E. Lee",
      "Andrea Connell"
    ],
    "keywords": [
      "Sustainability",
      "Makahiki",
      "WattDepot",
      "KukuiCup",
      "Pubs-Conference"
    ],
    "sortKey": 201302
  },
  {
    "key": "csdl2-12-08",
    "type": "inproceedings",
    "title": "Beyond kWh: Myths and fixes for energy competition game design",
    "year": "2012",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-08/12-08.pdf",
    "abstract": "\r\n\r\n  The Kukui Cup project investigates the use of \\`\\`meaningful play'' to facilitate energy awareness, conservation and behavioral change.  Each Kukui Cup Challenge combines real world and online environments in an attempt to combine information technology, game mechanics, educational pedagogy, and incentives in a synergistic and engaging fashion.  We challenge players to: (1) acquire more sophistication about energy concepts and (2) experiment with new behaviors ranging from micro (such as turning off the lights or installing a CFL) to macro (such as taking energy-related courses, joining environmental groups, and political/social advocacy.)\r\n\r\n To inform the design of the inaugural 2011 Kukui Cup, we relied heavily on prior collegiate energy competitions, of which there have been over 150 in the past few years.  Published accounts of these competitions indicate that they achieve dramatic reductions in energy usage (a median of 22\\\\%) and cost savings of tens of thousands of dollars.  In our case, the data collected from the 2011 Kukui Cup was generally in agreement, with observed energy reductions of up to 16\\\\% when using data collection and analysis techniques typical to these competitions.  However, our analysis process caused us to look more closely at the methods employed to produce outcome data for energy competitions, with unexpected results.\r\n\r\n We now believe that energy competitions make significant unwarranted assumptions about the data they collect and the way they analyze them, which calls into question both the accuracy of published results from this literature and their effectiveness as serious games.  We believe a closer examination of these issues by the community can help improve the design not only of future energy challenges, but other similar forms of serious games for sustainability.\r\n\r\n In this paper, we describe the Kukui Cup, the design myths it uncovered, and the fixes we propose to improve future forms of meaningful play with respect to energy in particular and serious games in general.\r\n\r\n",
    "booktitle": "Proceedings of Meaningful Play 2012",
    "authors": [
      "Philip M. Johnson",
      "Yongwen Xu",
      "Robert S. Brewer",
      "George E. Lee",
      "Michelle Katchuck",
      "Carleton A. Moore"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Pubs-Conference"
    ],
    "sortKey": 201210
  },
  {
    "key": "csdl2-12-11",
    "type": "article",
    "title": "Searching under the streetlight for useful software analytics",
    "year": "2013",
    "month": "July",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-11/12-11.pdf",
    "abstract": "\r\nFor more than 15 years, researchers at\r\nthe Collaborative Software Development\r\nLaboratory (CSDL) at the University\r\nof Hawaii at Manoa have looked\r\nfor analytics that help developers\r\nunderstand and improve development\r\nprocesses and products. Through this\r\nresearch, we’ve come to believe that the\r\n“searching under the streetlight” metaphor\r\nis useful for understanding both\r\nour research and that of others in this\r\narea.\r\n",
    "journal": "IEEE Software",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "PSP",
      "Leap",
      "Hackystat",
      "Pubs-Journal"
    ],
    "sortKey": 201307
  },
  {
    "key": "csdl2-12-12",
    "type": "inproceedings",
    "title": "Energy Feedback for Smart Grid Consumers: Lessons Learned from the Kukui Cup",
    "year": "2013",
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-12/12-12.pdf",
    "abstract": "\r\nTo achieve the full benefits of the Smart Grid, end users must become active participants in the energy ecosystem. This paper presents the Kukui Cup challenge, a serious game designed around the topic of energy conservation which incorporates a variety of energy feedback visualizations, a multifaceted serious game with online educational activities, and real-world activities such as workshops and excursions. We describe our experiences in developing energy feedback visualizations in the Kukui Cup based on in-lab evaluations and field studies in college residence halls. We learned that energy feedback systems should address these factors: they should be actionable, that domain knowledge must go hand in hand with energy feedback systems, and that this feedback must be \\`\\`sticky'' to lead to changes in behaviors and attitudes.\r\n",
    "booktitle": "Proceedings of Energy 2013",
    "authors": [
      "Robert S. Brewer",
      "Yongwen Xu",
      "George E. Lee",
      "Michelle Katchuck",
      "Carleton A. Moore",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Makahiki",
      "Pubs-Conference"
    ],
    "sortKey": 201303
  },
  {
    "key": "csdl2-12-14",
    "type": "techreport",
    "title": "Encouraging Environmental Literacy on Campus: A Case Study of the Kukui Cup",
    "year": "2012",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2012/12-14/12-14.pdf",
    "abstract": " Environmental literacy measures a person's understanding of ecological\r\n    principles and the ways in which human systems interact with the\r\n    environment. It falls on a continuum of varying degrees of aptitude,\r\n    from nominal to functional to operational, and includes behaviors,\r\n    attitudes, concerns and knowledge about the environment (Roth,\r\n    1992). This skill-set comprises both cognitive and affective types of\r\n    knowledge. A high level of environmental literacy will be necessary to\r\n    navigate a future in which these skills are needed (King,\r\n    2000). Unfortunately, only 1-2 percent of American adults are considered\r\n    environmentally literate (Coyle, 2006).  Environmental education, the\r\n    key for producing environmentally literate citizens, has been on the\r\n    rise since it emerged in the 1970s. At the university level, the number\r\n    of sustainability programs and initiatives is inspiring (Shephard,\r\n    2006).  However, many of the changes in higher education have been on\r\n    physical campuses and not inside the classroom, and sustainability is\r\n    seen more as a prescriptive fix than a radical change in attitude,\r\n    concern, knowledge and behavior (Sherman, 2008; 2011).  A recent trend\r\n    on university campuses has been energy-saving competitions in university\r\n    buildings and on-campus dormitories — over 150 of these competitions\r\n    have taken place in the last few years, with median energy reductions of\r\n    22 percent (Johnson et al, 2011). This paper is a case study of one of\r\n    those competitions: the Kukui Cup at Hawai'i Pacific University\r\n    (HPU). In the three-weeklong competition, students living on campus\r\n    played an online game and participated in associated educational\r\n    activities using resources from the Collaborative Software Design\r\n    Laboratory at the University of Hawaii at Mānoa. The Kukui Cup was an\r\n    attempt to use gamification techniques, competition and technology to\r\n    encourage changes in environmental behaviors, attitudes, concerns and\r\n    knowledge of oncampus residents, with hopes of improving their overall\r\n    levels of energy and environmental literacy. This study aims to answer\r\n    the questions: What is the level of environmental literacy of dorm\r\n    residents at HPU, and how is it affected by participation in an\r\n    on-campus energy-saving competition?  ",
    "institution": "College of Humanities and Social Sciences,\r\n    Hawaii Pacific University, Honolulu, Hawaii",
    "number": "CSDL-12-14",
    "authors": [
      "Sara K. Cobble"
    ],
    "keywords": [
      "Sustainability",
      "Makahiki",
      "KukuiCup"
    ],
    "sortKey": 201212
  },
  {
    "key": "csdl2-13-02",
    "type": "techreport",
    "title": "Making Game Design as Easy as Gaming: Creating an Administrative\r\nInterface for the Makahiki Framework",
    "year": "2013",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2013/13-02/13-02.pdf",
    "abstract": " The usability of an application is a measure of how effectively it can be\r\n   used to perform the tasks it was designed for in its target\r\n   environment. A user interface the toolbars, menus, and other elements\r\n   that control an application determines how quickly and correctly users\r\n   can complete tasks. Makahiki is an application framework for designing\r\n   serious games (games which teach a serious subject) focused on energy\r\n   conservation, recycling, and clean energy issues. A problem with the\r\n   current iteration of Makahiki is that creating competitions in its\r\n   administrator interface is time-consuming. To identify the reasons for\r\n   this problem, I will work with the Makahiki development team to\r\n   distribute surveys to identify usability issues.  For the first survey,\r\n   University of Hawai‘i at M¯anoa students will configure Makahiki for a\r\n   course assignment, self-report the time required for each part of the\r\n   configuration, and describe usability problems. I will develop a design\r\n   tool that will address these problems.  After the design tool is\r\n   completed, some of the first surveys questions will be reused with a\r\n   second group of test subjects, comparing their performance with the\r\n   design tool against the first groups performance with the original\r\n   application on a subset of the same tasks. This will determine if\r\n   configuration times decreased and the usability issues of the original\r\n   application were addressed by the redesign. The collection of usability\r\n   data and the creation of the design tool will address Makahikis\r\n   usability problems while enhancing the understanding of how user\r\n   interface design styles affect usability.  ",
    "institution": "Department of Information and Computer Sciences,\r\n  University of Hawaii, Honolulu, Hawaii 96822",
    "number": "CSDL-13-02",
    "authors": [
      "Jordan Takayama"
    ],
    "keywords": [
      "Sustainability",
      "Makahiki",
      "Thesis-Proposal"
    ],
    "sortKey": 201305
  },
  {
    "key": "csdl2-13-03",
    "type": "inproceedings",
    "title": "SGSEAM: Assessing serious game frameworks from a stakeholder experience perspective",
    "year": "2013",
    "month": "October",
    "note": "http://csdl.ics.hawaii.edu/techreports/2013/13-03/13-03.pdf",
    "abstract": "\r\nAssessment of serious game frameworks is emerging as an\r\nimportant area of research. This paper describes an assessment\r\nmechanism called the Serious Game Stakeholder Experience\r\nAssessment Method (SGSEAM). SGSEAM is designed\r\nto provide detailed insights into the strengths and\r\nshortcomings of serious game frameworks through a stakeholder\r\nperspective based approach. In this paper, we report on\r\nthe use of SGSEAM to assess Makahiki, an open source serious\r\ngame framework for sustainability. Our results provide\r\nuseful insights into both Makahiki as a serious game framework\r\nand SGSEAM as an assessment method.\r\n",
    "booktitle": "Proceedings of the First International Conference on Gameful Design, Research, and Applications (Gamification 2013)",
    "authors": [
      "Yongwen Xu",
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Robert S. Brewer",
      "Jordan Takayama"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Makahiki",
      "Pubs-Conference"
    ],
    "sortKey": 201310
  },
  {
    "key": "csdl2-13-05",
    "type": "article",
    "title": "Three Principles for the Design of Energy Feedback Visualizations",
    "year": "2013",
    "note": "http://csdl.ics.hawaii.edu/techreports/2013/13-05/13-05.pdf",
    "abstract": "\r\nTo achieve the full benefits of the Smart Grid, end users must become active participants in the energy ecosystem. This paper presents the Kukui Cup challenge, a multifaceted serious game designed around the topic of energy conservation that incorporates a variety of energy feedback visualizations, online educational activities, and real-world activities such as workshops and excursions. We describe our experiences developing energy feedback visualizations in the Kukui Cup based on in-lab evaluations and field studies in college residence halls. We learned that energy feedback systems should address these three factors: 1) they should be actionable, 2) domain knowledge should go hand in hand with feedback systems, and 3) feedback must be \\`\\`sticky'' if it is to lead to changes in behaviors and attitudes. We provide examples of both successful and unsuccessful visualizations, and discuss how they address the three factors we have identified.\r\n",
    "journal": "International Journal On Advances in Intelligent Systems",
    "volume": "3 and 4",
    "number": 6,
    "authors": [
      "Robert S. Brewer",
      "Yongwen Xu",
      "George E. Lee",
      "Michelle Katchuck",
      "Carleton A. Moore",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Makahiki",
      "Pubs-Journal"
    ],
    "sortKey": 201300
  },
  {
    "key": "csdl2-13-09",
    "type": "phdthesis",
    "title": "Makahiki and SGSEAM: Design and Evaluation of A Serious Game Framework for Sustainability and Stakeholder Experience Assessment Method",
    "year": "2015",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2013/13-09/13-09.pdf",
    "abstract": "\r\nSustainability education and conservation have become an international imperative due to the rising cost of energy, increasing scarcity of natural resource and irresponsible environmental practices. Over the past decade, running energy and water challenges is the focal point for sustainability efforts at both university and industry campuses. Designers of such challenges typically have three choices for information technology: (a) build their own custom in-house solution; (b) out-source to a commercial provider; or (c) use a minimal tech solution such as a web page and manual posting of data and results.\r\n\r\nNone of these choices are ideal: the custom in-house solution requires sophisticated design and implementation skills; out-sourcing can be financially expensive and impedes evolution; and the minimal tech solution does not fully leverage the possibilities of advanced information technology.\r\n\r\nTo provide a better alternative to these three choices, I have led an effort over the past years to design and implement an open source serious game framework for sustainability called Makahiki. Makahiki implements an extensible framework with a variety of common services for developing sustainability games including authentication; game mechanics such as leaderboards, points, and badges; a variety of built-in games and content focused in sustainability, a responsive user interface, cloud-based deployment, and the ability to customize to the needs of individual organizations.\r\n\r\nMakahiki lowers the overhead to those who would build a custom in-house solution by providing pre-built components. It can lower the financial cost to those who would out-source by providing an open source alternative. Finally, it provides an opportunity for those who would choose a minimal tech solution to instead provide more sophisticated information technology.\r\n\r\nTo provide initial evidence regarding the ability of the Makahiki framework to support sustainability games in different environments, we ran seven challenges at four  organizations: The University of Hawaii at Manoa, Hawaii Pacific University, the East-West Center and Holy Nativity School. While these experiences provided anecdotal evidence for the usefulness of Makahiki, we realized that a more rigorous evaluation of the framework would yield better quality insight into its current quality and requirements for future enhancement.\r\n\r\nUpon review of the literature, we found little research or experience with formal serious game framework assessment. To address this, I have embarked on research to design an assessment mechanism for serious game frameworks, called Serious Game Stakeholder Experience Assessment Method (SGSEAM). SGSEAM is designed to provide detailed insight into the strengths and weaknesses of a serious game framework through a stakeholder perspective based approach. In my research, I applied SGSEAM to Makahiki in order to gain better insight into its strengths and weaknesses as a serious game framework.\r\n\r\nThe contributions of my research thus includes: the Makahiki as the serious game framework for sustainability; the SGSEAM assessment method; the insights into creating and running a variety of real-world serious games for sustainability in different organizations; the insights into managing cloud based serious games; and the insights into serious game framework design and assessment method generated through application of SGSEAM to Makahiki. I hope this research will be of interest to researchers and practitioners across several disciplines: software engineering, game design, and sustainability research.\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Yongwen Xu"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "WattDepot",
      "Makahiki",
      "Thesis-PhD"
    ],
    "sortKey": 201508
  },
  {
    "key": "csdl2-13-10",
    "type": "inproceedings",
    "title": "Three Shifts for Sustainable HCI: Scalable, Sticky, and Multidisciplinary",
    "year": "2014",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2013/13-10/13-10.pdf",
    "abstract": "\r\nWhile there has been a steady increase in sustainable HCI research, there remains a lack of consensus on how to ensure this research moves us towards achieving sustainability. This paper suggests three ways the sustainable HCI community might shift to better address the challenge of achieving global sustainability. First, we should shift from creating only small-scale solutions to systems and solutions that are scalable to many users and environments because the problem of sustainability is vast in scale. Second, we should shift from short-term solutions to \\`sticky' solutions that will continue to have an impact over decades, because sustainability is a problem that will span generations. Third, the sustainable HCI community must shift from an insular focus on our community to a broad engagement and collaboration with other research communities involved in sustainability research.\r\n",
    "booktitle": "Proceedings of the CHI 2014 Workshop: What have we learned? A SIGCHI HCI and Sustainability community workshop",
    "address": "Toronto, Canada",
    "authors": [
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "Pubs-Workshop"
    ],
    "sortKey": 201404
  },
  {
    "key": "csdl2-14-01",
    "type": "techreport",
    "title": "Enabling active participation in the Smart Grid through crowdsourced power quality data ",
    "year": "2014",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-01/14-01.pdf",
    "abstract": "This technical report presents a research project designed to gain insight into the following questions: Can crowdsourced power quality data enable active participation in the Smart Grid?  What are the technical, social, behavioral, and economic requirements for crowdsourced data that make it effective for detection, monitoring, prediction and diagnosis of selected Smart Grid power quality issues? And finally, how can these project outcomes improve \\`\\`citizen science'' in general and the kinds of intrinsic and extrinsic motivators needed for successful outcomes?",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-14-01",
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 201404
  },
  {
    "key": "csdl2-14-02",
    "type": "mastersthesis",
    "title": "Kukini: The challenges in the design, implementation, and evaluation of a digital records transfer tool for the Hawaii State Digital Archives",
    "year": "2014",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-02/14-02.pdf",
    "abstract": "\r\nAt the Hawaii State Archives, there is a need to update their digital records preservation capabilities. Thus, they are currently in the process of implementing a records\r\nsystem which has been designed to store, protect, and preserve digital records. The\r\ntypes of digital records include medical records, annual reports, birth records, etc.\r\nThis records system requires a Digital Records Transfer tool which must provide government agencies of Hawaii with the ability to transfer digital records to the Hawaii\r\nState Archives. Its transfer process must use secure and authenticated methods that\r\ndocument and ensure that the entirety of the \\fles have been transferred uncorrupted.\r\nKukini is a digital records transfer tool that has been designed, implemented, tested,\r\nand evaluated for use within an archival framework. This paper discusses the design,\r\nimplementation, and evaluation of Kukini.\r\n",
    "school": "University of Hawaii",
    "authors": [
      "Keone Hiraide"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 201404
  },
  {
    "key": "csdl2-14-03",
    "type": "mastersthesis",
    "title": "Simplifying sustainability game design: A usability evaluation of the Makahiki virtualmachine installation and the Smart Grid game designer",
    "year": "2014",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-03/14-03.pdf",
    "abstract": "\r\nThe usability of an application is a measure of how effectively it can be used to perform the tasks it was designed for in its target environment. A user interface – the toolbars, menus, and other elements that control an application – determines how quickly and correctly users can complete tasks. Makahiki is an application framework for designing serious games (games which teach a serious subject) focused on energy conservation, recycling, and clean energy issues. Two features were added to Makahiki in response to user feedback: support for a cross-platform installation method for virtual machines, and a simplified drag-and-drop graphical user interface called the Smart Grid Game Designer (SGG). Usability testing data and feedback on these new features was compared to data and feedback from the previous iteration of Makahiki to determine the effect of these features on the user experience. It was found that the virtual machine installation produced significant improvements in user experience and configuration time. However, users who tested the Smart Grid Game Designer reported issues in understanding Makahiki's \"predicate system\" of relationships between game tasks that were similar to issues reported by users of the previous iteration of Makahiki.\r\n",
    "school": "University of Hawaii",
    "authors": [
      "Jordan Takayama"
    ],
    "keywords": [
      "Thesis-BS",
      "Makahiki"
    ],
    "sortKey": 201404
  },
  {
    "key": "csdl2-14-04",
    "type": "mastersthesis",
    "title": "OPQ Cloud: A scalable software framework for the aggregation of distributed power quality data",
    "year": "2014",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-04/14-04.pdf",
    "abstract": "Power quality issues can be caused in a variety of situations. Voltage fluctuations, frequency fluctuations, and harmonics are all power quality issues which can be caused by weather, high penetration of renewables, man-made issues, or other natural phenomena. We designed a software framework which can aggregate crowdsourced distributed power quality measurements in order to study power quality issues over a dense geographic area. ",
    "school": "University of Hawaii, Honolulu, HI",
    "authors": [
      "Anthony J. Christe"
    ],
    "keywords": [
      "Thesis-MS",
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 201404
  },
  {
    "key": "csdl2-14-06",
    "type": "inproceedings",
    "title": "GrammarViz 2.0: A Tool for Grammar-Based Pattern Discovery in Time Series",
    "year": "2014",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-06/14-06.pdf",
    "abstract": "\r\nThe problem of frequent and anomalous patterns discovery in time series has received a lot of attention in the past decade. Addressing the common limitation of existing techniques, which require a pattern length to be known in advance, we recently proposed grammar-based algorithms for efficient discovery of variable length frequent and rare patterns. In this paper we present GrammarViz2.0, an interactive tool that, based on our previous work, implements algorithms for grammar-driven mining and visualization of variable length time series patterns.\r\n",
    "booktitle": "Proceedings of ECML PKDD 2014",
    "address": "Nancy, France",
    "authors": [
      "Pavel Senin",
      "Jessica Lin",
      "Xing Wang",
      "Tim Oates",
      "Sunil Gandhi",
      "Arnold P. Boedihardjo",
      "Crystal Chen",
      "Susan Frankenstein",
      "Manfred Lerner"
    ],
    "keywords": [
      "Trajectory",
      "Pubs-Conference"
    ],
    "sortKey": 201409
  },
  {
    "key": "csdl2-14-07",
    "type": "techreport",
    "title": "The Kukui Cup at UH Manoa: Lessons learned in 2014 and prospects for new partnerships in campus sustainability ",
    "year": "2014",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-07/14-07.pdf",
    "abstract": "This report identifies lessons learned from the Kukui Cup, and opportunities to integrate the Kukui Cup with a comprehensive, institutionalized program of sustainability at the University of Hawaii (UH). This report focuses on findings from the Spring 2014 challenge, based on qualitative interviews with CSDL staff, directors from the UH Residential Life Office, and the Sustainability Coordinator; online surveys distributed to Residential Assistants by the Residential Directors; and participant observation.  ",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-14-07",
    "authors": [
      "Christina Sablan",
      "Leilani Pena",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup"
    ],
    "sortKey": 201405
  },
  {
    "key": "csdl2-14-10",
    "type": "inproceedings",
    "title": "Makahiki: An open source serious game framework for sustainability education and conservation",
    "year": "2014",
    "month": "December",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-10/14-10.pdf",
    "abstract": "\r\nSustainability education and conservation have become an international imperative due to the rising cost of energy, increasing scarcity of natural resource and irresponsible environmental practices. This paper presents Makahiki, an open source serious game framework for sustainability, which implements an extensible framework for different organizations to develop sustainability games. It provides a variety of built-in games and content focused on sustainability; game mechanics such as leaderboards, points, and badges; a variety of common services such as authentication, real-time game analytics and ability to deploy to the cloud, as well as a responsive user interface for both computer and mobile devices. The successful implementation of six sustainability educational games in different organizations provides evidence regarding the ability to customize the Makahiki framework successfully to different environments.\r\n",
    "booktitle": "Proceedings of the 2014 International Conference on Sustainability, Technology, and Education",
    "address": "Taipei City, Taiwan",
    "authors": [
      "Yongwen Xu",
      "Philip M. Johnson",
      "George E. Lee",
      "Carleton A. Moore",
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Makahiki",
      "Pubs-Conference"
    ],
    "sortKey": 201412
  },
  {
    "key": "csdl2-14-11",
    "type": "mastersthesis",
    "title": "Design, Implementation, and Initial Evaluation of OPQBox: A low-cost device for crowdsourced power quality monitoring",
    "year": "2014",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2014/14-11/14-11.pdf",
    "abstract": "The face of power distribution has changed rapidly over the last several decades. Modern grids are evolving to accommodate distributed power generation, and highly variable loads. Furthermore as the devices we use every day become more electronically complex, they become increasingly more sensitive to power quality problems. Distributed power quality monitoring systems have been shown to provide real-time insight on the status of the power grid and even pinpoint the origin of power disturbances. [6] Oahu’s isolated power grid combined with high penetration of distributed renewable energy generators create perfect conditions to assess the feasibility and utility of such a network. Over the last three months we have been collecting power quality data from several locations on Oahu as a pilot study for a larger monitoring system. This papers describes our methodology, hardware and software design and presents a preliminary analysis of the data we collected so far. Lastly this paper presents a design for an improved power quality monitor based upon the pilot study experiences. ",
    "school": "University of Hawaii, Honolulu, HI",
    "authors": [
      "Sergey Negrashov"
    ],
    "keywords": [
      "Thesis-MS",
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 201411
  },
  {
    "key": "csdl2-15-03",
    "type": "article",
    "title": "Is an athletic approach the future of software engineering education?",
    "year": "2016",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2015/15-03/15-03.pdf",
    "abstract": "\r\n\r\nIn the past 10 years, there has been considerable evidence of the harmful effects of multitasking and other distractions on learning. One study found that multitasking students spend only 65 percent of their time actively learning, take longer to complete assignments, make more mistakes, are less able to remember material later, and show less ability to generalize the information they learned for use in other contexts.\r\n\r\nTraditional software engineering education approaches: in-class lectures, unsupervised homework assignments, and occasional projects, create many opportunities for distraction. To address this problem, coauthor Philip M. Johnson developed an “athletic” software engineering education approach, which coauthors Emily Hill and Daniel Port adapted for use in their courses. We wanted to determine if software engineering education could be redesigned to be like an athletic endeavor and whether this would improve learning.\r\n",
    "journal": "IEEE Software",
    "volume": 33,
    "number": 1,
    "authors": [
      "Emily Hill",
      "Philip M. Johnson",
      "Daniel Port"
    ],
    "keywords": [
      "Ath-Soft-Eng",
      "Pubs-Journal"
    ],
    "sortKey": 201601
  },
  {
    "key": "csdl2-16-01",
    "type": "inproceedings",
    "title": "An athletic approach to software engineering education",
    "year": "2016",
    "month": "April",
    "note": "http://csdl.ics.hawaii.edu/techreports/2016/16-01/16-01.pdf",
    "abstract": "\r\nWe present our findings after two years of experience involving three instructors using an “athletic” approach to software engineering education (AthSE). Co-author Johnson developed AthSE in 2013 to address issues he experienced teaching graduate and undergraduate software engineering. Co-authors Port and Hill subsequently adapted the original approach to their own software courses. AthSE is a pedagogy in which the course is organized into a series of skills to be mastered. For each skill, students are given practice \"Workouts\" along with videos showing the instructor performing the Workout both correctly and quickly. Unlike traditional homework assignments, students are advised to repeat the Workout not only until they can complete it correctly, but also as quickly as the instructor. In this experience report we investigate the following question: how can software engineering education be redesigned as an athletic endeavor, and will this provide more efficient and effective learning among students and more rapidly lead them to greater competency and confidence?\r\n",
    "booktitle": "Proceedings of the 29th IEEE conference on software engineering education and training ",
    "address": "Dallas, Texas, USA",
    "authors": [
      "Philip M. Johnson",
      "Daniel Port",
      "Emily Hill"
    ],
    "keywords": [
      "Ath-Soft-Eng",
      "Pubs-Conference"
    ],
    "sortKey": 201604
  },
  {
    "key": "csdl2-16-02",
    "type": "inproceedings",
    "title": "OpenPowerQuality: An Open Source Framework for Power Quality Collection, Analysis, Visualization, and Privacy",
    "year": "2016",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2016/16-02/16-02.pdf",
    "abstract": "As power grids transition from a centralized distribution model to a distributed model, maintaining grid stability requires real-time power quality (PQ) monitoring and visualization. As part of the Open Power Quality (OPQ) project, we designed and deployed a set of open source power quality monitors and an open source cloud-based aggregation and visualization system built with the utility customer in mind. Our aim is to leverage a flexible privacy model combined with inexpensive and easy to use PQ meters in order to deploy a high density power quality monitoring network across the Hawaiian islands. In this paper we describe OPHub, a privacy focused open source PQ visualization along with results of a small scale deployment of our prototype PQ meter across the island of Oahu. Our results demonstrate that OPQ can provide useful power quality data at an order of magnitude less cost than prior approaches.\r\n",
    "booktitle": "Proceedings of the Seventh Conference on Innovative Smart Grid Technologies (ISGT2016) ",
    "address": "Minneapolis, MN, USA",
    "authors": [
      "Anthony J. Christe",
      "Sergey Negrashov",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 201609
  },
  {
    "key": "csdl2-16-03",
    "type": "inbook",
    "title": "Sustainability, Green IT and Education Strategies in the 21st Century",
    "year": "2016",
    "note": "http://csdl.ics.hawaii.edu/techreports/2016/16-03/16-03.pdf",
    "abstract": "Sustainability education and conservation have become an international imperative due to the rising cost of energy, increasing scarcity of natural resource and irresponsible environmental practices. This paper presents Makahiki, an open source serious game framework for sustainability, which implements an extensible framework for different organizations to develop sustainability games. It provides a variety of built-in games and content focused on sustainability; game mechanics such as leaderboards, points, and badges; a variety of common services such as authentication, real-time game analytics and ability to deploy to the cloud, as well as a responsive user interface for both computer and mobile devices. The successful implementation of six sustainability educational games in different organizations provides evidence regarding the ability to customize the Makahiki framework successfully to different environments in both organizational and infrastructure aspects. A serious game stakeholder experience based access method (SGSEAM) was used to formally evaluate Makahiki in order to understand the strengths and weaknesses of Makahiki as a useful serious game framework for sustainability.\r\n  ",
    "editor": "Tomayess Issa",
    "chapter": "Design and evaluation of the Makahiki open source serious game framework for sustainability education",
    "publisher": "Springer",
    "authors": [
      "Yongwen Xu",
      "Philip M. Johnson",
      "George E. Lee",
      "Carleton A. Moore",
      "Robert S. Brewer"
    ],
    "keywords": [
      "Sustainability",
      "KukuiCup",
      "Makahiki",
      "Pubs-Book-Chap"
    ],
    "sortKey": 201600
  },
  {
    "key": "csdl2-16-04",
    "type": "mastersthesis",
    "title": "MANDE: Procedural optimization and measurement of passive acoustic sensor networks for animal observation in marine environments",
    "year": "2016",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2016/16-04/16-04.pdf",
    "abstract": "Static Observation Networks (SONs) are often used in the biological sciences to study animal migration and habitat. These networks are comprised of self-contained, stationary receivers that continuously listen for acoustic transmissions released by sonic tags carried by individual animals. The transmissions released by these tags carry serial identification numbers that can be used to verify that a particular individual was near a given receiver. Because receivers in these networks are stationary, receiver placement is critical to maximizing data recovery. Currently, no open-source automated mechanism exists to facilitate the design of optimal receiver networks. SON design is often governed by loose \"rules of thumb\" and \"by eye\" readings of low resolution bathymetric maps. Moreover, there is no standardized method for evaluating the efficacy of a SON. This paper introduces the Maximal Acoustic Network Designer (MANDe) a system which takes advantage of high-resolution bathymetric data and advanced animal modeling to provide optimal network designs. MANDe also allows for statistical analysis of existing network configurations in order to create efficacy-metrics that can be used to evaluate arbitrary network configurations. This paper will present MANDe’s mathematical and conceptual models and analyze the computational complexities of its methods. ",
    "school": "University of Hawaii, Honolulu, HI",
    "authors": [
      "Gregory L. Burgess"
    ],
    "keywords": [
      "Thesis-MS"
    ],
    "sortKey": 201608
  },
  {
    "key": "csdl2-17-03",
    "type": "inproceedings",
    "title": "OPQ Version 2: An architecture for distributed, real-time, high performance power data acquisition, analysis, and visualization",
    "year": "2017",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2017/17-03/17-03.pdf",
    "abstract": "OpenPowerQuality (OPQ) is a framework that supports end-to-end capture, analysis, and visualizations of distributed real-time power quality (PQ) data. Version 2 of OPQ builds on version 1 by providing higher sampling rates, optional battery backup, end-to-end security, GPS synchronization, pluggable analysis, and a real-time visualization framework. OPQ provides real-time distributed power measurements which allows users to see both local PQ events and grid-wide PQ events. The OPQ project has three principal components: back-end hardware for making power measurements, middleware for data acquisition and analysis, and a front-end providing visualizations. OPQBox2 is a hardware platform that takes PQ measurements, provides onboard analysis, and securely transfers data to our middleware. The OPQ middleware performs filtering on the OPQBox2 sensor data and performs high-level PQ analysis. The results of our PQ analysis and real-time state of the sensor network are displayed using OPQView. We’ve collected distributed PQ data from locations across Oahu, Hawaii and have demonstrated our ability to detect both local and grid-wide power quality events.\r\n",
    "booktitle": "Proceedings of the 7th International Conference on CYBER Technology in Automation, Control, and Intelligent Systems",
    "address": "Honolulu, Hawaii",
    "authors": [
      "Anthony J. Christe",
      "Sergey Negrashov",
      "Philip M. Johnson",
      "Dylan Nakahodo",
      "David Badke",
      "David Aghalarpout"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality",
      "Pubs-Conference"
    ],
    "sortKey": 201708
  },
  {
    "key": "csdl2-17-04",
    "type": "article",
    "title": "GrammarViz 3.0: Interactive Discovery of Variable-length Time Series Patterns",
    "year": "2018",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2017/17-04/17-04.pdf",
    "abstract": "\r\nThe problems of recurrent and anomalous pattern discovery in time series, e.g., motifs and discords, respectively, have received a lot of attention from researchers in the past decade. However, since the pattern search space is usually intractable, most existing detection algorithms require that the patterns have discriminative characteristics and have its length known in advance and provided as input, which is an unreasonable requirement for many real-world problems. In addition, patterns of similar structure, but of different lengths may co-exist in a time series.\r\n\r\nAddressing these issues, we have developed algorithms for variable-length time series pattern discovery that are based on symbolic discretization and grammar inference—two techniques whose combination enables the structured reduction of the search space and discovery of the candidate patterns in linear time.\r\n\r\nIn this work, we present GrammarViz 3.0—a software package that provides implementations of proposed algorithms and graphical user interface for interactive variable-length time series pattern discovery. The current version of the software provides an alternative grammar inference algorithm that improves the time series motif discovery workflow, and introduces an experimental procedure for automated discretization parameter selection that builds upon the minimum cardinality maximum cover principle and aids the time series recurrent and anomalous pattern discovery.\r\n",
    "journal": "ACM Transactions on Knowledge Discovery from Data",
    "volume": 12,
    "number": 1,
    "authors": [
      "Pavel Senin",
      "Jessica Lin",
      "Xing Wang",
      "Tim Oates",
      "Sunil Gandhi",
      "Arnold P. Boedihardjo",
      "Crystal Chen",
      "Susan Frankenstein"
    ],
    "keywords": [
      "Trajectory",
      "Pubs-Journal"
    ],
    "sortKey": 201802
  },
  {
    "key": "csdl2-17-05",
    "type": "mastersthesis",
    "title": "RadGrad: Using degree planning, social networking, and gamification to improve academic, professional, and social engagement during the undergraduate computer science degree experience",
    "year": "2017",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2017/17-05/17-05.pdf",
    "abstract": "A casual analysis of the Hawaii technology community site, TechHui, suggests that over the past decade, recent alumni and current undergraduates of the Information and Computer Science (ICS) program at the University of Hawaii at Manoa (UHM) have experienced several problems with various academic, professional, and social aspects of their ICS experience. Existing degree planning systems such as STAR, Starfish by Hobsons, Blackboard Planner and Coursicle fail to provide the specific support that ICS students need to create a complete and comprehensive degree plan. Existing academic social networks such as LinkedIn, TechHui and Rate My Professors fail to connect students closely with professors and alumni. Current popular video games suggest that several gamification features could encourage ICS students to achieve higher goals. A new system called RadGrad combines degree planning, social networking, and gamification in a novel way that aims to give ICS undergraduates the support they need to succeed and redefines what it means to have a successful degree experience. The overall goal of this thesis is to justify the initial RadGrad system design and establish baseline values for future studies. A baseline student survey conducted in Spring 2017 reveals current and more detailed student perceptions on the academic, professional, and social aspects of the ICS degree experience prior to using RadGrad. These baseline results can be used in a future study to measure if RadGrad has had any effects on the students. ",
    "school": "University of Hawaii, Honolulu, HI",
    "authors": [
      "Amy Takayesu"
    ],
    "keywords": [
      "Thesis-MS",
      "RadGrad"
    ],
    "sortKey": 201708
  },
  {
    "key": "csdl2-18-01",
    "type": "techreport",
    "title": "DEP/RadGrad: Enhancing individualized learning plans and communities of practice to improve engagement, retention, and diversity in undergraduate computer science education",
    "year": "2018",
    "month": "January",
    "note": "http://csdl.ics.hawaii.edu/techreports/2018/18-01/18-01.pdf",
    "abstract": "This is the project description component of a proposal to the Institutional and Community Transformation track, Exploration and Design Tier, of the IUSE:EHR program. It describes a framework (Degree Experience Plans) and a technology (RadGrad) which is designed to improve engagement, retention, and diversity in undergraduate computer science education. ",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-18-01",
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Peter Leong",
      "Seungoh Paek"
    ],
    "keywords": [
      "Sustainability",
      "RadGrad"
    ],
    "sortKey": 201801
  },
  {
    "key": "csdl2-19-02",
    "type": "inproceedings",
    "title": "A Transient Classification System Implementation on an Open Source Distributed Power Quality Network",
    "year": "2019",
    "month": "June",
    "note": "http://csdl.ics.hawaii.edu/techreports/2019/19-02/19-02.pdf",
    "abstract": "Capturing and classifying power quality phenomena is important for the smooth functioning of electrical grids.  This paper presents methods for classifying the four types of transients (impulsive, arcing, oscillatory, and periodic notching) specified in the IEEE 1159 Power Quality standard. Our methods implement a tractable algorithm, which applies well understood signal processing methods and statistical inference for feature extraction and decision making. We tested our methods on simulated power quality disturbances in order to demonstrate the capabilities of the system. The results of this research include an operational implementation of a transient classifier for Open Power Quality, an open source distributed power quality network. Additional functionality can be easily incorporated into the system to extend the utility of our methods, such as a meta-analysis to capture higher level network wide events.\r\n",
    "booktitle": "Proceedings of the Ninth International Conference on Smart Grids, Green Communications and IT Energy-aware Technologies",
    "address": "Athens, Greece",
    "authors": [
      "Charles Dickens",
      "Anthony J. Christe",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality",
      "Pubs-Conference"
    ],
    "sortKey": 201906
  },
  {
    "key": "csdl2-19-03",
    "type": "article",
    "title": "Design and Evaluation of an Athletic Approach to Software Engineering Education",
    "year": "2019",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2019/19-03/19-03.pdf",
    "abstract": "\r\nModern web application development provides an attractive application area for introductory software engineering education, as students have direct experience with the domain and it provides them with the potential to gain practical, real-world skills. Achieving this potential requires the development of competency with a multiple component tech stack for web application development, which is challenging to acquire within a single semester. In this research, we designed, implemented, and evaluated a new pedagogy called “athletic software engineering” which is intended to help students efficiently and effectively acquire competency with a multiple component tech stack as a precursor to a web application development project. We evaluated the pedagogy over 4 years and six semesters with 286 students and found strong evidence for its effectiveness.\r\n",
    "journal": "ACM Transactions on Computing Education",
    "volume": 19,
    "number": 4,
    "authors": [
      "Philip M. Johnson"
    ],
    "keywords": [
      "Pubs-Journal",
      "Ath-Soft-Eng"
    ],
    "sortKey": 201908
  },
  {
    "key": "csdl2-20-06",
    "type": "techreport",
    "title": "Improved understanding of student interests in Computer Science through Page Tracking Analysis",
    "year": "2020",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-06/20-06.pdf",
    "abstract": "This technical report presents a proposal for quantitative research designed to improve the understanding of RadGrad user behavior.",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-20-06",
    "authors": [
      "Gian Calica"
    ],
    "keywords": [
      "RadGrad"
    ],
    "sortKey": 202005
  },
  {
    "key": "csdl2-20-05",
    "type": "techreport",
    "title": "Why Don’t Students Use RadGrad? A Qualitative Study of Factors That Inhibit RadGrad Adoption",
    "year": "2020",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-05/20-05.pdf",
    "abstract": "This technical report presents a proposal for qualitative research designed to uncover factors that inhibit students from using RadGrad.",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-20-05",
    "authors": [
      "Quinne Uchida"
    ],
    "keywords": [
      "RadGrad"
    ],
    "sortKey": 202005
  },
  {
    "key": "csdl2-20-04",
    "type": "techreport",
    "title": "\"InternBit\" for Automated Discovery of Relevant Internship Opportunities based on RadGrad User Data",
    "year": "2020",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-04/20-04.pdf",
    "abstract": "This technical report presents a proposal for research on a system called InternBit, which will help provide students with high quality recommendations for Internships using their RadGrad profile information.",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-20-04",
    "authors": [
      "Mirabela Medallon"
    ],
    "keywords": [
      "RadGrad"
    ],
    "sortKey": 202005
  },
  {
    "key": "csdl2-20-03",
    "type": "techreport",
    "title": "UH Microgrid Pilot Study",
    "year": "2020",
    "month": "February",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-03/20-03.pdf",
    "abstract": "This technical report presents a set of weekly reports on data collected by a deployment of 15 OPQ Boxes across the UH Manoa microgrid from October 2019 to February 2020. In summary, these reports indicate the following:\r\n\r\nOPQ provides useful, complementary information about the UH Microgrid not available from building-level utility meters. For example, OPQ can distinguish between power quality events that are local (i.e. arise and are contained within) a single building versus power quality events that are “grid-local” (i.e. are present within a subset of buildings on campus) vs. “grid wide” power quality events (i.e. occur throughout the UH campus and mostly likely originated from the external Oahu grid).\r\n\r\nOPQ meters are accurate and precise. We performed a variety of validity tests by comparing OPQ data to build-level utility meters. OPQ data correlates well to building-level utility meters.\r\n\r\nThe UH Microgrid, at least since October 2019, has been generally stable. That said, the OPQ deployment has found interesting cyclical phenomena in the grid that are so far unexplained and may warrant further investigation.",
    "institution": "University of Hawaii, Honolulu, HI",
    "number": "CSDL-20-03",
    "authors": [
      "Philip M. Johnson",
      "Anthony J. Christe",
      "Sergey Negrashov"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 202002
  },
  {
    "key": "csdl2-19-04",
    "type": "inproceedings",
    "title": "RadGrad: Removing the 'Extra' from Extracurricular to Improve Student Engagement, Retention, and Diversity",
    "year": "2020",
    "month": "March",
    "note": "http://csdl.ics.hawaii.edu/techreports/2019/19-04/19-04.pdf",
    "abstract": "\r\nRadGrad is a curriculum initiative implemented via a web-based application that combines features of social networks, degree planners, and serious games. RadGrad redefines the traditional meaning of \\`\\`progress'' and \\`\\`success'' in the undergraduate computer science degree program, with the ultimate goal of improving student engagement, diversity, and retention.  In this paper, we relate RadGrad to other curriculum initiatives, overview its key functionality, present results from an evaluation conducted during its first year of deployment, and discuss our lessons learned and future directions.\r\n",
    "booktitle": "Proceedings of the 51st ACM Technical Symposium on Computer Science Education (SIGCSE 2020)",
    "authors": [
      "Philip M. Johnson",
      "Carleton A. Moore",
      "Peter Leong",
      "Seungoh Paek"
    ],
    "keywords": [
      "RadGrad",
      "Pubs-Conference"
    ],
    "sortKey": 202003
  },
  {
    "key": "csdl2-20-01",
    "type": "phdthesis",
    "title": "LAHA: A framework for adaptive optimization of distributed sensor frameworks",
    "year": "2020",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-01/20-01.pdf",
    "abstract": "\r\nDistributed Sensor Networks (DSNs) face a myriad of technical challenges. This dissertation examines two important DSN challenges.\r\n\r\n One problem is converting \\`\\`primitive\" sensor data into actionable products and insights. For example, a DSN for power quality (PQ) might gather primitive data in the form of raw voltage waveforms and produce actionable insights in the form of the ability to predict when PQ events are going to occur by observing cyclical data. For another example, a DSN for infrasound might gather primitive data in the form of microphone counts and produce actionable insight in the form of determining what, when, and where the signal came from. To make progress towards this problem, DSNs typically implement one or more of the following strategies: detecting signals in the primitive data (deciding if something is there), classification of signals from primitive data (deciding what is there), and localization of signals (when and from where did the signals come). Further, DSNs make progress towards this problem by forming relationships between primitive data by finding correlations between spatial attributes, temporal attributes, and by associating metadata with primitive data to provide contextual information not collected by the DSN. These strategies can be employed recursively. As an example, the result of aggregating typed primitive data provides a new higher level of typed data which contains more context than the data from which is was derived from. This new typed data can itself be aggregated into new, higher level types and also participate in relationships.\r\n\r\n A second important challenge is managing data volume. Most DSNs produce large amounts of (increasingly multimodal) primitive data, of which only a tiny fraction (the signals) is actually interesting and useful. The DSN can utilize one of two strategies: keep all of the information and primitive data forever, or employ some sort of strategy for systematically discarding (hopefully uninteresting and not useful) data. As sensor networks scale in size, the first strategy becomes unfeasible. Therefore, DSNs must find and implement a strategy for managing large amounts of sensor data. The difficult part is finding an effective and efficient strategy deciding what data is interesting and must be kept and what data to discard.\r\n\r\n This dissertation investigates the design, implementation, and evaluation of the Laha framework, which provides new insight into both of these problems. First, the Laha framework provides a multi-leveled representation for structuring and processing DSN data. The structure and processing at each level is designed with the explicit goal of turning low-level data into actionable insights. Second, each level in the framework implements a \\`\\`time-to-live\" (TTL) strategy for data within the level. This strategy states that data must either \\`\\`progress\" upwards through the levels towards more abstract, useful representations within a fixed time window, or be discarded and lost forever. The TTL strategy is useful because when implemented, it allows DSN designers to calculate upper bounds on data storage at each level of the framework and supports graceful degradation of DSN performance.\r\n\r\n There are several smaller, but still important problems that exist within the context of these two larger problems. Examples of the smaller problems that Laha hopes to overcome in transit to the larger goals include optimization of triggering, detection, and classification, building a model of sensing field topology, optimizing sensor energy use, optimizing bandwidth, and providing predictive analytics for DSNs.\r\n\r\n Laha provides four contributions to the area of DSNs. First, the Laha design, a novel abstract distributed sensor network that provides useful properties relating to data management. Second, an evaluation of the Laha abstract framework through the deployment of two Laha-compliant reference implementations, validated data collection, and several experiments that are used to either confirm or deny the benefits touted by Laha. Third, two Laha-compliant reference implementations, OPQ and Lokahi, which can be used to form DSNs for the collection of distributed power quality signals and the distributed collection of infrasound signals. Fourth, a set of implications for modern distributed sensor networks as a result of the evaluation of Laha.\r\n\r\n The major claim of this dissertation is that the Laha Framework provides a generally useful representation for real-time high-volume DSNs that address several major issues that modern DSNs face.\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Anthony J. Christe"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality",
      "Thesis-PhD"
    ],
    "sortKey": 202005
  },
  {
    "key": "csdl2-20-02",
    "type": "phdthesis",
    "title": "Design, Implementation, and Evaluation of Napali: A novel distributed sensor network for improved power quality monitoring",
    "year": "2020",
    "month": "May",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-02/20-02.pdf",
    "abstract": "\r\nToday's big data world heavily relies upon providing precise, timely, and actionable intelligence, while being burdened by the ever increasing need for data cleaning and preprocessing.\r\nWhile in the case of ingesting large quantity of unstructured data this problem is unavoidable, when it comes to sensor networks built for a specific purpose, such as anomaly detection, some of that computation can be moved to the edge of the network.\r\nThis thesis concerns the special case of sensor networks tailored for monitoring the power grid for anomalous behavior.\r\nThese networks monitor power delivery infrastructure with the intent of finding deviations from the nominal steady state, across multiple geographical locations.\r\nAforementioned deviations, known as power quality anomalies, may originate, and be localized to the location of the sensor, or may affect a sizable portion of the power grid.\r\nThe difficulty of evaluating the extent of a power quality anomaly stems directly from their short temporal and variable geographical impact.\r\nI present a novel distributed power quality monitoring system called Napali which relies on extracted metrics from individual meters and their temporal locality in order to intelligently detect anomalies and extract raw data within temporal window and geographical areas of interest.\r\n\r\nThe claims of this thesis are that Napali outperforms existing power quality monitoring gridwide event detection methods in resource utilization and sensitivity.\r\nFurthermore, Napali residential monitoring is capable of power grid monitoring without deployment on the high voltage transmission lines.\r\nFinal claim of this thesis is that Napali capability of extracting portions of the events which did not pass the critical thresholds used in other detection methods allows for better localization of power quality disturbances.\r\nNapali claim validation was performed through deployment at the University of Hawaii.\r\nFifteen OPQ Box devices, designed specifically to operate with Napali were located in various locations on campus.\r\nData collected from these monitors was compared with smart meters already deployed across the University.\r\nAdditionally, Napali was compared with standard methods of power quality event detection running along side the Napali systems.\r\n\r\nNapali methodology outperformed the standard methods of power quality monitoring in resource consumption, event quality and sensitivity.\r\nAdditionally, I was able to validate that residential utility monitoring is capable of event detection and localization without monitoring higher levels of the power grid hierarchy.\r\nFinally, as a demonstration of Napali capabilities, I showed how data collected by my framework can be used to partition the power delivery infrastructure without prior knowledge of the power grid topology.\r\n\r\n",
    "school": "University of Hawaii, Department of Information and Computer Sciences",
    "authors": [
      "Sergey Negrashov"
    ],
    "keywords": [
      "Sustainability",
      "SmartGrid",
      "PowerQuality",
      "Thesis-PhD"
    ],
    "sortKey": 202005
  },
  {
    "key": "csdl2-20-07",
    "type": "article",
    "title": "Design, Implementation, and Evaluation of Open Power Quality",
    "year": "2020",
    "month": "August",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-07/20-07.pdf",
    "abstract": "\r\nModern electrical grids are transitioning from a centralized generation architecture to an architecture with significant distributed, intermittent generation. This transition means that the formerly sharp distinction between energy producers (utility companies) and consumers (residences, businesses, etc.) are blurring: end-users both produce and consume energy, making energy management and public policy more complex. The goal of the Open Power Quality (OPQ) project is to design and implement a low cost, distributed power quality sensor network that provides useful new forms of information about modern electrical grids to producers, consumers, researchers, and policy makers. In 2019, we performed a pilot study involving the deployment of an OPQ sensor network at the University of Hawaii microgrid for three months. Results of the pilot study validate the ability of OPQ to collect accurate power quality data in a way that provides useful new insights into electrical grids.\r\n",
    "journal": "Energies",
    "volume": 13,
    "number": 15,
    "authors": [
      "Anthony J. Christe",
      "Sergey Negrashov",
      "Philip M. Johnson"
    ],
    "keywords": [
      "Pubs-Journal",
      "Sustainability",
      "SmartGrid",
      "PowerQuality"
    ],
    "sortKey": 202008
  },
  {
    "key": "csdl2-20-08",
    "type": "article",
    "title": "Beyond course work: expanding what's valued in computer science degree programs",
    "year": "2020",
    "month": "September",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-08/20-08.pdf",
    "abstract": "\r\nAs the field of Computer Science (CS) continues to diversify and expand, the need for undergraduates to explore career possibilities and develop personalized study paths has never been greater. This reality presents a challenge for CS departments. How do the students striving to become competent professionals in an ever-changing field of study? How do they do this efficiently and effectively? This study addresses such questions by introducing RadGrad, an online application combining features of social networks, degree planners and serious games.\r\n",
    "journal": "Journal of Applied Research in Higher Education",
    "volume": 12,
    "number": 4,
    "authors": [
      "Seungoh Paek",
      "Peter Leong",
      "Philip M. Johnson",
      "Carleton A. Moore"
    ],
    "keywords": [
      "Pubs-Journal",
      "RadGrad"
    ],
    "sortKey": 202009
  },
  {
    "key": "csdl2-20-09",
    "type": "article",
    "title": "Is GPA enough? A platform for promoting computer science undergraduates' pursuit of career related extracurricular activities",
    "year": "2021",
    "month": "November",
    "note": "http://csdl.ics.hawaii.edu/techreports/2020/20-09/20-09.pdf",
    "abstract": "\r\nDespite the perceived value of extracurricular experience, higher education relies heavily on Grade Point Average (GPA) as a measure of undergraduates‘ academic success. When used as a singular standard assessment, GPA, which is based on student progress and completion of coursework, may inadvertently steer undergraduates away from valuable out-of-class experiences that might enhance their employability after graduation. With this premise in mind, the current study proposes to supplement GPA scores in an undergraduate Computer Science program with a wholistic assessment known as an Innovation, Competency, and Experience (ICE) score. The ICE score is a point system for documenting and rewarding students‘ extracurricular activities, in addition to their GPA scores. We designed and developed a web-based technology platform called RadGrad to implement ICE scores and promote student engagement and participation in extracurricular activities. Preliminary data shows that over 36\\% of students started to use RadGrad, even though its use was completely voluntary. More than half of those students planned and participated in various extracurricular activities, ultimately earning ICE points. Importantly, the ICE score deployed through RadGrad demonstrates the potential value of a supplemental assessment to GPA, which can promote extracurricular experiences relevant to students‘ future careers beyond coursework.\r\n",
    "journal": "International Journal of Technology in Education and Science",
    "volume": 5,
    "number": 1,
    "authors": [
      "Seungoh Paek",
      "Peter Leong",
      "Philip M. Johnson",
      "Carleton A. Moore"
    ],
    "keywords": [
      "Pubs-Journal",
      "RadGrad"
    ],
    "sortKey": 202111
  }
]
